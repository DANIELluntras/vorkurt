{
    "pipes": [],
    "interfaces": [
        {
            "name": "DataTable",
            "id": "interface-DataTable-1374c010854aab3bef772d3897086172",
            "file": "src/app/shared/utils/interfaces/data-table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTable {\r\n  athlete: string;\r\n  age: number;\r\n  country: string;\r\n  sport: string;\r\n  year: number;\r\n  date: Date | String;\r\n}\r\n\r\nexport interface IConfigRouter {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface ITimer {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface ITmsRouter extends IConfigRouter {\r\n  icon: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "athlete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | String",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "sport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IAccount",
            "id": "interface-IAccount-e993e1ce5738b79d390258d2d316200b",
            "file": "src/app/shared/utils/interfaces/account/account.type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAccount {\r\n  owner: string;\r\n  repo: string;\r\n  link: string;\r\n  id: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "owner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "repo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IActionMaterialColumn",
            "id": "interface-IActionMaterialColumn-1e81d0db0df96b2b451b8c8e07a94765",
            "file": "src/app/shared/utils/interfaces/shared/iAction-material-column.type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IActionMaterialColumn {\r\n  iconClass: string;\r\n  classCss: string;\r\n  method: (row?: any) => void;\r\n}\r\n",
            "properties": [
                {
                    "name": "classCss",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "method",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IAuthInfoResponse",
            "id": "interface-IAuthInfoResponse-784edb3dd96b72bb79fdf8565e986920",
            "file": "src/app/shared/utils/interfaces/auth/auth-info-user.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAuthInfoUser {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface IAuthInfoResponse {\r\n  uid: string;\r\n  email: string;\r\n  emailVerified: boolean;\r\n  isAnonymous: boolean;\r\n  lastLoginAt: string;\r\n  apiKey: string;\r\n  appName: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "apiKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "emailVerified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isAnonymous",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "lastLoginAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IAuthInfoUser",
            "id": "interface-IAuthInfoUser-784edb3dd96b72bb79fdf8565e986920",
            "file": "src/app/shared/utils/interfaces/auth/auth-info-user.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAuthInfoUser {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface IAuthInfoResponse {\r\n  uid: string;\r\n  email: string;\r\n  emailVerified: boolean;\r\n  isAnonymous: boolean;\r\n  lastLoginAt: string;\r\n  apiKey: string;\r\n  appName: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IBreadCrumb",
            "id": "interface-IBreadCrumb-9415e60a8db401fe623354e7083c8660",
            "file": "src/app/shared/utils/interfaces/shared/bread-crumb.type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IBreadCrumb {\r\n  label: string;\r\n  url: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IBreadCrumb",
            "id": "interface-IBreadCrumb-9415e60a8db401fe623354e7083c8660-1",
            "file": "src/app/shared/utils/interfaces/transport/ibread-crumb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IBreadCrumb {\r\n  label: string;\r\n  url: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IBreadCrumb-1"
        },
        {
            "name": "IConfigRouter",
            "id": "interface-IConfigRouter-1374c010854aab3bef772d3897086172",
            "file": "src/app/shared/utils/interfaces/data-table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTable {\r\n  athlete: string;\r\n  age: number;\r\n  country: string;\r\n  sport: string;\r\n  year: number;\r\n  date: Date | String;\r\n}\r\n\r\nexport interface IConfigRouter {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface ITimer {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface ITmsRouter extends IConfigRouter {\r\n  icon: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IDataSourceMaterialTable",
            "id": "interface-IDataSourceMaterialTable-d224a67323e417d596251ddb8c6d9866",
            "file": "src/app/shared/utils/interfaces/shared/iData-source-material-table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IActionMaterialColumn } from './iAction-material-column.type';\r\n\r\nexport interface IDataSourceMaterialTable<T> {\r\n  model: T;\r\n  editable: boolean;\r\n  actions: IActionMaterialColumn[];\r\n}\r\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IActionMaterialColumn[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IDialoConfig",
            "id": "interface-IDialoConfig-91b1f07ca17a2b62c31198d14b048f68",
            "file": "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { PopUpLoginComponent } from '../../../../module/header/pop-up-login/pop-up-login.component';\r\nimport { OverlayPopUpRef } from './overlay-pop-up.ref';\r\n\r\ninterface IDialoConfig {\r\n  panelClass?: string;\r\n  hasBackdrop?: boolean;\r\n  backdropClass?: string;\r\n}\r\n\r\nconst DEFAULT_CONFIG: IDialoConfig = {\r\n  hasBackdrop: true,\r\n  backdropClass: 'dark-backdrop',\r\n  panelClass: 'elixir-dialog-panel',\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OverlayPopUpService {\r\n  dialogRef: any;\r\n  overlayRef: any;\r\n  filePortal: any;\r\n\r\n  constructor(private _overlay: Overlay) {}\r\n\r\n  open(event: MouseEvent, config: IDialoConfig = {}) {\r\n    const dialogConfig = { ...DEFAULT_CONFIG, ...config };\r\n    this.overlayRef = this.createOverlay(dialogConfig, event);\r\n    this.dialogRef = new OverlayPopUpRef(this.overlayRef);\r\n    this.filePortal = new ComponentPortal(PopUpLoginComponent);\r\n    this.overlayRef.attach(this.filePortal);\r\n\r\n    this.overlayRef\r\n      .backdropClick()\r\n      .subscribe((_: any) => this.dialogRef.close());\r\n    return this.overlayRef;\r\n  }\r\n\r\n  closeOverlay() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private createOverlay(config: IDialoConfig, event: MouseEvent) {\r\n    const overlayConfig = this.getOverlayConfig(config, event);\r\n    return this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  private getOverlayConfig(config: IDialoConfig, event: MouseEvent) {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .left(event.clientX - 176 + 'px')\r\n      .top(event.clientY + 3 + 'px');\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: config.hasBackdrop,\r\n      backdropClass: config.backdropClass,\r\n      panelClass: config.panelClass,\r\n      scrollStrategy: this._overlay.scrollStrategies.block(),\r\n      positionStrategy,\r\n    });\r\n    return overlayConfig;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "backdropClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "panelClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IMarketData",
            "id": "interface-IMarketData-7e78f358c272740c95878bbb9fa162b9",
            "file": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWrapperPlBilling {\r\n  status: IPlBillingStatus;\r\n  data: IPlBillingData[];\r\n}\r\n\r\ninterface IPlBillingStatus {\r\n  elapsed: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IPlBillingData {\r\n  id: string;\r\n  slug: string;\r\n  symbol: string;\r\n  metrics: IMetricData;\r\n}\r\n\r\ninterface IMetricData {\r\n  market_data: IMarketData;\r\n}\r\n\r\ninterface IMarketData {\r\n  price_usd: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "price_usd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IMetricData",
            "id": "interface-IMetricData-7e78f358c272740c95878bbb9fa162b9",
            "file": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWrapperPlBilling {\r\n  status: IPlBillingStatus;\r\n  data: IPlBillingData[];\r\n}\r\n\r\ninterface IPlBillingStatus {\r\n  elapsed: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IPlBillingData {\r\n  id: string;\r\n  slug: string;\r\n  symbol: string;\r\n  metrics: IMetricData;\r\n}\r\n\r\ninterface IMetricData {\r\n  market_data: IMarketData;\r\n}\r\n\r\ninterface IMarketData {\r\n  price_usd: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "market_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMarketData",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "INewItemTypes",
            "id": "interface-INewItemTypes-adf39d863a23014469c7ed3d2ce7eb42",
            "file": "src/app/module/transport/item/utils/interfaces/iNew-item.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface INewItemTypes {\r\n  bulkMixingFamilyId: string;\r\n  categoryId: string;\r\n  compartmentTypeProfileId: string;\r\n  coreDiameter: string;\r\n  defaultPck: boolean;\r\n  description: string;\r\n  diameterPerShipUnit: string;\r\n  hazaradous: boolean;\r\n  hazmatPckTypeId: string;\r\n  innerPackPckUnit: string;\r\n  innerPackSize: string;\r\n  innerPckSizeUOMcode: string;\r\n  itemId: string;\r\n  loadConfigRuleRank: string;\r\n  mixable: boolean;\r\n  pckItemId: string;\r\n  pckItemTypeId: string;\r\n  pckUnit: string;\r\n  pckWeight: string;\r\n  pckWidth: string;\r\n  priority: string;\r\n  thuProfileId: string;\r\n  unitHeight: string;\r\n  unitLength: string;\r\n  unitVolume: string;\r\n  unitWidth: string;\r\n  uuid: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "bulkMixingFamilyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "categoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "compartmentTypeProfileId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "coreDiameter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "defaultPck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "diameterPerShipUnit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "hazaradous",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "hazmatPckTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "innerPackPckUnit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "innerPackSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "innerPckSizeUOMcode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "itemId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "loadConfigRuleRank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "mixable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "pckItemId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pckItemTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "pckUnit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "pckWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "pckWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "priority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "thuProfileId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "unitHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "unitLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "unitVolume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "unitWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "uuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "INewRepository",
            "id": "interface-INewRepository-ab4f43479882cf73aae8474093fa71ca",
            "file": "src/app/shared/utils/interfaces/newRepository/new-repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface INewRepository {\r\n  template: string;\r\n  id: string;\r\n  check: boolean;\r\n  icon: string;\r\n}\r\n\r\nexport interface IWrapperRepository {\r\n  template: string;\r\n  owner: string;\r\n  repositoryName: string;\r\n  description?: string;\r\n  available: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "check",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IOffsetPopUp",
            "id": "interface-IOffsetPopUp-1981e69ab06c61453b25a9a42fcee45d",
            "file": "src/app/module/header/pop-up-login/pop-up-state.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport interface IOffsetPopUp {\r\n  offsetX: number;\r\n  offsetY: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PopUpStateService {\r\n  private _statePopUpLogin: BehaviorSubject<boolean> =\r\n    new BehaviorSubject<boolean>(false);\r\n  statePopUp$ = this._statePopUpLogin.asObservable();\r\n\r\n  private _coordinates: Subject<IOffsetPopUp> = new Subject<IOffsetPopUp>();\r\n  coordinates$ = this._coordinates.asObservable();\r\n\r\n  coordinates(value: IOffsetPopUp) {\r\n    this._coordinates.next(value);\r\n  }\r\n\r\n  statePopLogin(value: boolean) {\r\n    this._statePopUpLogin.next(value);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "offsetX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "offsetY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IPlBillingData",
            "id": "interface-IPlBillingData-7e78f358c272740c95878bbb9fa162b9",
            "file": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWrapperPlBilling {\r\n  status: IPlBillingStatus;\r\n  data: IPlBillingData[];\r\n}\r\n\r\ninterface IPlBillingStatus {\r\n  elapsed: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IPlBillingData {\r\n  id: string;\r\n  slug: string;\r\n  symbol: string;\r\n  metrics: IMetricData;\r\n}\r\n\r\ninterface IMetricData {\r\n  market_data: IMarketData;\r\n}\r\n\r\ninterface IMarketData {\r\n  price_usd: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "metrics",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMetricData",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IPlBillingStatus",
            "id": "interface-IPlBillingStatus-7e78f358c272740c95878bbb9fa162b9",
            "file": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWrapperPlBilling {\r\n  status: IPlBillingStatus;\r\n  data: IPlBillingData[];\r\n}\r\n\r\ninterface IPlBillingStatus {\r\n  elapsed: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IPlBillingData {\r\n  id: string;\r\n  slug: string;\r\n  symbol: string;\r\n  metrics: IMetricData;\r\n}\r\n\r\ninterface IMetricData {\r\n  market_data: IMarketData;\r\n}\r\n\r\ninterface IMarketData {\r\n  price_usd: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "elapsed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "timestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ITimer",
            "id": "interface-ITimer-1374c010854aab3bef772d3897086172",
            "file": "src/app/shared/utils/interfaces/data-table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTable {\r\n  athlete: string;\r\n  age: number;\r\n  country: string;\r\n  sport: string;\r\n  year: number;\r\n  date: Date | String;\r\n}\r\n\r\nexport interface IConfigRouter {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface ITimer {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface ITmsRouter extends IConfigRouter {\r\n  icon: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ITmsRouter",
            "id": "interface-ITmsRouter-1374c010854aab3bef772d3897086172",
            "file": "src/app/shared/utils/interfaces/data-table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTable {\r\n  athlete: string;\r\n  age: number;\r\n  country: string;\r\n  sport: string;\r\n  year: number;\r\n  date: Date | String;\r\n}\r\n\r\nexport interface IConfigRouter {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface ITimer {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface ITmsRouter extends IConfigRouter {\r\n  icon: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": [],
            "extends": "IConfigRouter"
        },
        {
            "name": "IWrapperPlBilling",
            "id": "interface-IWrapperPlBilling-7e78f358c272740c95878bbb9fa162b9",
            "file": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWrapperPlBilling {\r\n  status: IPlBillingStatus;\r\n  data: IPlBillingData[];\r\n}\r\n\r\ninterface IPlBillingStatus {\r\n  elapsed: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IPlBillingData {\r\n  id: string;\r\n  slug: string;\r\n  symbol: string;\r\n  metrics: IMetricData;\r\n}\r\n\r\ninterface IMetricData {\r\n  market_data: IMarketData;\r\n}\r\n\r\ninterface IMarketData {\r\n  price_usd: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPlBillingData[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPlBillingStatus",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IWrapperRepository",
            "id": "interface-IWrapperRepository-ab4f43479882cf73aae8474093fa71ca",
            "file": "src/app/shared/utils/interfaces/newRepository/new-repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface INewRepository {\r\n  template: string;\r\n  id: string;\r\n  check: boolean;\r\n  icon: string;\r\n}\r\n\r\nexport interface IWrapperRepository {\r\n  template: string;\r\n  owner: string;\r\n  repositoryName: string;\r\n  description?: string;\r\n  available: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "available",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "owner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "repositoryName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c272876575a459f98fe21bb5fb309ef",
            "file": "src/app/shared/utils/interfaces/user/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  uid?: string;\r\n  displayName: string;\r\n  email?: string;\r\n  photoURL?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "photoURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AbstractApiServiceService",
            "id": "injectable-AbstractApiServiceService-383a8c1233799fb60aa6dfaf14d64532",
            "file": "src/app/shared/utils/services/abstract/abstract-api-service.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbstractApiServiceService {\r\n  constructor() {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "AccountService",
            "id": "injectable-AccountService-00c0cecda01b87e378bd62e5e887af59",
            "file": "src/app/shared/utils/services/account/account.service.ts",
            "properties": [
                {
                    "name": "_repoData",
                    "defaultValue": "new BehaviorSubject<\r\n    IAccount[]\r\n  >([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<IAccount[]>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataRepo$",
                    "defaultValue": "this._repoData.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "filterDataFromQuery",
                    "args": [
                        {
                            "name": "select",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "select",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "repoData",
                    "args": [
                        {
                            "name": "data",
                            "type": "IAccount[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IAccount[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ConnectionService } from '../firebase/connection.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IAccount } from '../../interfaces';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  private _repoData: BehaviorSubject<IAccount[]> = new BehaviorSubject<\r\n    IAccount[]\r\n  >([]);\r\n  dataRepo$ = this._repoData.asObservable();\r\n\r\n  constructor(private _firebase: ConnectionService) {}\r\n\r\n  repoData(data: IAccount[]) {\r\n    this._repoData.next(data);\r\n  }\r\n\r\n  filterDataFromQuery(select: string) {\r\n    this._firebase.data\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((changeData) =>\r\n          changeData.map((c) => {\r\n            let a = c.payload.doc.data();\r\n            return {\r\n              owner: a.owner,\r\n              repo: a.repo,\r\n              link: a.link,\r\n              id: c.payload.doc.id,\r\n            };\r\n          })\r\n        )\r\n      )\r\n      .subscribe((data) => {\r\n        data.filter((e) => e.repo.toUpperCase().includes(select));\r\n      });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-a73355323dc24832700cf36bbbb7694c",
            "file": "src/app/shared/utils/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "afAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularFireAuth",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | any",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "checkLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "forgotPassword",
                    "args": [
                        {
                            "name": "passwordResetEmail",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "passwordResetEmail",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDataFromFirebase",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "FirebaseError",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "FirebaseError",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signInWithEmail",
                    "args": [
                        {
                            "name": "infoUser",
                            "type": "IAuthInfoUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "infoUser",
                            "type": "IAuthInfoUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "infoUser",
                            "type": "IAuthInfoUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "infoUser",
                            "type": "IAuthInfoUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, NgZone } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { UserService } from '../user/user-service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../interfaces/user/user';\r\nimport { IAuthInfoUser } from '../../interfaces/auth/auth-info-user.types';\r\nimport { SpinnerStateService } from '../../../component/spinner/spinner-state.service';\r\nimport firebase from 'firebase/compat';\r\nimport { throwError } from 'rxjs';\r\nimport { ConnectionService } from '../firebase';\r\nimport FirebaseError = firebase.FirebaseError;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  user: User | any;\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    public afAuth: AngularFireAuth,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _sppinerService: SpinnerStateService,\r\n    private _connectionService: ConnectionService\r\n  ) {\r\n    this.checkLocalStorage();\r\n  }\r\n\r\n  getDataFromFirebase() {\r\n    this.afAuth.authState.subscribe((auth) => {\r\n      if (auth) {\r\n        this.user = auth;\r\n        console.log('Authenticated');\r\n        this._userService.setUserLoggedIn(auth);\r\n      } else {\r\n        this._sppinerService.setStateBehaviorSpinner(false);\r\n        console.log('Not authenticated');\r\n      }\r\n    });\r\n  }\r\n\r\n  signInWithEmail(infoUser: IAuthInfoUser) {\r\n    return this.afAuth\r\n      .signInWithEmailAndPassword(infoUser.email, infoUser.password)\r\n      .then((result) => {\r\n        this._userService.setUserLoggedIn(result);\r\n        this.ngZone.run(() => {\r\n          this._router.navigate(['account']);\r\n          this._sppinerService.setStateBehaviorSpinner(true);\r\n        });\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        this._router.navigate(['/auth/l']);\r\n        this._sppinerService.setStateBehaviorSpinner(false);\r\n        return throwError(err);\r\n      });\r\n  }\r\n\r\n  signUp(infoUser: IAuthInfoUser) {\r\n    return this.afAuth\r\n      .createUserWithEmailAndPassword(infoUser.email, infoUser.password)\r\n      .then((resp) => {\r\n        this._sppinerService.setStateBehaviorSpinner(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('error2');\r\n        this._sppinerService.setStateBehaviorSpinner(false);\r\n        // console.info(error.code)\r\n        return 2;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this._userService.clearLocalStorage();\r\n    this.afAuth.signOut().then(() => {\r\n      this._router.navigate(['/', 'auth/l']);\r\n    });\r\n  }\r\n\r\n  forgotPassword(passwordResetEmail: string) {\r\n    this._sppinerService.setStateBehaviorSpinner(true);\r\n    return this.afAuth\r\n      .sendPasswordResetEmail(passwordResetEmail)\r\n      .then(() => {\r\n        window.alert('Password reset email send, check your inbox!');\r\n      })\r\n      .catch((err) => {\r\n        if (err.code === 'auth/user-not-found')\r\n          window.alert('User Is not created');\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        this._sppinerService.setStateBehaviorSpinner(false);\r\n      });\r\n  }\r\n\r\n  private checkLocalStorage() {\r\n    if (!localStorage.getItem('user')) {\r\n      this.getDataFromFirebase();\r\n    } else {\r\n      console.log('localStorage ready');\r\n    }\r\n  }\r\n\r\n  private handleError(error: FirebaseError) {\r\n    // Handle the HTTP error here\r\n    console.log('handle Error');\r\n    {\r\n      if (error.name === 'FirebaseError') {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_connectionService",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_connectionService",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ConnectionService",
            "id": "injectable-ConnectionService-a8f5f2d96683f0831750917850a47eef",
            "file": "src/app/shared/utils/services/firebase/connection.service.ts",
            "properties": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_dbPath",
                    "defaultValue": "'/repository'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "repositoryRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularFirestoreCollection<any>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "user",
                    "defaultValue": "JSON.parse(this._localStorage.getResource('user'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "allDateTwoColection",
                    "args": [
                        {
                            "name": "parentCollection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "secondCollection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "parentCollection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "secondCollection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDB",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "documentID",
                            "type": "UserCredential",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "documentID",
                            "type": "UserCredential",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createItems",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createRepository",
                    "args": [
                        {
                            "name": "data",
                            "type": "IWrapperRepository",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IWrapperRepository",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUrl",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateData",
                    "args": [
                        {
                            "name": "data",
                            "type": "INewRepository",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "INewRepository",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreCollection,\r\n} from '@angular/fire/compat/firestore';\r\nimport { INewRepository, IWrapperRepository } from '../../interfaces';\r\nimport { INewItemTypes } from '../../../../module/transport/item/utils/interfaces/iNew-item.types';\r\nimport firebase from 'firebase/compat';\r\nimport UserCredential = firebase.auth.UserCredential;\r\nimport { LocalStorageDataService } from '../abstract';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConnectionService {\r\n  repositoryRef: AngularFirestoreCollection<any>;\r\n  private _dbPath = '/repository';\r\n  user = JSON.parse(this._localStorage.getResource('user'));\r\n\r\n  constructor(\r\n    private _db: AngularFirestore,\r\n    private _localStorage: LocalStorageDataService\r\n  ) {\r\n    this.repositoryRef = _db.collection(this._dbPath);\r\n  }\r\n\r\n  private _data: string;\r\n\r\n  get data() {\r\n    return this.repositoryRef;\r\n  }\r\n\r\n  setUrl(url: string) {\r\n    this.repositoryRef = this._db.collection(url);\r\n    this._dbPath = url;\r\n  }\r\n\r\n  updateData(data: INewRepository) {\r\n    this._dbPath = '/templateff';\r\n\r\n    return this._db\r\n      .collection(this._dbPath)\r\n      .add(data)\r\n      .then((resp) => resp);\r\n  }\r\n\r\n  createRepository(data: IWrapperRepository) {\r\n    this._dbPath = '/repositoryNew';\r\n\r\n    return this._db\r\n      .collection(this._dbPath)\r\n      .add(data)\r\n      .then((resp) => resp);\r\n  }\r\n\r\n  createItems(data: any, path?: string) {\r\n    return this._db\r\n      .collection('/users')\r\n      .doc(this.user.user.email)\r\n      .collection(path)\r\n      .add(data);\r\n  }\r\n\r\n  createDB(data: any, documentID: UserCredential) {\r\n    this._dbPath = `/users`;\r\n    this._db.collection(this._dbPath).doc(documentID.user.email).set(data);\r\n  }\r\n\r\n  allDateTwoColection(parentCollection: string, secondCollection: string) {\r\n    return this._db\r\n      .collection(parentCollection)\r\n      .doc(this.user.user.email)\r\n      .collection(secondCollection);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_db",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_localStorage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "_db",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_localStorage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "data": {
                    "name": "data",
                    "getSignature": {
                        "name": "data",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "DataTableService",
            "id": "injectable-DataTableService-376b392f1ede1eb324975b5c7510cd28",
            "file": "src/app/shared/utils/services/data-table/data-table.service.ts",
            "properties": [
                {
                    "name": "_dataStoreBehavior",
                    "defaultValue": "new BehaviorSubject<any>(\r\n    []\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataStore$",
                    "defaultValue": "this._dataStoreBehavior.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "dataStoreBehavior",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataTableService {\r\n  private _dataStoreBehavior: BehaviorSubject<any> = new BehaviorSubject<any>(\r\n    []\r\n  );\r\n  dataStore$ = this._dataStoreBehavior.asObservable();\r\n\r\n  constructor(private _httpClient: HttpClient) {}\r\n\r\n  dataStoreBehavior(data: string) {\r\n    return this._httpClient.get(data).subscribe((resp) => {\r\n      this._dataStoreBehavior.next(resp);\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ElixTooltipService",
            "id": "injectable-ElixTooltipService-b048a31acc55df7f55ea0179624d28a7",
            "file": "src/app/shared/utils/services/overlay/elix-tooltip.service.ts",
            "properties": [
                {
                    "name": "_rendered2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "_getConfigAtArrow",
                    "args": [
                        {
                            "name": "overlayRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "overlayRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "overlayRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "overlayRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initTooltip",
                    "args": [
                        {
                            "name": "templateRef",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewContainerRef",
                            "type": "ViewContainerRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "origin",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "templateRef",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewContainerRef",
                            "type": "ViewContainerRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "origin",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Injectable,\r\n  Renderer2,\r\n  RendererFactory2,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  Overlay,\r\n} from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { configOverlay } from '../../../../config/global/overlay';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ElixTooltipService {\r\n  private _rendered2: Renderer2;\r\n\r\n  constructor(\r\n    private _overlay: Overlay,\r\n    private _rendererFactory: RendererFactory2\r\n  ) {\r\n    this._rendered2 = _rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  initTooltip(\r\n    templateRef: TemplateRef<any>,\r\n    viewContainerRef: ViewContainerRef,\r\n    origin?: HTMLElement,\r\n    width?: number\r\n  ) {\r\n    const portalHost = new TemplatePortal(templateRef, viewContainerRef);\r\n\r\n    const overlayRef = this._overlay.create({\r\n      positionStrategy: this._overlay\r\n        .position()\r\n        .flexibleConnectedTo(origin)\r\n        .withPositions([\r\n          configOverlay.BOTTOM,\r\n          configOverlay.TOP,\r\n          configOverlay.LEFT,\r\n          configOverlay.RIGHT,\r\n        ]),\r\n      hasBackdrop: true,\r\n      backdropClass: 'cdk-overlay-transparent-backdrop',\r\n      panelClass: 'vorkurt-tooltip',\r\n      width: width,\r\n    });\r\n    this._getConfigAtArrow(overlayRef);\r\n    overlayRef.attach(portalHost);\r\n    overlayRef.backdropClick().subscribe(() => this.close(overlayRef));\r\n    return overlayRef;\r\n  }\r\n\r\n  close(overlayRef?: any) {\r\n    overlayRef.detach();\r\n    overlayRef.dispose();\r\n  }\r\n\r\n  private _getConfigAtArrow(overlayRef: any) {\r\n    const tooltipPosition = (\r\n      overlayRef.getConfig()\r\n        .positionStrategy as FlexibleConnectedPositionStrategy\r\n    ).positions[0];\r\n    const arrow: HTMLSpanElement = this._rendered2.createElement('span');\r\n    arrow.classList.add('elix__arrow');\r\n    const tooltipHeight = <number>overlayRef.getConfig().height;\r\n    const tooltipWidth = overlayRef.getConfig().width;\r\n    switch (tooltipPosition) {\r\n      case configOverlay.LEFT:\r\n        arrow.classList.add('elix__arrow-right');\r\n        arrow.style.transform = 'rotate(230deg)';\r\n        arrow.style.top = 'calc(50% + -6.5px)';\r\n        arrow.style.left = 'calc(100%)';\r\n\r\n        break;\r\n      case configOverlay.RIGHT:\r\n        arrow.classList.add('elix__arrow-left');\r\n\r\n        break;\r\n      case configOverlay.TOP:\r\n        arrow.classList.add('elix__arrow-bottom');\r\n        arrow.style.transform = 'rotate(135deg)';\r\n\r\n        break;\r\n      case configOverlay.BOTTOM:\r\n        arrow.classList.add('elix__arrow-top');\r\n        arrow.style.left = '50%';\r\n        arrow.style.top = 'calc(100% + -15px)';\r\n        arrow.style.transform = 'rotate(315deg)';\r\n        break;\r\n    }\r\n    overlayRef.overlayElement.appendChild(arrow);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GlobalErrorHandleService",
            "id": "injectable-GlobalErrorHandleService-2e039976b9c88888ce14bd61d640a0ee",
            "file": "src/app/shared/utils/services/abstract/global-error-handle.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandleService {\r\n  constructor(private _injectable: Injector) {}\r\n\r\n  handleError(error: any) {\r\n    const routerProperty = this._injectable.get(Router);\r\n    console.warn(`${routerProperty.url}`);\r\n\r\n    if (error instanceof HttpErrorResponse) {\r\n      console.log(`Error from backend ${error.status}`);\r\n      console.log(`Response body ${error.message}`);\r\n    } else {\r\n      console.warn(`An error occurred ${error.message}`);\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_injectable",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "_injectable",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ItemListService",
            "id": "injectable-ItemListService-d3eb64b9ecb51dc4c4895955693f4677",
            "file": "src/app/module/transport/item/utils/services/item-list.service.ts",
            "properties": [
                {
                    "name": "_dataList",
                    "defaultValue": "new BehaviorSubject<\r\n    INewItemTypes[]\r\n  >(new Array<INewItemTypes>())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<INewItemTypes[]>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataComming$",
                    "defaultValue": "this._dataList.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "user",
                    "defaultValue": "JSON.parse(this._localStorage.getResource('user'))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "collection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "document",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "document",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retriveData",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateItem",
                    "args": [
                        {
                            "name": "collection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "document",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collection",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "document",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { INewItemTypes } from '../interfaces';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { LocalStorageDataService } from '../../../../../shared/utils/services';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ItemListService {\r\n  user = JSON.parse(this._localStorage.getResource('user'));\r\n  private _dataList: BehaviorSubject<INewItemTypes[]> = new BehaviorSubject<\r\n    INewItemTypes[]\r\n  >(new Array<INewItemTypes>());\r\n  dataComming$ = this._dataList.asObservable();\r\n\r\n  constructor(\r\n    private _db: AngularFirestore,\r\n    private _localStorage: LocalStorageDataService\r\n  ) {}\r\n\r\n  retriveData(value: any) {\r\n    this._dataList.next(value);\r\n  }\r\n\r\n  updateItem(collection: string, document: string, data: any) {\r\n    this._db\r\n      .collection('/users')\r\n      .doc(this.user.user.email)\r\n      .collection(collection)\r\n      .doc(document)\r\n      .update(data);\r\n  }\r\n\r\n  delete(collection: string, document: string) {\r\n    this._db\r\n      .collection('/users')\r\n      .doc(this.user.user.email)\r\n      .collection(collection)\r\n      .doc(document)\r\n      .delete();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_db",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_localStorage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_db",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_localStorage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LocalStorageDataService",
            "id": "injectable-LocalStorageDataService-d4d0d5ce6dde029188ca42a513bfbd96",
            "file": "src/app/shared/utils/services/abstract/local-storage-data.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "clearAllValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteResource",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getResource",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setResource",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LocalStorageDataService {\r\n  constructor() {}\r\n\r\n  getResource(key: string): string | null {\r\n    return localStorage.getItem(key);\r\n  }\r\n\r\n  setResource(key: string, value: any) {\r\n    localStorage.setItem(key, value);\r\n  }\r\n\r\n  deleteResource(key: string) {\r\n    return localStorage.removeItem(key);\r\n  }\r\n\r\n  clearAllValue() {\r\n    return localStorage.clear();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "NewItemService",
            "id": "injectable-NewItemService-7da5a512d37c30e12d999a98408a2015",
            "file": "src/app/module/transport/item/utils/services/new-item.service.ts",
            "properties": [
                {
                    "name": "_dataSendOnDatabase",
                    "defaultValue": "new BehaviorSubject<INewItemTypes>({} as INewItemTypes)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<INewItemTypes>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_podsIsOnThePipe",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataSend$",
                    "defaultValue": "this._dataSendOnDatabase.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "podsOnPipe$",
                    "defaultValue": "this._podsIsOnThePipe.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Observable</p>\n",
                    "line": 16,
                    "rawdescription": "\n\nObservable\n"
                }
            ],
            "methods": [
                {
                    "name": "dataSend",
                    "args": [
                        {
                            "name": "value",
                            "type": "INewItemTypes",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "INewItemTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "valueOnPodsNext",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { INewItemTypes } from '../interfaces/iNew-item.types';\r\nimport { ConnectionService } from '../../../../../shared/utils/services/firebase/connection.service';\r\nimport { ItemListService } from './item-list.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewItemService {\r\n  private _podsIsOnThePipe: Subject<boolean> = new Subject<boolean>();\r\n  /**\r\n   * Observable\r\n   */\r\n\r\n  podsOnPipe$ = this._podsIsOnThePipe.asObservable();\r\n  private _dataSendOnDatabase: BehaviorSubject<INewItemTypes> =\r\n    new BehaviorSubject<INewItemTypes>({} as INewItemTypes);\r\n  dataSend$ = this._dataSendOnDatabase.asObservable();\r\n\r\n  constructor(\r\n    private _connectionFirebase: ConnectionService,\r\n    private _itemList: ItemListService\r\n  ) {}\r\n\r\n  valueOnPodsNext(value: boolean) {\r\n    this._podsIsOnThePipe.next(value);\r\n  }\r\n\r\n  dataSend(value: INewItemTypes) {\r\n    let dataSource: INewItemTypes[] = [];\r\n    this._itemList.dataComming$.subscribe((resp) => (dataSource = resp));\r\n    this._dataSendOnDatabase.next(value);\r\n    dataSource.findIndex((resp) => resp.categoryId === value.categoryId);\r\n    if (\r\n      dataSource.findIndex((resp) => resp.categoryId === value.categoryId) ===\r\n      -1\r\n    ) {\r\n      return this._connectionFirebase\r\n        .createItems(value, 'item_new')\r\n        .catch((response) => console.log(response));\r\n    }\r\n    throw new Error('Duplicate Item');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_connectionFirebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_itemList",
                        "type": "ItemListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_connectionFirebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_itemList",
                        "type": "ItemListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "NewRepositoryService",
            "id": "injectable-NewRepositoryService-340c320aa8fa38c7c25ccb20138bbf8f",
            "file": "src/app/shared/utils/services/newRepository/new-repository.service.ts",
            "properties": [
                {
                    "name": "_newRepo",
                    "defaultValue": "new BehaviorSubject<\r\n    INewRepository[]\r\n  >([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<INewRepository[]>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "newRepo$",
                    "defaultValue": "this._newRepo.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "newRepoRetriveData",
                    "args": [
                        {
                            "name": "data",
                            "type": "INewRepository[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "INewRepository[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { INewRepository } from '../../interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewRepositoryService {\r\n  private _newRepo: BehaviorSubject<INewRepository[]> = new BehaviorSubject<\r\n    INewRepository[]\r\n  >([]);\r\n  newRepo$ = this._newRepo.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  newRepoRetriveData(data: INewRepository[]) {\r\n    this._newRepo.next(data);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "type": "injectable"
        },
        {
            "name": "OverlayPopUpRef",
            "id": "injectable-OverlayPopUpRef-2e03f5a4fe3c24c7db26aa94f4ba1395",
            "file": "src/app/shared/utils/services/overlay/overlay-pop-up.ref.ts",
            "properties": [],
            "methods": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { OverlayRef } from '@angular/cdk/overlay';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OverlayPopUpRef {\r\n  constructor(private _overlayRef: OverlayRef) {}\r\n\r\n  close() {\r\n    this._overlayRef.dispose();\r\n    this._overlayRef.detach();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "_overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OverlayPopUpService",
            "id": "injectable-OverlayPopUpService-91b1f07ca17a2b62c31198d14b048f68",
            "file": "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts",
            "properties": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "filePortal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "overlayRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methods": [
                {
                    "name": "closeOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createOverlay",
                    "args": [
                        {
                            "name": "config",
                            "type": "IDialoConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "IDialoConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOverlayConfig",
                    "args": [
                        {
                            "name": "config",
                            "type": "IDialoConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "IDialoConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "IDialoConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "IDialoConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { PopUpLoginComponent } from '../../../../module/header/pop-up-login/pop-up-login.component';\r\nimport { OverlayPopUpRef } from './overlay-pop-up.ref';\r\n\r\ninterface IDialoConfig {\r\n  panelClass?: string;\r\n  hasBackdrop?: boolean;\r\n  backdropClass?: string;\r\n}\r\n\r\nconst DEFAULT_CONFIG: IDialoConfig = {\r\n  hasBackdrop: true,\r\n  backdropClass: 'dark-backdrop',\r\n  panelClass: 'elixir-dialog-panel',\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OverlayPopUpService {\r\n  dialogRef: any;\r\n  overlayRef: any;\r\n  filePortal: any;\r\n\r\n  constructor(private _overlay: Overlay) {}\r\n\r\n  open(event: MouseEvent, config: IDialoConfig = {}) {\r\n    const dialogConfig = { ...DEFAULT_CONFIG, ...config };\r\n    this.overlayRef = this.createOverlay(dialogConfig, event);\r\n    this.dialogRef = new OverlayPopUpRef(this.overlayRef);\r\n    this.filePortal = new ComponentPortal(PopUpLoginComponent);\r\n    this.overlayRef.attach(this.filePortal);\r\n\r\n    this.overlayRef\r\n      .backdropClick()\r\n      .subscribe((_: any) => this.dialogRef.close());\r\n    return this.overlayRef;\r\n  }\r\n\r\n  closeOverlay() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private createOverlay(config: IDialoConfig, event: MouseEvent) {\r\n    const overlayConfig = this.getOverlayConfig(config, event);\r\n    return this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  private getOverlayConfig(config: IDialoConfig, event: MouseEvent) {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .left(event.clientX - 176 + 'px')\r\n      .top(event.clientY + 3 + 'px');\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: config.hasBackdrop,\r\n      backdropClass: config.backdropClass,\r\n      panelClass: config.panelClass,\r\n      scrollStrategy: this._overlay.scrollStrategies.block(),\r\n      positionStrategy,\r\n    });\r\n    return overlayConfig;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "_overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OverlayService",
            "id": "injectable-OverlayService-6c6e0bf1eca4c99a236497f1c938a132",
            "file": "src/app/shared/utils/services/overlay/overlay.service.ts",
            "properties": [
                {
                    "name": "component",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentPortal<any>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "overlayRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "closeOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "display",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "exampleOverlayComponent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "exampleOverlayComponent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OverlayService {\r\n  private overlayRef: any;\r\n  private component: ComponentPortal<any>;\r\n\r\n  constructor(private _ovelay: Overlay) {}\r\n\r\n  display(element: any, exampleOverlayComponent: any) {\r\n    const target = element;\r\n    this.overlayRef = this._ovelay.create({\r\n      hasBackdrop: true,\r\n      backdropClass: 'cdk-overlay-transparent-backdrop',\r\n      panelClass: 'vorkurt-overlay',\r\n      positionStrategy: this._ovelay\r\n        .position()\r\n        .flexibleConnectedTo(target)\r\n        .withPositions([\r\n          {\r\n            originX: 'start',\r\n            originY: 'bottom',\r\n            overlayX: 'start',\r\n            overlayY: 'top',\r\n          },\r\n          {\r\n            originX: 'center',\r\n            originY: 'top',\r\n            overlayX: 'end',\r\n            overlayY: 'bottom',\r\n          },\r\n          {\r\n            originX: 'end',\r\n            originY: 'top',\r\n            overlayX: 'start',\r\n            overlayY: 'top',\r\n          },\r\n          {\r\n            originX: 'start',\r\n            originY: 'top',\r\n            overlayX: 'end',\r\n            overlayY: 'top',\r\n          },\r\n        ]),\r\n    });\r\n    this.component = new ComponentPortal(exampleOverlayComponent);\r\n    this.overlayRef.attach(this.component);\r\n    this.overlayRef.backdropClick().subscribe(() => {\r\n      this.overlayRef.detach();\r\n      this.overlayRef.dispose();\r\n    });\r\n  }\r\n\r\n  closeOverlay() {\r\n    this.overlayRef.detach();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ovelay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_ovelay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PlBillingService",
            "id": "injectable-PlBillingService-4ea1693650ef09b941fbc01b5103a9e3",
            "file": "src/app/shared/utils/services/pl-billing/pl-billing.service.ts",
            "properties": [
                {
                    "name": "_walletInformation",
                    "defaultValue": "new BehaviorSubject<IWrapperPlBilling>({} as IWrapperPlBilling)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<IWrapperPlBilling>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "walletData$",
                    "defaultValue": "this._walletInformation.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "dataNextCoins",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { IWrapperPlBilling } from '../../interfaces/pl-billing/wrapper-pl-billing';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PlBillingService {\r\n  private _walletInformation: BehaviorSubject<IWrapperPlBilling> =\r\n    new BehaviorSubject<IWrapperPlBilling>({} as IWrapperPlBilling);\r\n  walletData$ = this._walletInformation.asObservable();\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  dataNextCoins() {\r\n    return this._http.get<IWrapperPlBilling>(\r\n      'https://data.messari.io/api/v1/assets?fields=id,slug,symbol,metrics/market_data/price_usd'\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PopUpStateService",
            "id": "injectable-PopUpStateService-1981e69ab06c61453b25a9a42fcee45d",
            "file": "src/app/module/header/pop-up-login/pop-up-state.service.ts",
            "properties": [
                {
                    "name": "_coordinates",
                    "defaultValue": "new Subject<IOffsetPopUp>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<IOffsetPopUp>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_statePopUpLogin",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "coordinates$",
                    "defaultValue": "this._coordinates.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "statePopUp$",
                    "defaultValue": "this._statePopUpLogin.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "coordinates",
                    "args": [
                        {
                            "name": "value",
                            "type": "IOffsetPopUp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IOffsetPopUp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "statePopLogin",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport interface IOffsetPopUp {\r\n  offsetX: number;\r\n  offsetY: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PopUpStateService {\r\n  private _statePopUpLogin: BehaviorSubject<boolean> =\r\n    new BehaviorSubject<boolean>(false);\r\n  statePopUp$ = this._statePopUpLogin.asObservable();\r\n\r\n  private _coordinates: Subject<IOffsetPopUp> = new Subject<IOffsetPopUp>();\r\n  coordinates$ = this._coordinates.asObservable();\r\n\r\n  coordinates(value: IOffsetPopUp) {\r\n    this._coordinates.next(value);\r\n  }\r\n\r\n  statePopLogin(value: boolean) {\r\n    this._statePopUpLogin.next(value);\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "SpinnerStateService",
            "id": "injectable-SpinnerStateService-9c8d57abc7c0176e515b01a9bef79a58",
            "file": "src/app/shared/component/spinner/spinner-state.service.ts",
            "properties": [
                {
                    "name": "_stateSpiner",
                    "defaultValue": "new BehaviorSubject<boolean>(\r\n    false\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getState$",
                    "defaultValue": "this._stateSpiner.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "setStateBehaviorSpinner",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SpinnerStateService {\r\n  private _stateSpiner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(\r\n    false\r\n  );\r\n\r\n  constructor() {}\r\n\r\n  getState$ = this._stateSpiner.asObservable();\r\n\r\n  setStateBehaviorSpinner(value: boolean) {\r\n    this._stateSpiner.next(value);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "type": "injectable"
        },
        {
            "name": "TemplateRepositoryService",
            "id": "injectable-TemplateRepositoryService-866ddfb24d07168b1c1419f007a0003f",
            "file": "src/app/shared/utils/services/newRepository/template-repository/template-repository.service.ts",
            "properties": [
                {
                    "name": "_templateData",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_templateDescription",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_templateRepository",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_templateRepositoryName",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_templateUserName",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "templateData$",
                    "defaultValue": "this._templateData.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "templateDescription$",
                    "defaultValue": "this._templateDescription.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "templateRepositoryAvailable$",
                    "defaultValue": "this._templateRepository.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "templateRepositoryName$",
                    "defaultValue": "this._templateRepositoryName.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "templateUserName$",
                    "defaultValue": "this._templateUserName.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "sendDataOnObservable",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendDescriptionNameOnObservable",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendRepositoryAvailableOnObservable",
                    "args": [
                        {
                            "name": "data",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendRepositoryNameOnObservable",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendUserNameOnObservable",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TemplateRepositoryService {\r\n  private _templateData: Subject<string> = new Subject<string>();\r\n  private _templateUserName: Subject<string> = new Subject<string>();\r\n  private _templateRepositoryName: Subject<string> = new Subject<string>();\r\n  private _templateDescription: Subject<string> = new Subject<string>();\r\n  private _templateRepository: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor() {}\r\n\r\n  templateData$ = this._templateData.asObservable();\r\n  templateUserName$ = this._templateUserName.asObservable();\r\n  templateRepositoryName$ = this._templateRepositoryName.asObservable();\r\n  templateDescription$ = this._templateDescription.asObservable();\r\n  templateRepositoryAvailable$ = this._templateRepository.asObservable();\r\n\r\n  sendDataOnObservable(data: string) {\r\n    this._templateData.next(data);\r\n  }\r\n\r\n  sendUserNameOnObservable(data: string) {\r\n    this._templateUserName.next(data);\r\n  }\r\n\r\n  sendRepositoryNameOnObservable(data: string) {\r\n    this._templateRepositoryName.next(data);\r\n  }\r\n\r\n  sendDescriptionNameOnObservable(data: string) {\r\n    this._templateDescription.next(data);\r\n  }\r\n\r\n  sendRepositoryAvailableOnObservable(data: boolean) {\r\n    this._templateRepository.next(data);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "type": "injectable"
        },
        {
            "name": "TimerService",
            "id": "injectable-TimerService-1529ab0dbdd32476bfb2a33fe627a351",
            "file": "src/app/shared/utils/services/timer/timer.service.ts",
            "properties": [
                {
                    "name": "_counterData",
                    "defaultValue": "new BehaviorSubject<\r\n    ITimer[]\r\n  >(new Array<ITimer>())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<ITimer[]>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "counterData$",
                    "defaultValue": "this._counterData.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "timerArray",
                    "defaultValue": "new Array<ITimer>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<ITimer>",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "sendCounterData",
                    "args": [
                        {
                            "name": "timer",
                            "type": "ITimer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "timer",
                            "type": "ITimer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ITimer } from '../../interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TimerService {\r\n  timerArray: Array<ITimer> = new Array<ITimer>();\r\n  private _counterData: BehaviorSubject<ITimer[]> = new BehaviorSubject<\r\n    ITimer[]\r\n  >(new Array<ITimer>());\r\n  counterData$ = this._counterData.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  sendCounterData(timer: ITimer) {\r\n    timer.id = this.timerArray.length === 0 ? 1 : this.timerArray.length + 1;\r\n    this.timerArray.push(timer);\r\n    this._counterData.next(this.timerArray);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "type": "injectable"
        },
        {
            "name": "TooltipItemsService",
            "id": "injectable-TooltipItemsService-e5b19904d3f19735b782867906aff52b",
            "file": "src/app/shared/utils/services/transport/items/tooltip-items.service.ts",
            "properties": [
                {
                    "name": "_dataTooltip",
                    "defaultValue": "new BehaviorSubject<string>(\r\n    ''\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataSend$",
                    "defaultValue": "this._dataTooltip.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "dataNextTooltip",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TooltipItemsService {\r\n  private _dataTooltip: BehaviorSubject<string> = new BehaviorSubject<string>(\r\n    ''\r\n  );\r\n  dataSend$ = this._dataTooltip.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  dataNextTooltip(data: string) {\r\n    this._dataTooltip.next(data);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-adb091c91d3688add287d79cea8a32fa",
            "file": "src/app/shared/utils/services/user/user-service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "clearLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUserLoggedIn",
                    "args": [
                        {
                            "name": "user",
                            "type": "User | any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User | any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { User } from '../../interfaces/user/user';\r\nimport { LocalStorageDataService } from '../abstract/local-storage-data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private _localStorage: LocalStorageDataService) {}\r\n\r\n  setUserLoggedIn(user: User | any) {\r\n    this._localStorage.setResource('user', JSON.stringify(user));\r\n  }\r\n\r\n  getUserLoggedIn() {\r\n    if (localStorage.getItem('user')) {\r\n      return JSON.parse(<string>this._localStorage.getResource('user'));\r\n    } else {\r\n      console.log('local storage is empty');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  clearLocalStorage() {\r\n    this._localStorage.clearAllValue();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_localStorage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "_localStorage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AccountResolver",
            "id": "injectable-AccountResolver-1ba5b56625737c834087c4fbf6b9d927",
            "file": "src/app/shared/utils/services/resolvers/account/account.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { ConnectionService } from '../../firebase/connection.service';\r\nimport { AccountService } from '../../account/account.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountResolver implements Resolve<boolean> {\r\n  constructor(\r\n    private _firebase: ConnectionService,\r\n    private _accountService: AccountService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    this._firebase\r\n      .allDateTwoColection('users', 'repository')\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((changeData) =>\r\n          changeData.map((c) => {\r\n            let a = c.payload.doc.data();\r\n            return {\r\n              owner: a.owner,\r\n              repo: a.repo,\r\n              link: a.link,\r\n              id: c.payload.doc.id,\r\n            };\r\n          })\r\n        )\r\n      )\r\n      .subscribe((data) => this._accountService.repoData(data));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "AuthGuardGuard",
            "id": "injectable-AuthGuardGuard-b1ed85eb54c566fa19f2023ce26156fa",
            "file": "src/app/shared/utils/services/guards/auth-guard.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<boolean | UrlTree>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        130
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { UserService } from '../user/user-service';\r\nimport { SpinnerStateService } from '../../../component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuardGuard implements CanActivate {\r\n  constructor(\r\n    private _firebaseAuth: AngularFireAuth,\r\n    private _sppinerService: SpinnerStateService,\r\n    private _userService: UserService,\r\n    private _route: Router\r\n  ) {}\r\n\r\n  async canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Promise<boolean | UrlTree> {\r\n    const user = await this._firebaseAuth.currentUser;\r\n    let isAuthenticated = user ? true : false;\r\n    const dataFromLocalStorage = this._userService.getUserLoggedIn();\r\n\r\n    if (dataFromLocalStorage) {\r\n      isAuthenticated = true;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      console.warn('You must be authenticated in order to access this page.');\r\n\r\n      await this._route.navigate(['/auth/l']);\r\n    }\r\n    this._sppinerService.setStateBehaviorSpinner(false);\r\n\r\n    return isAuthenticated;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_firebaseAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_firebaseAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "ListItemsResolver",
            "id": "injectable-ListItemsResolver-7e2d0ac0d2ea520060854dccd44adb55",
            "file": "src/app/module/transport/item/utils/services/resolver/list-items.resolver.ts",
            "properties": [
                {
                    "name": "_unSubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { ConnectionService } from '../../../../../../shared/utils/services/firebase';\r\nimport { ItemListService } from '../item-list.service';\r\nimport { INewItemTypes } from '../../interfaces';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { LocalStorageDataService } from '../../../../../../shared/utils/services';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ListItemsResolver implements Resolve<boolean>, OnDestroy {\r\n  private _unSubscribe: Subject<any> = new Subject();\r\n\r\n  constructor(\r\n    private _firebase: ConnectionService,\r\n    private _listItem: ItemListService,\r\n    private _db: AngularFirestore,\r\n    private _localStoarage: LocalStorageDataService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    this._firebase\r\n      .allDateTwoColection('users', 'item_new')\r\n      .snapshotChanges()\r\n      .pipe(\r\n        takeUntil(this._unSubscribe),\r\n        map((changeData) =>\r\n          changeData.map((c) => {\r\n            let a = c.payload.doc.data();\r\n            a.uuid = c.payload.doc.id;\r\n            return a as INewItemTypes;\r\n          })\r\n        )\r\n      )\r\n      .subscribe((data) => this._listItem.retriveData(data));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._unSubscribe.next();\r\n    this._unSubscribe.complete();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_listItem",
                        "type": "ItemListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_db",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_localStoarage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_listItem",
                        "type": "ItemListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_db",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_localStoarage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "NewRepositoryResolver",
            "id": "injectable-NewRepositoryResolver-11be1f8d29375ab49cd9a2f153b4102c",
            "file": "src/app/shared/utils/services/resolvers/newRepository/new-repository.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n  ActivatedRouteSnapshot,\r\n} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ConnectionService } from '../../firebase/connection.service';\r\nimport { NewRepositoryService } from '../../newRepository/new-repository.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewRepositoryResolver implements Resolve<boolean> {\r\n  constructor(\r\n    private _firebase: ConnectionService,\r\n    private _newRepository: NewRepositoryService\r\n  ) {\r\n    this._firebase.setUrl('/template');\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    this._firebase\r\n      .allDateTwoColection('users', 'template')\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((changeData) =>\r\n          changeData.map((c) => {\r\n            let a = c.payload.doc.data();\r\n            return {\r\n              template: a.template,\r\n              id: c.payload.doc.id,\r\n              check: a.check,\r\n              icon: a.icon,\r\n            };\r\n          })\r\n        )\r\n      )\r\n      .subscribe((data) => this._newRepository.newRepoRetriveData(data));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_newRepository",
                        "type": "NewRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_firebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_newRepository",
                        "type": "NewRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "PlBillingResolver",
            "id": "injectable-PlBillingResolver-909a79f295d43ef7d0a6c93ac004018b",
            "file": "src/app/shared/utils/services/resolvers/pl-billing/pl-billing.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PlBillingService } from '../../pl-billing/pl-billing.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PlBillingResolver implements Resolve<boolean> {\r\n  constructor(\r\n    private _http: HttpClient,\r\n    private _plBillingService: PlBillingService\r\n  ) {}\r\n\r\n  resolve(): Observable<any> {\r\n    return this._plBillingService.dataNextCoins();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_plBillingService",
                        "type": "PlBillingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_plBillingService",
                        "type": "PlBillingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "TableDataResolver",
            "id": "injectable-TableDataResolver-8f99173e562e74d6fb60f5218b4ae19a",
            "file": "src/app/shared/utils/services/resolvers/table/table-data.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { DataTableService } from '../../data-table/data-table.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TableDataResolver implements Resolve<boolean> {\r\n  constructor(private _dataTableService: DataTableService) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n    return of(\r\n      this._dataTableService.dataStoreBehavior(\r\n        'https://www.ag-grid.com/example-assets/olympic-winners.json'\r\n      )\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dataTableService",
                        "type": "DataTableService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_dataTableService",
                        "type": "DataTableService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BtnPrimaryDirective",
            "id": "directive-BtnPrimaryDirective-a123aa5573d9fa210907770d5017f68b",
            "file": "src/app/shared/utils/services/directives/btn-primary.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[elixBtnPrimary]',\r\n})\r\nexport class BtnPrimaryDirective {\r\n  constructor(private _el: ElementRef, private _renderer: Renderer2) {\r\n    this._renderer.addClass(this._el.nativeElement, 'vorkurt__primary-btn');\r\n  }\r\n\r\n  @HostListener('click') mouseClick() {\r\n    this._renderer.addClass(this._el.nativeElement, 'vorkurt__primary-btn');\r\n  }\r\n}\r\n",
            "selector": "[elixBtnPrimary]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "mouseClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ElixDragDirective",
            "id": "directive-ElixDragDirective-d905960681718262bc3c54a2f5b25d60",
            "file": "src/app/shared/utils/services/directives/elix-drag.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[elixElixDrag]',\r\n})\r\nexport class ElixDragDirective implements OnInit {\r\n  @Input() defaultColor: string = 'transparent';\r\n  @Input() resizableGrabWidth = 8;\r\n  @Input() resizableMinWidth = 10;\r\n  dragging = false;\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\r\n    const self = this;\r\n\r\n    function preventSeePointerWhenResize() {\r\n      document.body.style.pointerEvents = 'none';\r\n    }\r\n\r\n    function setPointerAfterResize() {\r\n      document.body.style.pointerEvents = 'auto';\r\n    }\r\n\r\n    const newWidth = (wid: number) => {\r\n      const newWidth = Math.max(this.resizableMinWidth, wid);\r\n      _elementRef.nativeElement.style.width = newWidth + 'px';\r\n    };\r\n\r\n    const mouseMoveG = (evt: MouseEvent) => {\r\n      if (!this.dragging) {\r\n        return;\r\n      }\r\n      newWidth(evt.clientX + _elementRef.nativeElement.offsetLeft);\r\n      evt.stopPropagation();\r\n    };\r\n\r\n    const mouseUpG = (evt: MouseEvent) => {\r\n      if (!this.dragging) {\r\n        return;\r\n      }\r\n      setPointerAfterResize();\r\n      this.dragging = false;\r\n      evt.stopPropagation();\r\n    };\r\n\r\n    const mouseDown = (evt: MouseEvent) => {\r\n      if (this.inDragRegion(evt)) {\r\n        this.dragging = true;\r\n        preventSeePointerWhenResize();\r\n        evt.stopPropagation();\r\n      }\r\n    };\r\n\r\n    const mouseMove = (evt: any) => {\r\n      if (this.inDragRegion(evt) || this.dragging) {\r\n        _elementRef.nativeElement.style.cursor = 'col-resize';\r\n      } else {\r\n        _elementRef.nativeElement.style.cursor = 'default';\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousemove', mouseMoveG, true);\r\n    document.addEventListener('mouseup', mouseUpG, true);\r\n    _elementRef.nativeElement.addEventListener('mousedown', mouseDown, true);\r\n    _elementRef.nativeElement.addEventListener('mousemove', mouseMove, true);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  inDragRegion(evt: MouseEvent): boolean {\r\n    return (\r\n      this._elementRef.nativeElement.clientWidth -\r\n        evt.clientX +\r\n        this._elementRef.nativeElement.offsetLeft <\r\n      this.resizableGrabWidth\r\n    );\r\n  }\r\n}\r\n",
            "selector": "[elixElixDrag]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "defaultColor",
                    "defaultValue": "'transparent'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string"
                },
                {
                    "name": "resizableGrabWidth",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number"
                },
                {
                    "name": "resizableMinWidth",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "dragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "inDragRegion",
                    "args": [
                        {
                            "name": "evt",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "evt",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "InputPrimaryDirective",
            "id": "directive-InputPrimaryDirective-18d26cd9317678b3a5cc74b5a4346004",
            "file": "src/app/shared/utils/services/directives/input-primary.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[elixInputPrimary]',\r\n})\r\nexport class InputPrimaryDirective {\r\n  constructor(private _el: ElementRef, private _renderer: Renderer2) {\r\n    this._renderer.addClass(this._el.nativeElement, 'vorkurt__primary-input');\r\n  }\r\n}\r\n",
            "selector": "[elixInputPrimary]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AccountComponent",
            "id": "component-AccountComponent-3f914a161ad097dda1eafc5f04bd199f",
            "file": "src/app/module/account/account.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-account",
            "styleUrls": [
                "./account.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./account.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss'],\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".vorkurt__border-right {\r\n  border-right: solid 0.5px;\r\n}\r\n\r\n.vorkurt__border-left {\r\n  border-left: solid 0.5px;\r\n}\r\n",
                    "styleUrl": "./account.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"vorkurt__height-account\">\r\n  <div class=\"flex vorkurt__background-primary h-full \">\r\n    <div class=\"vorkurt__border-right vorkurt__color-text-line vorkurt__background-secondary w-1/5\">\r\n      <elix-left-side-repo></elix-left-side-repo>\r\n    </div>\r\n    <div class=\"pt-2 text-white vorkurt__background-primary w-1/2\">\r\n      <elix-center-activity class=\"flex justify-center\"></elix-center-activity>\r\n    </div>\r\n    <div class=\"vorkurt__background-primary pt-2 w-1/4 vorkurt__border-left  vorkurt__color-text-line\">\r\n      <elix-right-side-artifacts></elix-right-side-artifacts>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ApiComponent",
            "id": "component-ApiComponent-fd33b5d27c36a34a9810dcf0f72cf3af",
            "file": "src/app/module/transport/api/api.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-api",
            "styleUrls": [
                "./api.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./api.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-api',\r\n  templateUrl: './api.component.html',\r\n  styleUrls: ['./api.component.scss'],\r\n})\r\nexport class ApiComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./api.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>api works!</p>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-45538c7fe328ff6c380be411debb2f65",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "stateSpiner",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "defaultValue": "'vorkurt'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "unSubscriptionscrollBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { SpinnerStateService } from './shared/component/spinner/spinner-state.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'vorkurt';\r\n  stateSpiner: boolean = false;\r\n  unSubscriptionscrollBar: Subscription;\r\n\r\n  constructor(\r\n    private _spinerService: SpinnerStateService,\r\n    private _router: Router\r\n  ) {\r\n    this._spinerService.getState$.subscribe(\r\n      (resp) => (this.stateSpiner = resp)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.unSubscriptionscrollBar = this._router.events\r\n      .pipe(filter((event) => event instanceof NavigationEnd))\r\n      .subscribe((res) => window.scrollTo(0, 0));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unSubscriptionscrollBar.unsubscribe();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_spinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_spinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<elix-spinner></elix-spinner>\r\n<router-outlet *ngIf=\"!stateSpiner\"></router-outlet>\r\n"
        },
        {
            "name": "AuthComponent",
            "id": "component-AuthComponent-0f0aa888ed0aeb03fd0dc725cc8f6ec4",
            "file": "src/app/auth/auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-auth",
            "styleUrls": [
                "./auth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "feedback",
                    "defaultValue": "{ password: false, email: false }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "forgotPass",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isSignedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "logedIn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "changeSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "forgotPassword",
                    "args": [
                        {
                            "name": "parameter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "parameter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../shared/utils/services';\r\nimport { Router } from '@angular/router';\r\nimport { SpinnerStateService } from '../shared/component/spinner/spinner-state.service';\r\nimport { getVelocityEmail } from '../config/global/generator';\r\nimport { ConnectionService } from '../shared/utils/services/firebase';\r\nimport firebase from 'firebase/compat';\r\nimport UserCredential = firebase.auth.UserCredential;\r\n\r\n@Component({\r\n  selector: 'elix-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss'],\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  isSignedIn = false;\r\n  logedIn = true;\r\n  feedback = { password: false, email: false };\r\n  forgotPass: boolean = true;\r\n\r\n  constructor(\r\n    private _authService: AuthService,\r\n    private _router: Router,\r\n    private _sppinerService: SpinnerStateService,\r\n    private _connectionService: ConnectionService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._sppinerService.setStateBehaviorSpinner(false);\r\n\r\n    if (localStorage.getItem('user') !== null) {\r\n      this.isSignedIn = true;\r\n    } else {\r\n      this.isSignedIn = false;\r\n    }\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.feedback.password = false;\r\n    this.feedback.email = false;\r\n    try {\r\n      if (getVelocityEmail(form)) {\r\n        this._sppinerService.setStateBehaviorSpinner(true);\r\n        if (this.logedIn) {\r\n          this._authService\r\n            .signInWithEmail(form.value)\r\n            .then((resp: UserCredential | any) => {\r\n              this._connectionService.createDB({ role: 'admin' }, resp);\r\n            });\r\n        } else {\r\n          this._authService.signUp(form.value).catch((e) => {\r\n            console.log(e);\r\n            return e;\r\n          });\r\n        }\r\n        form.reset();\r\n      } else {\r\n        this.feedback.email = true;\r\n        this.feedback.password = true;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  changeSignIn() {\r\n    this.logedIn = !this.logedIn;\r\n  }\r\n\r\n  forgotPassword(parameter: any) {\r\n    if (parameter === 'route') this._router.navigate(['forgot_password']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".elix__height {\r\n    height: 94%;\r\n}\r\n\r\n.wrapper-arrow {\r\n    position: absolute;\r\n}\r\n\r\n// de aicia in jos este back ground \r\nbody {\r\n    background: linear-gradient(-45deg, #0a235c, #47206a, #1b4b5d, #23d5ab);\r\n    background-size: 400% 400%;\r\n    animation: gradient 15s ease infinite;\r\n    height: 100vh;\r\n}\r\n\r\n@keyframes gradient {\r\n    0% {\r\n        background-position: 0% 50%;\r\n    }\r\n    50% {\r\n        background-position: 100% 50%;\r\n    }\r\n    100% {\r\n        background-position: 0% 50%;\r\n    }\r\n}\r\n\r\n.logged {\r\n    text-align: center;\r\n    font-size: 40px;\r\n    transition: background 1s, border-color 0.2s;\r\n}\r\n\r\n.justify-center {\r\n    height: 700px;\r\n    width: 700px;\r\n    padding: 3rem;\r\n    box-shadow: 0 0 90px rgba(0, 0, 0, 02);\r\n    border-radius: 8px;\r\n    background: linear-gradient(-45deg, #cbd1df, #ac97bf, #6a9cae, #bdd4cf);\r\n    animation: gradient 15s ease infinite;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    margin-left: 550px;\r\n}\r\n\r\n.cursor-pointer {\r\n    color: rgb(240, 232, 232);\r\n    font-family: 'arial';\r\n    border: 2px solid #151212;\r\n    background-color: #0a235c;\r\n    font-size: 33px;\r\n    padding: 6px;\r\n}\r\n\r\n// background-color: #fff;\r\n.cursor-pointer:hover {\r\n    color: rgb(9, 2, 2);\r\n    background-color: #fff;\r\n    font-size: 1em;\r\n    transition: all 2s\r\n}\r\n\r\n.color {\r\n    color: #fff;\r\n    padding: 1rem;\r\n    border: 2px solid #dddddd;\r\n}\r\n\r\n.color:hover {\r\n    color: rgb(0, 255, 42);\r\n    padding: 1.2rem;\r\n}\r\n\r\n.text-4xl {\r\n    color: rgb(15, 2, 2);\r\n    font-family: 'Courier New', Courier, monospace;\r\n}\r\n\r\n.rounded-md {\r\n    background-color: rgb(20, 7, 7);\r\n    height: 40px;\r\n    width: 200px;\r\n}\r\n\r\n.rounded-md:hover {\r\n    background-color: rgb(112, 111, 119);\r\n    height: 40px;\r\n    width: 500px;\r\n    transition: all 2s;\r\n    border-radius: 13px;\r\n}\r\n\r\n.color:hover {\r\n    border-radius: 13px;\r\n    color: rgb(227, 226, 240);\r\n    transition: all 3s linear\r\n}\r\n\r\n.paragaraf {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    padding: 15px;\r\n    margin: 12px;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.heter {\r\n    font-size: 40px;\r\n}\r\n\r\n.this {\r\n    text-align: center;\r\n    padding: 40px;\r\n    font-size: 40px;\r\n    background: linear-gradient(-45deg, #0a235c, #47206a, #1b4b5d, #23d5ab);\r\n}\r\n\r\n.loggin {\r\n    text-align: center;\r\n    padding: 60px;\r\n    font-size: 40px;\r\n    background: linear-gradient(-45deg, #0a235c, #47206a, #1b4b5d, #23d5ab);\r\n}",
                    "styleUrl": "./auth.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_connectionService",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_connectionService",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<body class=\"color\">\r\n    <div *ngIf=\"forgotPass\" class=\"h-full\">\r\n        <div class=\"h-full\" *ngIf=\"!isSignedIn\">\r\n            <div class=\"flex\">\r\n\r\n                <div class=\"flex flex-1 justify-end ml-20 pt-3\">\r\n                    <h1 class=\"text-white text-9xl logged \">{{!logedIn ? 'Create' : 'Vorkurt'}}</h1>\r\n                </div>\r\n                <div class=\"flex flex-1 justify-end\">\r\n                    <button mat-ripple class=\"bg-white hover:border-2 hover:bg-blue-100 rounded-md text-white pr-3 pl-3 pb-2 pt-2 text-blue-900 mt-3 mr-3\" (click)=\"changeSignIn()\">{{logedIn ? 'Sign Up' : 'Sign In'}}</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"paragaraf si h1\">\r\n\r\n                <p class=\"paragaraf\">This is very careful, before all the aspects you could use this page<br> is for all your needs, you have to be careful first</p>\r\n\r\n            </div>\r\n            <div class=\"flex justify-center items-center elix__height\">\r\n\r\n                <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\r\n                    <div class=\"flex-col mt-3 mb-8\">\r\n                        <div elixInputPrimary>\r\n                            <h1 class=\"loggin\">LOGGIN</h1>\r\n                            <h1 class=\"text-white text-4xl\">Username</h1>\r\n                            <input type=\"email\" class=\"color\" ngModel name=\"email\" required>\r\n                        </div>\r\n                        <span *ngIf=\"feedback.email\" class=\"text-red-600 absolute my-1\"> * email is not valid</span>\r\n                    </div>\r\n\r\n                    <div class=\"flex-col mt-3 mb-8\">\r\n                        <div elixInputPrimary>\r\n                            <h1 class=\"text-white text-4xl\">Password</h1>\r\n                            <input class=\"color\" type=\"password\" minlength=\"6\" ngModel name=\"password\" required>\r\n                        </div>\r\n                        <span *ngIf=\"feedback.password\" class=\"text-red-600 absolute my-1\"> * Password to short</span>\r\n                    </div>\r\n                    <div class=\"\">\r\n                        <button class=\"bg-blue-400 hover:border-2 hover:bg-blue-700 rounded-md text-white pr-3 pl-3 pb-2 pt-2\" [disabled]=\"!authForm\" type=\"submit\">\r\n            {{!logedIn ? 'Sign Up' : 'Sign In'}}\r\n          </button>\r\n                    </div>\r\n                    <div class=\"wrapper-arrow -ml-2 text-blue-400 hover:underline cursor-pointer mt-10\" (click)=\"changeSignIn()\">\r\n                        <span> {{logedIn ? 'Create new User' : 'User already created'}}</span>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div class=\"wrapper-arrow -ml-2 text-blue-400 hover:underline cursor-pointer mt-20\" [routerLink]=\"'/forgot_password'\">\r\n                            <span>forgot password</span>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div class=\"arrow\">\r\n                    <div class=\"arrow__body\">\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"!forgotPass\" class=\"h-full\">\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</body>"
        },
        {
            "name": "BaseColumn",
            "id": "component-BaseColumn-2099c272f4a23e95603d5ce0398d22c7",
            "file": "src/app/shared/component/table/base-column.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-base",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatColumnDef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatColumnDef"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\r\nimport { MatColumnDef } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-base',\r\n  template: '',\r\n})\r\nexport abstract class BaseColumn {\r\n  @ViewChild(MatColumnDef) columnDef: MatColumnDef;\r\n\r\n  @Input()\r\n  name: string;\r\n\r\n  @Input()\r\n  field: string;\r\n\r\n  @Input()\r\n  className: string;\r\n\r\n  @Input()\r\n  iconClass: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BillingComponent",
            "id": "component-BillingComponent-ebda3ded537b116d0e69419727408553",
            "file": "src/app/module/transport/billing/billing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-billing",
            "styleUrls": [
                "./billing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-billing',\r\n  templateUrl: './billing.component.html',\r\n  styleUrls: ['./billing.component.scss'],\r\n})\r\nexport class BillingComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./billing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>billing works!</p>\r\n"
        },
        {
            "name": "BottomComponent",
            "id": "component-BottomComponent-fa0924f085458065883e33095460c90f",
            "file": "src/app/module/newRepo/bottom/bottom.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-bottom",
            "styleUrls": [
                "./bottom.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bottom.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "available",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "owner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "repositoryName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { TemplateRepositoryService } from '../../../shared/utils/services/newRepository/template-repository/template-repository.service';\r\nimport { ConnectionService } from '../../../shared/utils/services/firebase/connection.service';\r\nimport { IWrapperRepository } from '../../../shared/utils/interfaces';\r\n\r\n@Component({\r\n  selector: 'elix-bottom',\r\n  templateUrl: './bottom.component.html',\r\n  styleUrls: ['./bottom.component.scss'],\r\n})\r\nexport class BottomComponent implements OnInit {\r\n  private template: string;\r\n  private owner: string;\r\n  private repositoryName: string;\r\n  private description: string;\r\n  private available: boolean;\r\n\r\n  constructor(\r\n    private _templateRepository: TemplateRepositoryService,\r\n    private _connectionServiceFirebase: ConnectionService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._templateRepository.templateUserName$.subscribe(\r\n      (resp) => (this.owner = resp)\r\n    );\r\n    this._templateRepository.templateData$.subscribe(\r\n      (resp) => (this.template = resp)\r\n    );\r\n    this._templateRepository.templateRepositoryName$.subscribe(\r\n      (resp) => (this.repositoryName = resp)\r\n    );\r\n    this._templateRepository.templateDescription$.subscribe(\r\n      (resp) => (this.description = resp)\r\n    );\r\n    this._templateRepository.templateRepositoryAvailable$.subscribe(\r\n      (resp) => (this.available = resp)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    let newRepo = {\r\n      template: this.template ?? '',\r\n      owner: this.owner ?? '',\r\n      repositoryName: this.repositoryName ?? '',\r\n      description: this.description ?? '',\r\n      available: this.available ?? false,\r\n    } as IWrapperRepository;\r\n\r\n    console.log('Sami');\r\n\r\n    this._connectionServiceFirebase\r\n      .createItems(newRepo, 'repositoryNew')\r\n      .then((resp) => console.log(resp));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./bottom.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_templateRepository",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_connectionServiceFirebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_templateRepository",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_connectionServiceFirebase",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"text-base vorkurt__border-bottom mb-6\">\r\n  <div>\r\n    <div class=\"font-bold flex flex-col\">\r\n      <span>Initialize this repository with:</span>\r\n    </div>\r\n    <div class=\"text-sm vorkurt__color-text-line\">\r\n      <span>Skip this step if you’re importing an existing repository.</span>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox class=\"example-margin my-3\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex flex-col\">\r\n            <span class=\"h-3 text-base mb-2\">\r\n               Add a README file\r\n            </span>\r\n            <span>\r\n              This is where you can write a long description for your project. Learn more.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox class=\"example-margin my-3\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex flex-col\">\r\n            <span class=\"h-3 text-base mb-2\">\r\n               Add .gitignore\r\n            </span>\r\n            <span>\r\n              Choose which files not to track from a list of templates. Learn more.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox class=\"example-margin my-3\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex flex-col\">\r\n            <span class=\"h-3 text-base mb-2\">\r\n               Choose a license\r\n            </span>\r\n            <span>\r\n              A license tells others what they can and can't do with your code. Learn more.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </mat-checkbox>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div>\r\n      <span>\r\n        This will set  main as the default branch. Change the default name in your settings.\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div\r\n  class=\"mb-6 flex h-7 items-center justify-center w-1/4 rounded-lg ml-2 mr-2 cursor-pointer\">\r\n  <button elixBtnPrimary class=\"flex justify-center \" (click)=\"onSubmit()\">\r\n    <div class=\"ml-2\" >\r\n      <span class=\"font-normal text-base\">Create Repository</span>\r\n    </div>\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "BreadCrumbComponent",
            "id": "component-BreadCrumbComponent-fc7d14662f26180d26396848f695578d",
            "file": "src/app/shared/component/bread-crumb/bread-crumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-bread-crumb",
            "styleUrls": [
                "./bread-crumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bread-crumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadcrumbs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IBreadCrumb>",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeBreadCrumb",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport {\r\n  ActivatedRoute,\r\n  NavigationEnd,\r\n  Router,\r\n  UrlSegment,\r\n} from '@angular/router';\r\nimport { IBreadCrumb } from '../../utils/interfaces';\r\n\r\n@Component({\r\n  selector: 'elix-bread-crumb',\r\n  templateUrl: './bread-crumb.component.html',\r\n  styleUrls: ['./bread-crumb.component.scss'],\r\n})\r\nexport class BreadCrumbComponent implements OnInit {\r\n  breadcrumbs: Array<IBreadCrumb>;\r\n\r\n  constructor(\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this.initializeBreadCrumb();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeBreadCrumb();\r\n  }\r\n\r\n  private initializeBreadCrumb() {\r\n    this._router.events\r\n      .pipe(filter((event) => event instanceof NavigationEnd))\r\n      .subscribe((event) => {\r\n        // note, we don't use event\r\n        this.breadcrumbs = [];\r\n        let currentRoute = this._activateRouter.root,\r\n          url = '';\r\n        do {\r\n          let childrenRoutes = currentRoute.children;\r\n          currentRoute = null;\r\n\r\n          childrenRoutes.forEach((route: ActivatedRoute) => {\r\n            if (route.outlet === 'primary') {\r\n              let routeSnapshot = route.snapshot;\r\n              url +=\r\n                '/' +\r\n                routeSnapshot.url\r\n                  .map((segment: UrlSegment) => segment.path)\r\n                  .join('/');\r\n              this.breadcrumbs.push({\r\n                label: route.snapshot.data.breadCrumb,\r\n                url: url,\r\n              });\r\n              this.breadcrumbs = this.breadcrumbs.filter(\r\n                (things: IBreadCrumb, index: number, self: IBreadCrumb[]) =>\r\n                  index ===\r\n                  self.findIndex((t: IBreadCrumb) => t.label === things.label)\r\n              );\r\n\r\n              currentRoute = route;\r\n            }\r\n          });\r\n        } while (currentRoute);\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".bread__crumb {\r\n}\r\n",
                    "styleUrl": "./bread-crumb.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_activateRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_activateRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bread__crumb\" >\r\n\t\t\t<span *ngFor=\"let breadcrumb of breadcrumbs; let last = last\" >\r\n\t      <a [routerLink]=\"breadcrumb.url\" routerLinkActive=\"bread__crumb-active\" >{{breadcrumb.label}}  </a >\r\n\t      <span *ngIf=\"!last\" > > </span >\r\n\t\t\t</span >\r\n\r\n</div >\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-7bfced0212aba93c5bbf4dd421001a46",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 322,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary\r\n      ? 'storybook-button--primary'\r\n      : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CenterActivityComponent",
            "id": "component-CenterActivityComponent-7b83a2e6785dacdb8db8fdb5b806903c",
            "file": "src/app/module/account/center-activity/center-activity.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-center-activity",
            "styleUrls": [
                "./center-activity.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./center-activity.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-center-activity',\r\n  templateUrl: './center-activity.component.html',\r\n  styleUrls: ['./center-activity.component.scss'],\r\n})\r\nexport class CenterActivityComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./center-activity.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"w-5/6\">\r\n  <elix-jumbotron [type]=\"'post'\" class=\"justify-center flex\">\r\n    <div post>\r\n      TEstssssssssss TEstssssssssssTEstssssssssss\r\n      TEstssssssssss TEstssssssssssTEstssssssssss\r\n      TEstssssssssss TEstssssssssssT Easdadasstssssssssss\r\n    </div>\r\n  </elix-jumbotron>\r\n</div>\r\n"
        },
        {
            "name": "CodeComponent",
            "id": "component-CodeComponent-f99e77c89620b00c108729f1c7662170",
            "file": "src/app/module/repository/code/code.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-code",
            "styleUrls": [
                "./code.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./code.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-code',\r\n  templateUrl: './code.component.html',\r\n  styleUrls: ['./code.component.scss'],\r\n})\r\nexport class CodeComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./code.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>code works!</p>\r\n"
        },
        {
            "name": "ColumnAreaTextComponent",
            "id": "component-ColumnAreaTextComponent-d7d53b97d1db0bd5dc90c10523638063",
            "file": "src/app/shared/component/table/columns/column-area-text/column-area-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: BaseColumn, useExisting: ColumnAreaTextComponent }",
                    "type": "component"
                }
            ],
            "selector": "elix-column-area-text",
            "styleUrls": [
                "./column-area-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./column-area-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tooltipOverlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayRef",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tooltipRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tooltipRef'"
                        }
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "vars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "width",
                    "defaultValue": "400",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatColumnDef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatColumnDef"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "closeTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doubleClick",
                    "args": [
                        {
                            "name": "element",
                            "type": "IDataSourceMaterialTable<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "IDataSourceMaterialTable<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openTooltip",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "IDataSourceMaterialTable<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "IDataSourceMaterialTable<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { BaseColumn } from '../../base-column';\r\nimport { ElixTooltipService } from '../../../../utils/services/overlay/elix-tooltip.service';\r\nimport { IDataSourceMaterialTable } from '../../../../utils/interfaces/shared/iData-source-material-table';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'elix-column-area-text',\r\n  templateUrl: './column-area-text.component.html',\r\n  styleUrls: ['./column-area-text.component.scss'],\r\n  providers: [{ provide: BaseColumn, useExisting: ColumnAreaTextComponent }],\r\n})\r\nexport class ColumnAreaTextComponent extends BaseColumn {\r\n  value: boolean = false;\r\n  vars: any;\r\n  @ViewChild('tooltipRef') tooltipRef: TemplateRef<any>;\r\n  tooltipOverlay: OverlayRef;\r\n  width: number = 400;\r\n\r\n  constructor(\r\n    private _elixTooltip: ElixTooltipService,\r\n    private _viewContainer: ViewContainerRef\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  openTooltip(element: HTMLElement, model: IDataSourceMaterialTable<any>) {\r\n    this.value = false;\r\n    if (!this.tooltipOverlay || !this.tooltipOverlay.hasAttached()) {\r\n      this.vars = model.model[this.field];\r\n      this.tooltipOverlay = this._elixTooltip.initTooltip(\r\n        this.tooltipRef,\r\n        this._viewContainer,\r\n        element,\r\n        this.width\r\n      );\r\n      this.tooltipOverlay.backdropElement.classList.add('cursor-pointer');\r\n    }\r\n  }\r\n\r\n  closeTooltip() {\r\n    this.value = true;\r\n    this.tooltipOverlay.detach();\r\n    this.tooltipOverlay.dispose();\r\n  }\r\n\r\n  doubleClick(element: IDataSourceMaterialTable<any>, value: boolean) {\r\n    this.value = true;\r\n    element.editable = value;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./column-area-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_elixTooltip",
                        "type": "ElixTooltipService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "_elixTooltip",
                        "type": "ElixTooltipService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseColumn",
            "templateData": "<ng-container [matColumnDef]=\"field\">\r\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>{{name}}</mat-header-cell>\r\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\"\r\n            (click)=\"element.model['field'] !== '' && openTooltip(reference,element)\"\r\n            #reference>\r\n\t\t<textarea matInput\r\n              [(ngModel)]=\"element.model[field]\"\r\n              [disabled]=\"element.editable\"\r\n              [ngStyle]=\"{'color': 'black'}\"></textarea>\r\n\r\n    <ng-template #tooltipRef>\r\n      <elix-tooltip [width]=\"width\">{{vars}}</elix-tooltip>\r\n    </ng-template>\r\n  </mat-cell>\r\n</ng-container>\r\n"
        },
        {
            "name": "ColumnIconActionComponent",
            "id": "component-ColumnIconActionComponent-bb835b93115ab019154874423b77650b",
            "file": "src/app/shared/component/table/columns/column-icon-action/column-icon-action.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: BaseColumn, useExisting: ColumnIconActionComponent }",
                    "type": "component"
                }
            ],
            "selector": "elix-column-icon-action",
            "styleUrls": [
                "./column-icon-action.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./column-icon-action.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatColumnDef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatColumnDef"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { BaseColumn } from '../../base-column';\r\n\r\n@Component({\r\n  selector: 'elix-column-icon-action',\r\n  templateUrl: './column-icon-action.component.html',\r\n  styleUrls: ['./column-icon-action.component.scss'],\r\n  providers: [{ provide: BaseColumn, useExisting: ColumnIconActionComponent }],\r\n})\r\nexport class ColumnIconActionComponent extends BaseColumn {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./column-icon-action.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "BaseColumn",
            "templateData": "<ng-container [matColumnDef]=\"field\" >\r\n\t<mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef >{{name}}</mat-header-cell >\r\n\t<mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\" >\r\n\t\t<ng-container *ngFor=\"let action of element.actions\">\r\n\t\t\t<button mat-button (click)=\"action.method(element)\" [class]=\"action.classCss\">\r\n\r\n\t\t\t\t<mat-icon  [svgIcon]=\"action.iconClass\" ></mat-icon >\r\n\t\t\t</button >\r\n\t\t</ng-container >\r\n\t</mat-cell >\r\n</ng-container >\r\n"
        },
        {
            "name": "ColumnTextComponent",
            "id": "component-ColumnTextComponent-aad5a801b4485eaf0ffa9b76e9703c7f",
            "file": "src/app/shared/component/table/columns/column-text/column-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: BaseColumn, useExisting: ColumnTextComponent }",
                    "type": "component"
                }
            ],
            "selector": "elix-column-text",
            "styleUrls": [
                "./column-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./column-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatColumnDef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatColumnDef"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseColumn"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { BaseColumn } from '../../base-column';\r\n\r\n@Component({\r\n  selector: 'elix-column-text',\r\n  templateUrl: './column-text.component.html',\r\n  styleUrls: ['./column-text.component.scss'],\r\n  providers: [{ provide: BaseColumn, useExisting: ColumnTextComponent }],\r\n})\r\nexport class ColumnTextComponent extends BaseColumn {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./column-text.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "BaseColumn",
            "templateData": "<ng-container [matColumnDef]=\"field\" >\r\n\t<mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef> {{name}} </mat-header-cell>\r\n\t<mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\"> {{element.model[field]}}</mat-cell>\r\n</ng-container>\r\n"
        },
        {
            "name": "CustomerSupportComponent",
            "id": "component-CustomerSupportComponent-5f4e6b6cc1538e4ccc8b33ed3ec480d3",
            "file": "src/app/module/transport/customer-support/customer-support.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-customer-support",
            "styleUrls": [
                "./customer-support.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customer-support.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-customer-support',\r\n  templateUrl: './customer-support.component.html',\r\n  styleUrls: ['./customer-support.component.scss'],\r\n})\r\nexport class CustomerSupportComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./customer-support.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>customer-support works!</p>\r\n"
        },
        {
            "name": "CustomerVendorComponent",
            "id": "component-CustomerVendorComponent-2dc264c6fafcdddc52a4120516d078e9",
            "file": "src/app/module/transport/customer-vendor/customer-vendor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-customer-vendor",
            "styleUrls": [
                "./customer-vendor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customer-vendor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-customer-vendor',\r\n  templateUrl: './customer-vendor.component.html',\r\n  styleUrls: ['./customer-vendor.component.scss'],\r\n})\r\nexport class CustomerVendorComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./customer-vendor.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>customer-vendor works!</p>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-6ceedcd23eefb44bef745be386eb0040",
            "file": "src/app/module/transport/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dashboard works!</p>\r\n"
        },
        {
            "name": "DeliveryComponent",
            "id": "component-DeliveryComponent-f52b31b996e944ec2523a11de0a57aca",
            "file": "src/app/module/transport/delivery/delivery.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-delivery",
            "styleUrls": [
                "./delivery.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delivery.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.scss'],\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./delivery.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>delivery works!</p>\r\n"
        },
        {
            "name": "ElixJumbotronComponent",
            "id": "component-ElixJumbotronComponent-2bb34e5433568d1abbc36dfa8e8e4351",
            "file": "src/app/shared/component/jumbotron/elix-jumbotron.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-jumbotron",
            "styleUrls": [
                "./elix-jumbotron.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./elix-jumbotron.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "closeAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-jumbotron',\r\n  templateUrl: './elix-jumbotron.component.html',\r\n  styleUrls: ['./elix-jumbotron.component.scss'],\r\n})\r\nexport class ElixJumbotronComponent implements OnInit {\r\n  @Input() closeAction: boolean;\r\n  @Input() title: string;\r\n  @Input() action: boolean;\r\n  //It's mandatory\r\n  @Input() type: string;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".elix__shared-border-color {\r\n  background: var(--backgroundPrimary);\r\n  border: 0.1rem solid rgba(234, 232, 232, 0.33);\r\n  box-shadow: 0 3px 0.3rem 0px rgb(209 209 209 / 15%);\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./elix-jumbotron.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  class=\"vorkurt__color-background border-2 elix__shared-border-color border-solid rounded-lg mr-2 ml-2\">\r\n  <div class=\"pl-2 pr-2\" *ngIf=\"type === 'post'\">\r\n    <div class=\"flex\">\r\n      <div class=\"flex-1\">\r\n        <h1>TItle</h1>\r\n      </div>\r\n      <div>\r\n        Action\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <ng-content select=\"[post]\"></ng-content>\r\n    </div>\r\n    <div>\r\n    </div>\r\n\r\n    <footer>\r\n      <div class=\"w-72\">\r\n        <div class=\"flex justify-between\">\r\n          <div>language</div>\r\n          <div> star</div>\r\n          <div>Update date</div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n\r\n  <div class=\"w-96 pl-2 pr-2\" *ngIf=\"type === 'template'\">\r\n    <div>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ElixSpinnerComponent",
            "id": "component-ElixSpinnerComponent-8841b5cf218619dd149667f451b658f2",
            "file": "src/app/shared/component/spinner/elix-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-spinner",
            "styleUrls": [
                "./elix-spinner.component.scss"
            ],
            "styles": [],
            "template": "<div *ngIf=\"showSppiner\" class=\"lds-hourglass flex justify-center items-center\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_showSppiner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SpinnerStateService } from './spinner-state.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'elix-spinner',\r\n  template:\r\n    '<div *ngIf=\"showSppiner\" class=\"lds-hourglass flex justify-center items-center\"></div>',\r\n  styleUrls: ['./elix-spinner.component.scss'],\r\n})\r\nexport class ElixSpinnerComponent implements OnInit {\r\n  private _showSppiner: boolean;\r\n\r\n  constructor(private _spinnerStateService: SpinnerStateService) {}\r\n\r\n  get showSppiner(): boolean {\r\n    return this._showSppiner;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._spinnerStateService.getState$.subscribe(\r\n      (resp) => (this._showSppiner = resp)\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".lds-hourglass {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.lds-hourglass:after {\r\n  content: \" \";\r\n  display: block;\r\n  border-radius: 50%;\r\n  width: 0;\r\n  height: 0;\r\n  margin: 8px;\r\n  box-sizing: border-box;\r\n  border: 32px solid #fff;\r\n  border-color: #9d8b6f transparent #5a9469 transparent;\r\n  animation: lds-hourglass 3.2s infinite;\r\n}\r\n@keyframes lds-hourglass {\r\n  0% {\r\n    transform: rotate(0);\r\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\r\n  }\r\n  50% {\r\n    transform: rotate(900deg);\r\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\r\n  }\r\n  100% {\r\n    transform: rotate(3600deg);\r\n  }\r\n}\r\n",
                    "styleUrl": "./elix-spinner.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_spinnerStateService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_spinnerStateService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "showSppiner": {
                    "name": "showSppiner",
                    "getSignature": {
                        "name": "showSppiner",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 16
                    }
                }
            }
        },
        {
            "name": "ExploreComponent",
            "id": "component-ExploreComponent-583066f3694638b8683a81da9df25758",
            "file": "src/app/module/explore/explore/explore.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-explore",
            "styleUrls": [
                "./explore.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./explore.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "map",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initMap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport { icon } from 'leaflet';\r\n\r\n@Component({\r\n  selector: 'elix-explore',\r\n  templateUrl: './explore.component.html',\r\n  styleUrls: ['./explore.component.scss'],\r\n})\r\nexport class ExploreComponent implements AfterViewInit {\r\n  private map: any;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initMap();\r\n  }\r\n\r\n  private initMap(): void {\r\n    this.map = L.map('map', {\r\n      center: [39.8282, -48.5795],\r\n      zoom: 1,\r\n    });\r\n\r\n    const tiles = L.tileLayer(\r\n      'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n      {\r\n        maxZoom: 13,\r\n        minZoom: 3,\r\n        attribution:\r\n          '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n      }\r\n    );\r\n\r\n    tiles.addTo(this.map);\r\n\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      let lat = position.coords.latitude;\r\n      let long = position.coords.longitude;\r\n\r\n      let marker = L.marker([lat, long], {\r\n        icon: icon({\r\n          iconSize: [25, 41],\r\n          iconAnchor: [13, 41],\r\n          iconUrl: '/src/assets/icons/leaflet/marker-icon.png',\r\n          shadowUrl: '/src/assets/icons/leaflet/marker-shadow.png',\r\n        }),\r\n      }).addTo(this.map);\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".map-container {\r\n  position: absolute;\r\n  top: 4rem;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  margin: 30px;\r\n}\r\n\r\n.map-frame {\r\n  border: 2px solid black;\r\n  height: 90%;\r\n  width: 70%;\r\n}\r\n\r\n#map {\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./explore.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"map-container flex items-center justify-center\">\r\n  <div class=\"map-frame\">\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ForgotPasswordComponent",
            "id": "component-ForgotPasswordComponent-bab30c3acd6db55dfdac47d2be53279b",
            "file": "src/app/auth/forgot-password/forgot-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-forgot-password",
            "styleUrls": [
                "./forgot-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forgot-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "forgotPassword",
                    "args": [
                        {
                            "name": "model",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVelocityEmail",
                    "args": [
                        {
                            "name": "model",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { getVelocityEmail } from '../../config/global/generator';\r\nimport { AuthService } from '../../shared/utils/services';\r\nimport { Router } from '@angular/router';\r\nimport { SpinnerStateService } from '../../shared/component';\r\n\r\n@Component({\r\n  selector: 'elix-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  constructor(\r\n    private _authService: AuthService,\r\n    private _router: Router,\r\n    private _sppinerService: SpinnerStateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  forgotPassword(model: NgForm) {\r\n    if (getVelocityEmail(model)) {\r\n      this._sppinerService.setStateBehaviorSpinner(true);\r\n      this._authService\r\n        .forgotPassword(model.value.email)\r\n        .then((resp) => {\r\n          if (resp.code !== 'auth/user-not-found')\r\n            this._router.navigate(['/auth/l']);\r\n        })\r\n        .catch((err) => console.error(err))\r\n        .finally(() => this._sppinerService.setStateBehaviorSpinner(false));\r\n    }\r\n  }\r\n\r\n  getVelocityEmail(model: NgForm) {\r\n    return getVelocityEmail(model);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".h-full,\r\n.form-group {\r\n    background: linear-gradient(-45deg, #0a235c, #47206a, #1b4b5d, #23d5ab);\r\n    background-size: 400% 400%;\r\n    animation: gradient 15s ease infinite;\r\n    height: 100vh;\r\n}\r\n\r\n.btn-primary {\r\n    background-color: rgb(4, 2, 17);\r\n    height: 40px;\r\n    width: 300px;\r\n    transition: all 1s;\r\n    border-radius: 13px;\r\n}\r\n\r\n.btn-primary:hover {\r\n    opacity: 0.5;\r\n    background-color: white;\r\n    color: black;\r\n}\r\n\r\n.text-white {\r\n    text-align: center;\r\n    font-size: 35px;\r\n}\r\n\r\n.form-control {\r\n    text-align: center;\r\n    margin-left: 160px;\r\n    height: 30px;\r\n    width: 300px;\r\n    transition: all 10s;\r\n    background-color: white\r\n}\r\n\r\n.form-control:hover {\r\n    text-align: center;\r\n    margin-left: 160px;\r\n    height: 30px;\r\n    width: 400px;\r\n    background-color: white\r\n}\r\n\r\n.finally {\r\n    background-color: rgb(43, 31, 121);\r\n    height: 300px;\r\n    width: 700px;\r\n    padding: 3rem;\r\n    border-radius: 3rem;\r\n    transform: scale(1.5);\r\n    transition: all 3s;\r\n    box-shadow: 0 0 90px rgba(0, 0, 0, 02);\r\n}\r\n\r\n.finally:hover {\r\n    box-shadow: 0 0 110px rgb(0, 38, 255);\r\n    background: linear-gradient(-45deg, #0a235c, #47206a, #1b4b5d, #09342a);\r\n}",
                    "styleUrl": "./forgot-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sppinerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"h-full\">\r\n    <div>\r\n        <div class=\"flex justify-center pt-3\">\r\n            <h1 class=\"text-white text-9xl \">Forgot Password</h1>\r\n        </div>\r\n\r\n        <div class=\"form-group fan\">\r\n\r\n            <div class=\"flex h-full items-center justify-center flex-col\">\r\n                <form class=\"finally\" #forgotPass=\"ngForm\" (ngSubmit)=\"forgotPassword(forgotPass)\">\r\n\r\n                    <div class=\"flex-col mt-3 mb-8\">\r\n                        <div elixInputPrimary>\r\n                            <h1 class=\"text-white text-4xl\">Email of username</h1>\r\n                            <input class=\"form-control\" type=\"email\" ngModel name=\"email\" required>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex\">\r\n                        <div class=\"mr-5\">\r\n                            <button class=\"btn btn-primary\" [disabled]=\"!getVelocityEmail(forgotPass)\" elixBtnPrimary type=\"submit\">Send Email</button>\r\n                        </div>\r\n                        <div>\r\n                            <button class=\"btn btn-primary\" elixBtnPrimary type=\"submit\" [routerLink]=\"['/','auth/l']\"> Go back</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    </div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-edc41b8d5d37a3f5e2b4c1c3e450693f",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg\r\n          width=\"32\"\r\n          height=\"32\"\r\n          viewBox=\"0 0 32 32\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-13bddf7a0f7adcadf768b844e567f74d-1",
            "file": "src/app/module/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-header",
            "styleUrls": [
                "./header.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "defaultValue": "'transparent'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "\"light\" | \"dark\" | \"transparent\""
                },
                {
                    "name": "color",
                    "defaultValue": "'transparent'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "string"
                },
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onSayHello",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "notification",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'notification'"
                        }
                    ]
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "pointIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'pointIcon'"
                        }
                    ]
                },
                {
                    "name": "routerData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IConfigRouter[]",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "value1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openBadge",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resizeData",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dinamically",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dinamically",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retriveCoordinates",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { ConnectionService } from '../../shared/utils/services/firebase/connection.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { PopUpStateService } from './pop-up-login/pop-up-state.service';\r\nimport { OverlayPopUpService } from '../../shared/utils/services/overlay/overlay-pop-up.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IConfigRouter } from '../../shared/utils/interfaces';\r\nimport { TimerService } from '../../shared/utils/services/timer/timer.service';\r\nimport { OverlayService } from '../../shared/utils/services/overlay/overlay.service';\r\nimport { NotificationComponent } from './tooltip/notification/notification.component';\r\n\r\n@Component({\r\n  selector: 'elix-header',\r\n  templateUrl: './header.component.html',\r\n  animations: [\r\n    trigger('openClose', [\r\n      // ...\r\n      state(\r\n        'open',\r\n        style({\r\n          height: '200px',\r\n          opacity: 1,\r\n          backgroundColor: 'yellow',\r\n        })\r\n      ),\r\n      state(\r\n        'closed',\r\n        style({\r\n          height: '100px',\r\n          opacity: 0.8,\r\n          backgroundColor: '#c6ecff',\r\n        })\r\n      ),\r\n      transition('open => closed', [animate('1s')]),\r\n      transition('closed => open', [animate('0.5s')]),\r\n    ]),\r\n  ],\r\n  styleUrls: ['./header.component.sass'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input()\r\n  inputValue = '';\r\n  value: any;\r\n  value1: any;\r\n  @Input() name: string;\r\n  @Input() color = 'transparent';\r\n  @Output()\r\n  onSayHello = new EventEmitter<MouseEvent>();\r\n  @Input() background: 'light' | 'dark' | 'transparent' = 'transparent';\r\n  @ViewChild('pointIcon') pointIcon: ElementRef;\r\n  routerData: IConfigRouter[] = [];\r\n  number: number;\r\n  @ViewChild('notification') notification: HTMLElement;\r\n\r\n  constructor(\r\n    private _firebaseTry: ConnectionService,\r\n    private _popUpState: PopUpStateService,\r\n    private _overlayPopUpService: OverlayPopUpService,\r\n    private _router: ActivatedRoute,\r\n    private _timer: TimerService,\r\n    private _overlayAll: OverlayService\r\n  ) {\r\n    this._firebaseTry.setUrl('/repository');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._timer.counterData$.subscribe((resp) => (this.number = resp.length));\r\n\r\n    this._firebaseTry.data\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((changeData) =>\r\n          changeData.map((c) => {\r\n            let a = c.payload.doc.data();\r\n            return {\r\n              key: c.payload.doc.id,\r\n              value: a[Object.keys(a)[0]],\r\n            };\r\n          })\r\n        )\r\n      )\r\n      .subscribe((data) => data);\r\n\r\n    this.routerData = this._router.snapshot.data.data;\r\n  }\r\n\r\n  resizeData(event: Event, dinamically: boolean) {\r\n    dinamically ? (this.inputValue = ' ') : (this.inputValue = '');\r\n  }\r\n\r\n  retriveCoordinates(event: MouseEvent) {\r\n    this.onSayHello.emit(event);\r\n    this._popUpState.statePopLogin(true);\r\n\r\n    this._overlayPopUpService.open(event);\r\n  }\r\n\r\n  openBadge() {\r\n    const target = this.notification;\r\n    this._overlayAll.display(this.notification, NotificationComponent);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".iufce__icon\r\n  color: #cdd9e5\r\n  height: inherit\r\n  width: inherit\r\n\r\n.iufce__top\r\n  top: 0px\r\n\r\n.iufce__expand-input\r\n  width: 32.75rem\r\n  transition: all 0.5s ease-in-out\r\n\r\n.iufce__parrent-header\r\n  &.background\r\n    &-dark\r\n      background: #8F8F8F\r\n\r\n    &-transparent\r\n      background: #2d333b\r\n\r\n    &-light\r\n      background: #F6F6F6\r\n\r\n.colorIcon\r\n  &-dark\r\n    color: #D9E5FF\r\n\r\n  &-transparent\r\n    color: #92A2BD\r\n\r\n  &-light\r\n    color: #8F8F8F\r\n\r\n.active\r\n  height: 2rem\r\n  border: 1px solid\r\n  border-radius: 5px\r\n\r\n.vorkurt__router\r\n  height: 2rem\r\n  color: #92A2BD\r\n\r\n",
                    "styleUrl": "./header.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_firebaseTry",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_popUpState",
                        "type": "PopUpStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_overlayPopUpService",
                        "type": "OverlayPopUpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_timer",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_overlayAll",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "_firebaseTry",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_popUpState",
                        "type": "PopUpStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_overlayPopUpService",
                        "type": "OverlayPopUpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_timer",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_overlayAll",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<div class=\"bg-blue-700 sticky iufce__top\"\r\n     [ngClass]=\"' vorkurt__background-thrid iufce__parrent-header background-' + background\">\r\n  <div elixElixDrag class=\"flex pl-9 justify-center items-center h-16\">\r\n    <div class=\"w-8 h-8 mr-4 cursor-pointer\" [routerLink]=\"'account'\">\r\n      <mat-icon [svgIcon]=\"'fa_brands:github'\" class=\"iufce__icon \" [ngClass]=\"'colorIcon-'+color\"></mat-icon>\r\n    </div>\r\n    <div elixInputPrimary class=\"flex flex-1 items-center\">\r\n      <input  type=\"text\" class=\"w-1/6 h-7 text-black pl-3 vorkurt__background-primary text-white\"\r\n             [ngClass]=\"inputValue ? 'iufce__expand-input' :'' \"\r\n             (focus)=\"resizeData($event, true)\"\r\n             [(ngModel)]=\"inputValue\"\r\n             (focusout)=\"resizeData($event, false)\"\r\n      >\r\n      <div class=\"ml-2 h-10 flex items-center\">\r\n        <a class=\"text-white vorkurt__text-size-secondary flex items-center\" routerLinkActive=\"active\"\r\n           [routerLink]=\"['account/pull_request']\" [ngClass]=\"'colorIcon-'+color\">Pull request</a>\r\n      </div>\r\n      <div class=\"ml-2 vorkurt__router flex items-center cursor-pointer\" *ngFor=\"let dataRouter of routerData\" routerLinkActive=\"active\" [routerLink]=\"[dataRouter.path]\" >\r\n        <a class=\"text-white vorkurt__text-size-secondary\"\r\n           [ngClass]=\"'colorIcon-'+color\">{{dataRouter.name}}</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex pr-8\">\r\n      <div class=\"w-5 h-5\" #notification>\r\n        <button [matBadge]='number === 0 ? \"\" : number ' (click)=\"openBadge()\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:bell'\" class=\"iufce__icon cursor-pointer\"\r\n                    [ngClass]=\"'colorIcon-'+color\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"w-5 h-5 ml-2\">\r\n        <mat-icon [svgIcon]=\"'fa_solid:plus'\" class=\"iufce__icon cursor-pointer\"\r\n                  [ngClass]=\"'colorIcon-'+color\"></mat-icon>\r\n      </div>\r\n      <div class=\"w-5 h-5 ml-2\" #pointIcon>\r\n        <mat-icon\r\n          (click)=\"retriveCoordinates($event)\"\r\n          [svgIcon]=\"'fa_solid:user-circle'\"\r\n          class=\"iufce__icon cursor-pointer\"\r\n          [ngClass]=\"'colorIcon-'+color\"></mat-icon>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "HeaderNewRepoComponent",
            "id": "component-HeaderNewRepoComponent-0010a69cf018c9dc812d27ae5f26e878",
            "file": "src/app/module/newRepo/header-new-repo/header-new-repo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-header-new-repo",
            "styleUrls": [
                "./header-new-repo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-new-repo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "button",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'button'"
                        }
                    ]
                },
                {
                    "name": "dataTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openService",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { OverlayService } from '../../../shared/utils/services/overlay/overlay.service';\r\nimport { TemplateRepositoryComponent } from '../tooltip/template-repository/template-repository.component';\r\nimport { TemplateRepositoryService } from '../../../shared/utils/services/newRepository/template-repository/template-repository.service';\r\n\r\n@Component({\r\n  selector: 'elix-header-new-repo',\r\n  templateUrl: './header-new-repo.component.html',\r\n  styleUrls: ['./header-new-repo.component.scss'],\r\n})\r\nexport class HeaderNewRepoComponent implements OnInit {\r\n  dataTemplate: string;\r\n  @ViewChild('button') button: any;\r\n\r\n  constructor(\r\n    private _overlayAll: OverlayService,\r\n    private _dataSendedTemplate: TemplateRepositoryService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._dataSendedTemplate.templateData$.subscribe(\r\n      (resp) => (this.dataTemplate = resp)\r\n    );\r\n  }\r\n\r\n  openService(event: any) {\r\n    const target = this.button as HTMLElement;\r\n    this._overlayAll.display(target, TemplateRepositoryComponent);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".vorkurt__header__width-container {\r\n  width: 35.333333rem;\r\n}\r\n\r\n.vorkurt__header-newRepo-header {\r\n  mat-button-wrapper {\r\n    display: flex;\r\n    background: red;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header-new-repo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_overlayAll",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dataSendedTemplate",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_overlayAll",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dataSendedTemplate",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"pt-12 vorkurt__color-text font-normal\">\r\n  <div>\r\n    <div class=\"pb-5 vorkurt__border-bottom mb-6\">\r\n      <div class=\"text-2xl font-normal\">\r\n        <p>\r\n          Create New Repository\r\n        </p>\r\n      </div>\r\n      <div class=\"md:block xl:flex\">\r\n        <div class=\"vorkurt__header__width-container\">\r\n          <p class=\"leading-4 racking-widest vorkurt__color-text-line vorkurt__text-size-secondary w-44 xl:w-full\">\r\n            A repository contains all project files, including the revision history. Already have a project repository\r\n            elsewhere?\r\n          </p>\r\n        </div>\r\n        <div class=\"xs:bg-blue-700 xl:w-1/12 text-blue-500 underline cursor-pointer racking-widest leading-4\">\r\n          <p>\r\n            Import a repository\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"vorkurt__border-bottom pb-5 mb-6 vorkurt__border-bottom\">\r\n      <div>\r\n        <div class=\"flex flex-col\">\r\n          <span class=\"text-base m-0\">Repository template</span>\r\n          <span class=\"vorkurt__color-text-line\">Start your repository with a template repository's contents.</span>\r\n        </div>\r\n        <div class=\"pt-6\"\r\n        >\r\n          <div class=\"w-36\" #button>\r\n            <button mat-raised-button (click)=\"openService($event)\"\r\n                    class=\"w-max flex vorkurt__color-background vorkurt__color-text text-base font-normal\r\n               vorkurt__border-color vorkurt__header-newRepo-header\r\n          \"\r\n                    style=\"padding-left: 2px;\"\r\n            >\r\n              <div class=\"flex mx-2\">\r\n                <div>\r\n                  {{dataTemplate ? dataTemplate : 'No template'}}\r\n                </div>\r\n                <div>\r\n                  <mat-icon class=\"flex fixed\" [svgIcon]=\"'fa_solid:sort-down'\"></mat-icon>\r\n                </div>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ItemComponent",
            "id": "component-ItemComponent-59556ccb0fbafe948d97d2759d678b00",
            "file": "src/app/module/transport/item/item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-item",
            "styleUrls": [
                "./item.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "path",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "tooltipRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tooltipRef'"
                        }
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "goToPage",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigation",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { NewItemService } from './utils/services';\r\nimport { ElixTooltipService } from '../../../shared/utils/services';\r\n\r\n@Component({\r\n  selector: 'elix-item',\r\n  templateUrl: './item.component.html',\r\n  styleUrls: ['./item.component.sass'],\r\n})\r\nexport class ItemComponent implements OnInit {\r\n  path: any = '';\r\n  value: boolean = true;\r\n\r\n  @ViewChild('tooltipRef') tooltipRef: TemplateRef<any>;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _newItem: NewItemService,\r\n    private _elixTooltip: ElixTooltipService,\r\n    private _viewContainer: ViewContainerRef\r\n  ) {}\r\n\r\n  goToPage(action: string) {\r\n    if (action === 'finish') {\r\n      this._newItem.valueOnPodsNext(true);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.path = this.navigation();\r\n  }\r\n\r\n  navigation() {\r\n    return this._router.events\r\n      .pipe(filter((resp) => resp instanceof NavigationEnd))\r\n      .subscribe((url: any) => {\r\n        return (this.path = url.url.split('/').indexOf('new') == -1);\r\n      });\r\n  }\r\n\r\n  onClick(element: HTMLElement) {\r\n    this.value = true;\r\n    this._elixTooltip.initTooltip(\r\n      this.tooltipRef,\r\n      this._viewContainer,\r\n      element\r\n    );\r\n  }\r\n\r\n  onLeave() {\r\n    this._elixTooltip.close();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item-wrapper\r\n  height: 85vh\r\n\r\n  \r\n",
                    "styleUrl": "./item.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_newItem",
                        "type": "NewItemService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elixTooltip",
                        "type": "ElixTooltipService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_newItem",
                        "type": "NewItemService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elixTooltip",
                        "type": "ElixTooltipService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"item-wrapper\">\r\n  <div class=\"item-branch h-full\">\r\n    <div class=\"package-item flex flex-row items-center\">\r\n\r\n      <span #buttonElement>\r\n      Package Item\r\n       </span>\r\n      <span class=\"flex-1\">\r\n        <mat-icon [svgIcon]=\"'fa_solid:star'\"></mat-icon>\r\n      </span>\r\n      <div class=\"item__pagination-button \">\r\n        <span class=\"mr-2\">\r\n        1 of 1\r\n          </span>\r\n        <button elixBtnPrimary class=\"mr-5\" (click)=\"goToPage('new')\" [routerLink]=\"'new'\" *ngIf=\"path\"> New</button>\r\n        <button elixBtnPrimary (click)=\"goToPage('finish')\" *ngIf=\"!path\"> Finished</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"package__item-content h-full\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n"
        },
        {
            "name": "ItemsTooltipComponent",
            "id": "component-ItemsTooltipComponent-c2e55a2950d96c5fab65973e1a2a7ba3",
            "file": "src/app/module/transport/item/tooltip/items-tooltip/items-tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-items-tooltip",
            "styleUrls": [
                "./items-tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./items-tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { TooltipItemsService } from '../../../../../shared/utils/services';\r\n\r\n@Component({\r\n  selector: 'elix-items-tooltip',\r\n  templateUrl: './items-tooltip.component.html',\r\n  styleUrls: ['./items-tooltip.component.scss'],\r\n})\r\nexport class ItemsTooltipComponent implements OnInit {\r\n  value: string;\r\n  constructor(private _tooltipService: TooltipItemsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._tooltipService.dataSend$.subscribe((resp) => (this.value = resp));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".items__tooltip-wrapper {\r\n  color: var(--primary-color-text);\r\n}\r\n",
                    "styleUrl": "./items-tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_tooltipService",
                        "type": "TooltipItemsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_tooltipService",
                        "type": "TooltipItemsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<elix-jumbotron [type]=\"'template'\" *ngIf=\"value\" class=\"items__tooltip-wrapper\">\r\n\t<div>\r\n\t\t<span>\r\n\t\t\t{{value}}\r\n\t\t\t\r\n\t\t</span>\r\n\t</div>\t\r\n</elix-jumbotron>"
        },
        {
            "name": "LeftSideRepoComponent",
            "id": "component-LeftSideRepoComponent-aba7982992904b333fa8e71098c85544",
            "file": "src/app/module/account/left-side-repo/left-side-repo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-left-side-repo",
            "styleUrls": [
                "./left-side-repo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./left-side-repo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "repo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAccount[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ate",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AccountService } from '../../../shared/utils/services/account/account.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { IAccount } from '../../../shared/utils/interfaces';\r\n\r\n@Component({\r\n  selector: 'elix-left-side-repo',\r\n  templateUrl: './left-side-repo.component.html',\r\n  styleUrls: ['./left-side-repo.component.scss'],\r\n})\r\nexport class LeftSideRepoComponent implements OnInit, OnDestroy {\r\n  repo: IAccount[];\r\n  dataFilter: string;\r\n  private unsubscribe$ = new Subject();\r\n\r\n  constructor(private _accountService: AccountService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._accountService.dataRepo$\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe((resp) => {\r\n        this.repo = resp;\r\n      });\r\n  }\r\n\r\n  ate(event: string) {\r\n    this._accountService.filterDataFromQuery(event.toUpperCase());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./left-side-repo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div *ngIf=\"repo\" class=\"ml-2 text-white mt-2 pt-8 pl-7\">\r\n  <div>\r\n    <div class=\"flex items-center\">\r\n      <div class=\"flex-1\">\r\n        Repository\r\n      </div>\r\n      <div\r\n        class=\"flex h-7 items-center justify-center vorkurt__background-button w-1/4 rounded-lg ml-2 mr-2 cursor-pointer\"\r\n        [routerLink]=\"['/','new']\">\r\n        <button class=\"flex justify-center\">\r\n          <mat-icon class=\"text-white vorkurt__size-icon\" [svgIcon]=\"'fa_solid:book'\">\r\n          </mat-icon>\r\n          <div class=\"ml-2\">\r\n            <span>New</span>\r\n          </div>\r\n\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div elixInputPrimary class=\"mt-2 h-8 -ml-2 pr-2\">\r\n        <input\r\n          [ngModel]=\"dataFilter\"\r\n          type=\"text\"\r\n          name=\"price\"\r\n          id=\"price\"\r\n          class=\"h-8 vorkurt__background-primary focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n          placeholder=\"Find a repository\">\r\n      </div>\r\n    </div>\r\n    <div *ngFor=\"let resp of repo\" class=\"cursor-pointer\">\r\n      <div class=\"flex mt-2 mb-2 hover:underline\" [routerLink]=\"resp.link\">\r\n        <mat-icon\r\n          [svgIcon]=\"'fa_solid:user-circle'\"></mat-icon>\r\n        <div class=\"ml-2 mt-0.5\">\r\n          {{resp.owner}}/{{resp.repo}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ListItemsComponent",
            "id": "component-ListItemsComponent-800f803bbc05c310926763929cf113ca",
            "file": "src/app/module/transport/item/components/list-items/list-items.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-list-items",
            "styleUrls": [
                "./list-items.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-items.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "INewItemTypes[] | any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "test",
                    "defaultValue": "'sfdas'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openAction",
                    "args": [],
                    "optional": false,
                    "returnType": "IActionMaterialColumn[]",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { IActionMaterialColumn } from '../../../../../shared/utils/interfaces/shared';\r\nimport { ItemListService } from '../../utils/services';\r\nimport { INewItemTypes } from '../../utils/interfaces';\r\nimport { IDataSourceMaterialTable } from '../../../../../shared/utils/interfaces/shared/iData-source-material-table';\r\n\r\n@Component({\r\n  selector: 'elix-list-items',\r\n  templateUrl: './list-items.component.html',\r\n  styleUrls: ['./list-items.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ListItemsComponent implements OnInit {\r\n  test = 'sfdas';\r\n  dataSource: INewItemTypes[] | any;\r\n\r\n  constructor(private _listItem: ItemListService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._listItem.dataComming$.subscribe((resp: INewItemTypes[]) => {\r\n      this.dataSource = resp.map((resp: INewItemTypes) => {\r\n        return {\r\n          actions: this.openAction(),\r\n          editable: false,\r\n          model: resp,\r\n        } as IDataSourceMaterialTable<INewItemTypes>;\r\n      });\r\n    });\r\n  }\r\n\r\n  openAction(): IActionMaterialColumn[] {\r\n    return [\r\n      {\r\n        iconClass: 'fa_solid:check',\r\n        classCss: 'check',\r\n        method: (row: IDataSourceMaterialTable<INewItemTypes>) => {\r\n          this._listItem.updateItem('item_new', row.model.uuid, row.model);\r\n        },\r\n      },\r\n      {\r\n        iconClass: 'fa_solid:times',\r\n        classCss: 'check',\r\n        method: (row: any) => this._listItem.delete('item_new', row.model.uuid),\r\n      },\r\n      {\r\n        iconClass: 'fa_solid:check',\r\n        classCss: 'check',\r\n        method: (row: any) => row.whe,\r\n      },\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n  width: 100%;\r\n  color: #1c2128;\r\n  z-index: 50;\r\n}\r\n",
                    "styleUrl": "./list-items.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_listItem",
                        "type": "ItemListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_listItem",
                        "type": "ItemListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"dataSource.length>0\" >\r\n\t<elix-table [dataSource]=\"dataSource\" >\r\n\r\n\t\t<elix-column-text className=\"categoryId\" [iconClass]=\"'elixir'\" field=\"categoryId\" name=\"Category \"\r\n\t\t></elix-column-text >\r\n\t\t<elix-column-text className=\"hazaradous\" [iconClass]=\"'elixir'\" field=\"hazaradous\" name=\"Position\"\r\n\t\t></elix-column-text >\r\n\t\t<elix-column-text className=\"mixable\" [iconClass]=\"'elixir'\" field=\"mixable\" name=\"Mixable \" ></elix-column-text >\r\n\r\n\t\t<elix-column-text className=\"unitVolume\" [iconClass]=\"'elixir'\" field=\"unitVolume\"\r\n\t\t                  name=\"Volume\" ></elix-column-text >\r\n\t\t<elix-column-area-text className=\"whe\" name=\"Symbol\" [iconClass]=\"'fa_solid:plus'\"\r\n\t\t                       field=\"description\" ></elix-column-area-text >\r\n\t\t<elix-column-icon-action className=\"action\" name=\"Action\"\r\n\t\t                         field=\"action\" iconClass=\"fa_solid:sort-down\" ></elix-column-icon-action >\r\n\r\n\t</elix-table >\r\n</div >\r\n"
        },
        {
            "name": "MiddleComponent",
            "id": "component-MiddleComponent-1750aa04e43fdb059e5ef1f239ae92c7",
            "file": "src/app/module/newRepo/middle/middle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-middle",
            "styleUrls": [
                "./middle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./middle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "middle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'userName'"
                        }
                    ]
                },
                {
                    "name": "repositoryName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openServices",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDescription",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRepositoryName",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  OverlayService,\r\n  TemplateRepositoryService,\r\n} from '../../../shared/utils/services';\r\nimport { UserNameRepositoryComponent } from '../tooltip/user-name-repository/user-name-repository.component';\r\n\r\n@Component({\r\n  selector: 'elix-middle',\r\n  templateUrl: './middle.component.html',\r\n  styleUrls: ['./middle.component.scss'],\r\n})\r\nexport class MiddleComponent implements OnInit {\r\n  @ViewChild('userName') middle: any;\r\n\r\n  user: any;\r\n  repositoryName: string;\r\n  description: string;\r\n\r\n  constructor(\r\n    private _overlayAll: OverlayService,\r\n    private _templateRepository: TemplateRepositoryService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._templateRepository.templateUserName$.subscribe(\r\n      (resp) => (this.user = resp)\r\n    );\r\n  }\r\n\r\n  openServices(event: any) {\r\n    const target = this.middle as HTMLElement;\r\n    this._overlayAll.display(target, UserNameRepositoryComponent);\r\n  }\r\n\r\n  setDescription(event: Event) {\r\n    const a = event.target as HTMLTextAreaElement;\r\n    this._templateRepository.sendDescriptionNameOnObservable(a.value ?? '');\r\n  }\r\n\r\n  setRepositoryName(event: Event) {\r\n    const a = event.target as HTMLTextAreaElement;\r\n    this._templateRepository.sendRepositoryNameOnObservable(a.value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./middle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_overlayAll",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_templateRepository",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "_overlayAll",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_templateRepository",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"vorkurt__border-bottom pb-5 mb-6\">\r\n  <div class=\"flex\">\r\n    <div class=\"w-44\">\r\n      <span>\r\n        Owner <span class=\"text-red-600\">\r\n        *\r\n      </span>\r\n      </span>\r\n    </div>\r\n    <div>\r\n      <span>\r\n        Repository Name <span class=\"text-red-600\">\r\n        *\r\n      </span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex pt-1 mb-2\">\r\n    <div #userName>\r\n      <button mat-raised-button (click)=\"openServices($event)\"\r\n              class=\"w-max flex vorkurt__color-background vorkurt__color-text text-base font-normal\r\n               vorkurt__border-color vorkurt__header-newRepo-header\r\n          \"\r\n              style=\"padding-left: 2px;\"\r\n      >\r\n        <div class=\"flex mx-2\">\r\n          <div>\r\n            {{user ? user : 'User Name'}}\r\n          </div>\r\n          <div>\r\n            <mat-icon class=\"flex fixed\" [svgIcon]=\"'fa_solid:sort-down'\"></mat-icon>\r\n          </div>\r\n        </div>\r\n      </button>\r\n    </div>\r\n    <div class=\"flex items-center mx-2 text-3xl mr-4\">\r\n      <span> / </span>\r\n    </div>\r\n    <div class=\"flex\">\r\n      <div class=\"h-8 -ml-2 pr-2 w-72\">\r\n        <input\r\n          (change)=\"setRepositoryName($event)\"\r\n          type=\"text\"\r\n          name=\"price\"\r\n          id=\"repo\"\r\n          class=\"focus:vorkurt__border-input h-9 vorkurt__background-primary focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-4 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"mb-2\">\r\n    Great repository names are short an memorable. Need inspiration? How about musical-umbrella?\r\n  </div>\r\n  <div class=\"mt-5\">\r\n    <div class=\"text-base font-normal\">\r\n      <span>Description (optional)</span>\r\n    </div>\r\n    <input\r\n      (change)=\"setDescription($event)\"\r\n      type=\"text\"\r\n      name=\"price\"\r\n      id=\"description\"\r\n      class=\"focus:vorkurt__border-input h-9 vorkurt__background-primary focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-4 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n    >\r\n  </div>\r\n\r\n</div>\r\n<div class=\"flex vorkurt__border-bottom pb-5 mb-6\">\r\n  <div>\r\n    <section class=\"flex flex-col\">\r\n      <mat-checkbox class=\"example-margin\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex justify-center items-center mr-2\">\r\n            <mat-icon class=\"text-white vorkurt__size-icon text-xl\" [svgIcon]=\"'fa_solid:book'\"></mat-icon>\r\n          </div>\r\n          <div class=\"flex flex-col\">\r\n            <span class=\"h-3 text-base\">\r\n              Public\r\n            </span>\r\n            <span>\r\n              Anyone on the internet can see this repository. You choose who can commit.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </mat-checkbox>\r\n      <mat-checkbox class=\"example-margin my-3\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex justify-center items-center mr-2\">\r\n            <mat-icon class=\"text-white vorkurt__size-icon\" [svgIcon]=\"'fa_solid:lock'\"></mat-icon>\r\n          </div>\r\n          <div class=\"flex flex-col\">\r\n            <span class=\"h-3 text-base\">\r\n               Private\r\n            </span>\r\n            <span>\r\n              You choose who can see and commit to this repository\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </mat-checkbox>\r\n    </section>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NewItemsComponent",
            "id": "component-NewItemsComponent-b97b8ca97389815e4adbc286b801050b",
            "file": "src/app/module/transport/item/components/new-items/new-items.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-new-items",
            "styleUrls": [
                "./new-items.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./new-items.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'formDirective'"
                        }
                    ]
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, NgForm } from '@angular/forms';\r\nimport { create_UUID } from '../../../../../config/global/generator';\r\nimport { NewItemService } from '../../utils/services/new-item.service';\r\n\r\n@Component({\r\n  selector: 'elix-new-items',\r\n  templateUrl: './new-items.component.html',\r\n  styleUrls: ['./new-items.component.sass'],\r\n})\r\nexport class NewItemsComponent implements OnInit {\r\n  items: FormGroup;\r\n  @ViewChild('formDirective') formDirective: NgForm;\r\n\r\n  constructor(private _newItem: NewItemService) {\r\n    this.initForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._newItem.podsOnPipe$.subscribe((resp) => {\r\n      console.log(resp);\r\n      if (resp === true) {\r\n        this._newItem.dataSend(this.items.value).then((r) => {\r\n          this.initForm();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getValue() {\r\n    this._newItem.podsOnPipe$.subscribe((resp) => resp);\r\n  }\r\n\r\n  private initForm() {\r\n    this.items = new FormGroup({\r\n      pckItemId: new FormControl(create_UUID()),\r\n      itemId: new FormControl(create_UUID()),\r\n      hazmatPckTypeId: new FormControl(''),\r\n      pckWeight: new FormControl(''),\r\n      pckWidth: new FormControl(''),\r\n      unitLength: new FormControl(''),\r\n      diameterPerShipUnit: new FormControl(''),\r\n      pckItemTypeId: new FormControl(''),\r\n      innerPackPckUnit: new FormControl(''),\r\n      bulkMixingFamilyId: new FormControl(''),\r\n      description: new FormControl(''),\r\n      priority: new FormControl(''),\r\n      pckUnit: new FormControl(''),\r\n      unitVolume: new FormControl(''),\r\n      unitWidth: new FormControl(''),\r\n      coreDiameter: new FormControl(''),\r\n      thuProfileId: new FormControl(''),\r\n      innerPackSize: new FormControl(''),\r\n      compartmentTypeProfileId: new FormControl(''),\r\n      hazaradous: new FormControl(false),\r\n      mixable: new FormControl(false),\r\n      defaultPck: new FormControl(false),\r\n      unitHeight: new FormControl(''),\r\n      loadConfigRuleRank: new FormControl(''),\r\n      innerPckSizeUOMcode: new FormControl(''),\r\n      categoryId: new FormControl(create_UUID()),\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".package__item-content\r\n  border: 1px solid\r\n  overflow: auto\r\n\r\n  .item-branch\r\n    .package__item-content-child\r\n      display: flex\r\n      justify-content: space-between\r\n      text-transform: capitalize\r\n      height: 84vh\r\n\r\n      .item-background__input\r\n        background: var(--secondary-input-background)\r\n\r\n      .package__item__content-per\r\n        display: flex\r\n        flex-direction: column\r\n        justify-content: space-around\r\n\r\n        .example-margin\r\n          &:not(:checked)\r\n            border: 1px solid var(--second-primary-text)\r\n            border-radius: .3rem\r\n            outline: none",
                    "styleUrl": "./new-items.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_newItem",
                        "type": "NewItemService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_newItem",
                        "type": "NewItemService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"package__item-content\" >\r\n\t<div class=\"item-branch\" >\r\n\t\t<form #formDirective=\"ngForm\" [formGroup]=\"items\" >\r\n\t\t\t<div class=\"package__item-content-child p-5\" >\r\n\t\t\t\t<div class=\"package__item__content-per\" >\r\n\t\t\t\t\t<div class=\"flex-row\" >\r\n\t\t\t\t\t\t<div ><span class=\"text-red-500\" >*</span >\r\n\t\t\t\t\t\t\tPackage Item ID\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input class=\"overflow-ellipsis item-background__input\" elixTooltipDirective type=\"text\" id=\"pckItemId\"\r\n\t\t\t\t\t\t\t       readonly\r\n\t\t\t\t\t\t\t       style=\"border:none\"\r\n\t\t\t\t\t\t\t       formControlName=\"pckItemId\" >\r\n\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span class=\"text-red-500\" >*</span >\r\n\t\t\t\t\t\t<span >Item ID</span >\r\n\t\t\t\t\t\t<span >\r\n\t\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t\t<input class=\"overflow-ellipsis item-background__input\" readonly elixTooltipDirective id=\"item-id\"\r\n\t\t\t\t\t\t\t\t       type=\"text\"\r\n\t\t\t\t\t\t\t\t       formControlName=\"itemId\" >\r\n\t\t\t\t\t\t\t</div >\r\n            </span >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Hazmat Package Type ID</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input elixTooltipDirective id=\"hazmatPck\" type=\"text\" formControlName=\"hazmatPckTypeId\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Package weight</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"pckWeight\" type=\"text\" formControlName=\"pckWeight\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Package width</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"pckWidth\" type=\"text\" formControlName=\"pckWidth\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Unit Length</span >\r\n\t\t\t\t\t\t<div class=\"vorkurt__primary-input\" >\r\n\t\t\t\t\t\t\t<input id=\"unitLength\" type=\"text\" formControlName=\"unitLength\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Diameter per Ship Unit</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"diameterPerShipUnit\" type=\"text\" formControlName=\"diameterPerShipUnit\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Package item Type ID</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"pckItemTypeId\" type=\"text\" formControlName=\"pckItemTypeId\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Inner Pack Packaging Unit</span >\r\n\t\t\t\t\t\t<span >\r\n              <!--              {{20_inch_pipe}}-->\r\n            </span >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Bulk Mixing Family ID</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"bulkMixingFamilyId\" type=\"text\" formControlName=\"bulkMixingFamilyId\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t</div >\r\n\t\t\t\t<div class=\"package__item__content-per\" >\r\n\t\t\t\t\t<!--\t\t\t\t\t\tmiddle-->\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Description</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<textarea elixTooltipDirective id=\"description\" formControlName=\"description\" ></textarea >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Priority</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"priority\" type=\"text\" formControlName=\"priority\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Packaging unit</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"pckUnit\" type=\"text\" formControlName=\"pckUnit\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Unit Volume</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"unitVolume\" type=\"text\" formControlName=\"unitVolume\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Unit width</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"unitWidth\" type=\"text\" formControlName=\"unitWidth\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Core Diameter</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"coreDiameter\" type=\"text\" formControlName=\"coreDiameter\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >THU Profile ID</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"thuProfileId\" type=\"text\" formControlName=\"thuProfileId\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Inner Pack Size</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"innerPackSize\" type=\"text\" formControlName=\"innerPackSize\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Compartment Type Profile ID</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"compartmentTypeProfileId\" type=\"text\" formControlName=\"compartmentTypeProfileId\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t</div >\r\n\t\t\t\t<div class=\"package__item__content-per\" >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Hazaradous</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<mat-checkbox\r\n                  formControlName=\"hazaradous\"\r\n                class=\"example-margin\"\r\n\t\t\t\t\t\t\t              [checked]=\"false\"\r\n\t\t\t\t\t\t\t              [color]=\"'primary'\" >\r\n\r\n\t\t\t\t\t\t\t</mat-checkbox >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div class=\"mt-20\" >\r\n\t\t\t\t\t\t<span >Mixable</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<mat-checkbox\r\n                formControlName=\"mixable\"\r\n                class=\"example-margin\"\r\n\t\t\t\t\t\t\t              [checked]=\"false\"\r\n\t\t\t\t\t\t\t              [color]=\"'primary'\" >\r\n\r\n\t\t\t\t\t\t\t</mat-checkbox >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Default Packaging</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<mat-checkbox\r\n                formControlName=\"defaultPck\"\r\n                class=\"example-margin\"\r\n\t\t\t\t\t\t\t              [checked]=\"false\"\r\n\t\t\t\t\t\t\t              [color]=\"'primary'\" >\r\n\r\n\t\t\t\t\t\t\t</mat-checkbox >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Unit Height</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"unitHeight\" type=\"text\" formControlName=\"unitHeight\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Load Config Rule Rank</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"loadConfigRuleRank\" type=\"text\" formControlName=\"loadConfigRuleRank\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Inner Pack Size UOM Code </span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input id=\"innerPckSizeUOMcode\" type=\"text\" formControlName=\"innerPckSizeUOMcode\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<span >Category ID</span >\r\n\t\t\t\t\t\t<div elixInputPrimary >\r\n\t\t\t\t\t\t\t<input elixTooltipDirective class=\"overflow-ellipsis item-background__input\" id=\"categoryId\" type=\"text\"\r\n\t\t\t\t\t\t\t       formControlName=\"categoryId\" >\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t</div >\r\n\t\t\t</div >\r\n\t\t</form >\r\n\t</div >\r\n</div >\r\n"
        },
        {
            "name": "NewRepoComponent",
            "id": "component-NewRepoComponent-a74a716f0a2f929e7587c7bd800250d2",
            "file": "src/app/module/newRepo/new-repo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-new-repo",
            "styleUrls": [
                "./new-repo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-repo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-new-repo',\r\n  templateUrl: './new-repo.component.html',\r\n  styleUrls: ['./new-repo.component.scss'],\r\n})\r\nexport class NewRepoComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./new-repo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"vorkurt__height-account vorkurt__color-text font-normal\">\r\n  <div class=\"flex justify-center h-full\">\r\n    <div class=\"w-1/3\">\r\n      <elix-header-new-repo></elix-header-new-repo>\r\n      <elix-middle></elix-middle>\r\n      <elix-bottom></elix-bottom>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-09d682f388241f84d99f7b2be81b4da8",
            "file": "src/app/module/header/tooltip/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-notification",
            "styleUrls": [
                "./notification.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "notifications",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITimer[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { TimerService } from '../../../../shared/utils/services/timer/timer.service';\r\nimport { ITimer } from '../../../../shared/utils/interfaces';\r\n\r\n@Component({\r\n  selector: 'elix-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  notifications: ITimer[];\r\n\r\n  constructor(private _timerService: TimerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._timerService.counterData$.subscribe(\r\n      (resp) => (this.notifications = resp)\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".vorkurt__notification:hover {\r\n  background: #316dca;\r\n  color: #8f8f8f;\r\n}\r\n",
                    "styleUrl": "./notification.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_timerService",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_timerService",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<elix-jumbotron *ngIf=\"notifications.length\" [type]=\"'template'\"\r\n                class=\"text-xl vorkurt__color-text flex vorkurt__container-template\">\r\n  <div *ngFor=\"let notification of notifications\" class=\"flex flex-col\">\r\n    <div class=\"hover: cursor-pointer flex vorkurt__notification\">\r\n      <div class=\"w-10\">{{notification.id}}</div>\r\n      <div>{{notification.name}}</div>\r\n    </div>\r\n  </div>\r\n</elix-jumbotron>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-187d30ce1fc41df6663b5e1cf53a4312",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a\n          href=\"https://componentdriven.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page\n        states without needing to navigate to them in your app. Here are some\n        handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose\n          such data from the \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock\n          these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a\n          href=\"https://storybook.js.org/docs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 12 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"onLogout.emit($event)\"\r\n      (onLogin)=\"onLogin.emit($event)\"\r\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a\r\n          href=\"https://componentdriven.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page\r\n        states without needing to navigate to them in your app. Here are some\r\n        handy patterns for managing page data in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose\r\n          such data from the \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock\r\n          these services out using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a\r\n          href=\"https://storybook.js.org/tutorials/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a\r\n          href=\"https://storybook.js.org/docs\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          docs\r\n        </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg\r\n          width=\"10\"\r\n          height=\"10\"\r\n          viewBox=\"0 0 12 12\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nh2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\np {\r\n  margin: 1em 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-5a26a08dbbc2e00a98958ca5de79ee06",
            "file": "src/@core/core/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex font-normal h-5/6 items-center justify-center text-6xl vorkurt__color-text\">\r\n  <div>\r\n    <div class=\"flex items-center flex-col\">\r\n      <div class=\"pb-20\">\r\n      Page Not Foun\r\n      </div>\r\n      <div class=\"w-1/3\">\r\n        <img src=\"https://1.bp.blogspot.com/-RyFB60VBiA0/XqxM-LYTR4I/AAAAAAAABE0/A4bqBPK_ETMzDRK_qO_s0ooiSiMF19xgACLcBGAsYHQ/s1600/sed%2Bdp%2Bfor%2Bwhatsapp.jpg\">\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-center\">\r\n      <button mat-button routerLink=\"/account\"> Go To Account </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-5a26a08dbbc2e00a98958ca5de79ee06-1",
            "file": "src/app/auth/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PageNotFoundComponent-1",
            "templateData": "<div>\r\n  <div class=\"flex justify-center items-center\">\r\n    <p class=\"text-4xl text-white\"> Page Not Found</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PickupCollectionComponent",
            "id": "component-PickupCollectionComponent-d03d08f75dc57ba4a6329742b15a3f5f",
            "file": "src/app/module/transport/pickup-collection/pickup-collection.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-pickup-collection",
            "styleUrls": [
                "./pickup-collection.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pickup-collection.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-pickup-collection',\r\n  templateUrl: './pickup-collection.component.html',\r\n  styleUrls: ['./pickup-collection.component.scss'],\r\n})\r\nexport class PickupCollectionComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pickup-collection.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  test\r\n</div>\r\n"
        },
        {
            "name": "PlanningFreightComponent",
            "id": "component-PlanningFreightComponent-b92c7e15d73dd9e9409891828335a6ee",
            "file": "src/app/module/transport/billing/planning-freight/planning-freight.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-planning-freight",
            "styleUrls": [
                "./planning-freight.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./planning-freight.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'elix-planning-freight',\n  templateUrl: './planning-freight.component.html',\n  styleUrls: ['./planning-freight.component.scss']\n})\nexport class PlanningFreightComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./planning-freight.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>planning-freight works!</p>\n"
        },
        {
            "name": "PlBillingComponent",
            "id": "component-PlBillingComponent-33b74b5493f8edc0a19f001582112153",
            "file": "src/app/module/transport/pl-billing/pl-billing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-pl-billing",
            "styleUrls": [
                "./pl-billing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pl-billing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-pl-billing',\r\n  templateUrl: './pl-billing.component.html',\r\n  styleUrls: ['./pl-billing.component.scss'],\r\n})\r\nexport class PlBillingComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pl-billing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex\" >\r\n\t<elix-wallet ></elix-wallet >\r\n</div >"
        },
        {
            "name": "PopUpLoginComponent",
            "id": "component-PopUpLoginComponent-68a92aa703e4a875a96a535b907b4098",
            "file": "src/app/module/header/pop-up-login/pop-up-login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-pop-up-login",
            "styleUrls": [
                "./pop-up-login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pop-up-login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "ComponentRef<PopUpLoginComponent>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "popUp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popUp'"
                        }
                    ]
                },
                {
                    "name": "start",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "timer",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "timerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pauseTimeout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resumeTimeOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "stopTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ComponentRef,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { PopUpStateService } from './pop-up-state.service';\r\nimport { AuthService } from '../../../shared/utils/services';\r\nimport { UserService } from '../../../shared/utils/services/user/user-service';\r\nimport { SpinnerStateService } from '../../../shared/component/spinner/spinner-state.service';\r\nimport { OverlayPopUpService } from '../../../shared/utils/services/overlay/overlay-pop-up.service';\r\n\r\n@Component({\r\n  selector: 'elix-pop-up-login',\r\n  templateUrl: './pop-up-login.component.html',\r\n  styleUrls: ['./pop-up-login.component.scss'],\r\n})\r\nexport class PopUpLoginComponent implements OnInit {\r\n  @ViewChild('popUp') popUp: ElementRef<HTMLElement>;\r\n  dataUser: any;\r\n  timerId: number;\r\n  start: number = 0;\r\n  timer: number = 0;\r\n\r\n  @Input() componentRef: ComponentRef<PopUpLoginComponent>;\r\n\r\n  constructor(\r\n    private _popState: PopUpStateService,\r\n    private _render: Renderer2,\r\n    private _authService: AuthService,\r\n    private _userService: UserService,\r\n    private _spinnerService: SpinnerStateService,\r\n    private _overlayConfig: OverlayPopUpService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.dataUser = this._userService.getUserLoggedIn();\r\n    this.resumeTimeOut();\r\n  }\r\n\r\n  signOut() {\r\n    this._popState.statePopLogin(false);\r\n    this._spinnerService.setStateBehaviorSpinner(true);\r\n    this._authService.logout();\r\n    this._spinnerService.setStateBehaviorSpinner(false);\r\n    this._overlayConfig.closeOverlay();\r\n  }\r\n\r\n  stopTimer() {\r\n    window.setTimeout(() => {\r\n      this.componentRef.destroy();\r\n    });\r\n  }\r\n\r\n  pauseTimeout() {\r\n    window.clearInterval(this.timer);\r\n  }\r\n\r\n  resumeTimeOut() {\r\n    this.timer = window.setInterval(() => {\r\n      if (this.start < 100) {\r\n        this.start += 10;\r\n      } else {\r\n        this.pauseTimeout();\r\n        this._overlayConfig.closeOverlay();\r\n        return;\r\n      }\r\n    }, 500);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".elix__border-color {\r\n  border-color: #1ea7fd;\r\n  box-shadow: 2px 1px 8px blue, -8px 0px 8px;\r\n  z-index: 100000000;\r\n  height: min-content;\r\n  position: relative;\r\n  border-bottom-right-radius: 1rem;\r\n  border-bottom-left-radius: 1rem;\r\n\r\n  .pop__login-progress {\r\n    position: absolute;\r\n    top: 0;\r\n  }\r\n}\r\n\r\nh1 {\r\n  margin: 0;\r\n  padding: 1em;\r\n}\r\n",
                    "styleUrl": "./pop-up-login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_popState",
                        "type": "PopUpStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_spinnerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_overlayConfig",
                        "type": "OverlayPopUpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "_popState",
                        "type": "PopUpStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_spinnerService",
                        "type": "SpinnerStateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_overlayConfig",
                        "type": "OverlayPopUpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div #popUp\r\n     class=\"\r\n border-2\r\n  text-white\r\n w-44 elix__border-color\r\n border-solid\r\n\"\r\n     (mouseenter)=\"pauseTimeout()\"\r\n     (mouseleave)=\"resumeTimeOut()\">\r\n  <div>\r\n    <div class=\"mt-2\">\r\n      <p class=\"truncate\">{{dataUser.email || dataUser.user.email}} </p>\r\n    </div>\r\n    <div>\r\n      <mat-progress-bar mode=\"determinate\" class=\"pop__login-progress \" [value]=start></mat-progress-bar>\r\n    </div>\r\n    <div class=\"flex justify-center\">\r\n      <button mat-flat-button (click)=\"signOut()\">Sign Out</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PullRequestComponent",
            "id": "component-PullRequestComponent-a4bf858a28665236966dc126717208d6",
            "file": "src/app/module/repository/pull-request/pull-request.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-pull-request",
            "styleUrls": [
                "./pull-request.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pull-request.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-pull-request',\r\n  templateUrl: './pull-request.component.html',\r\n  styleUrls: ['./pull-request.component.scss'],\r\n})\r\nexport class PullRequestComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pull-request.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <div>\r\n    <div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n<p>pull-request works!</p>\r\n"
        },
        {
            "name": "RepositoryTabProjectComponent",
            "id": "component-RepositoryTabProjectComponent-b6de077611b3ae9b272b6a3fe7447a1b",
            "file": "src/app/module/repository/repository-tab-project/repository-tab-project.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-repository-tab-project",
            "styleUrls": [
                "./repository-tab-project.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./repository-tab-project.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "routes",
                    "defaultValue": "[{ name: '', path: '' }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[literal type]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'elix-repository-tab-project',\r\n  templateUrl: './repository-tab-project.component.html',\r\n  styleUrls: ['./repository-tab-project.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class RepositoryTabProjectComponent implements OnInit {\r\n  routes: [{ name: string; path: string }] = [{ name: '', path: '' }];\r\n\r\n  constructor(private _router: ActivatedRoute) {}\r\n\r\n  handleClick(event: string) {\r\n    return event;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.routes = this._router.snapshot.data.data.router;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "elix-repository-tab-project {\r\n  .mat-tab-list.mat-tab-nav-bar {\r\n    color: white;\r\n    padding-bottom: 2px;\r\n  }\r\n\r\n  .vorkurt__margin {\r\n    a {\r\n      .mat-tab-list {\r\n        padding-top: 5px;\r\n      }\r\n\r\n      .mat-tab-links {\r\n        margin-top: -2px;\r\n        margin-left: 5px;\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n\r\n    a.active1 {\r\n      border-right: 1px;\r\n      border-left: 1px;\r\n      border: solid #1ea7fd;\r\n      border-bottom: none;\r\n      background: #22272e;\r\n      border-top-left-radius: 5px;\r\n      border-top-right-radius: 5px;\r\n      color: white;\r\n\r\n      .mat-tab-links {\r\n        margin-top: -6px;\r\n        margin-left: 5px;\r\n        margin-right: 5px;\r\n        height: 22px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-tab-nav-bar {\r\n    color: white;\r\n  }\r\n\r\n  .forkurt__border {\r\n    border-bottom: 1px solid #1ea7fd;\r\n  }\r\n\r\n  .vorkurt__margin {\r\n    margin-bottom: -1px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./repository-tab-project.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_router",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_router",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex forkurt__border\" cdkDrag>\r\n  <nav class=\"flex flex-1 vorkurt__margin-nav\">\r\n    <div *ngFor=\"let route of routes\" class=\"vorkurt__margin\">\r\n      <a mat-tab-nav-bar\r\n         class=\"flex flex-row text-blue-400 mr-2 ml-2\"\r\n         [routerLink]=\"route.path\"\r\n         routerLinkActive=\"active1\"\r\n         (click)=\"handleClick(route.name)\"\r\n\r\n      >{{route.name}}\r\n      </a>\r\n    </div>\r\n  </nav>\r\n  <div class=\"flex flex-wrap\">\r\n    sda\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "RightSideArtifactsComponent",
            "id": "component-RightSideArtifactsComponent-23f773165a0b4ca7799cc06b849408ee",
            "file": "src/app/module/account/right-side-artifacts/right-side-artifacts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-right-side-artifacts",
            "styleUrls": [
                "./right-side-artifacts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./right-side-artifacts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "hy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-right-side-artifacts',\r\n  templateUrl: './right-side-artifacts.component.html',\r\n  styleUrls: ['./right-side-artifacts.component.scss'],\r\n})\r\nexport class RightSideArtifactsComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  hy() {\r\n    console.log('Salut, Sergiu!');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./right-side-artifacts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"text-white ml-8\">\r\n\t<button elixBtnPrimary (click)=\"hy()\">Hello</button>\r\n\r\n\r\n</div>\r\n"
        },
        {
            "name": "SettingsComponent",
            "id": "component-SettingsComponent-89f20961d44944463372b9338c7a1341",
            "file": "src/app/module/repository/settings/settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-settings",
            "styleUrls": [
                "./settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>settings works!</p>\r\n"
        },
        {
            "name": "ShippingTransportationComponent",
            "id": "component-ShippingTransportationComponent-e575e69ce51f4c47f87a93086bbe2c6d",
            "file": "src/app/module/transport/shipping-transportation/shipping-transportation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-shipping-transpotation",
            "styleUrls": [
                "./shipping-transportation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-transportation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-shipping-transpotation',\r\n  templateUrl: './shipping-transportation.component.html',\r\n  styleUrls: ['./shipping-transportation.component.scss'],\r\n})\r\nexport class ShippingTransportationComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./shipping-transportation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>shipping-transpotation works!</p>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-3283eb605a719795e2528ae6a1ddc32d",
            "file": "src/app/shared/component/table/table/table.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Array<T>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<BaseColumn>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "BaseColumn"
                        }
                    ]
                },
                {
                    "name": "columnsToDispaly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<T>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { MatColumnDef, MatTable } from '@angular/material/table';\r\nimport { BaseColumn } from '../base-column';\r\n\r\n@Component({\r\n  selector: 'elix-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TableComponent<T> implements AfterViewInit {\r\n  @Input() dataSource: Array<T>;\r\n  columnsToDispaly: string[];\r\n  // this is where the magic happens:\r\n  @ViewChild(MatTable, { static: true }) table: MatTable<T>;\r\n  @ContentChildren(BaseColumn)\r\n  columnDefs: QueryList<BaseColumn>;\r\n\r\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  // after the <ng-content> has been initialized, the column definitions are available.\r\n  ngAfterViewInit(): void {\r\n    this.columnsToDispaly = this.columnDefs.map(\r\n      (resp: BaseColumn) => resp.columnDef.name\r\n    );\r\n    this.columnDefs\r\n      .map((resp: BaseColumn) => resp.columnDef)\r\n      .forEach((rep: MatColumnDef) => this.table.addColumnDef(rep));\r\n\r\n    try {\r\n      let duplicate = this.columnsToDispaly.filter(\r\n        (columnDisplay: string, index: number, self: string[]) =>\r\n          index === self.findIndex((value: string) => value === columnDisplay)\r\n      );\r\n      if (duplicate.length < this.columnsToDispaly.length) {\r\n        throw new Error(\r\n          'You duplicate value what you want to display, Please look in definitions at columns'\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    this._changeDetectorRef.detectChanges();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "elix-table {\r\n  transition: all 0.5s ease-in;\r\n  color: var(--primary-color-text);\r\n\r\n  mat-table {\r\n    color: transparent;\r\n    border-collapse: collapse;\r\n    border-radius: 0.5em 0.5em 0 0;\r\n    overflow: hidden;\r\n  }\r\n\r\n  mat-header-row {\r\n    mat-header-cell {\r\n      justify-content: center;\r\n      border-spacing: 2rem;\r\n    }\r\n  }\r\n\r\n  mat-row {\r\n    transition: all ease-in-out 0.1s;\r\n    color: var(--primary-color-text);\r\n    min-height: 19px;\r\n    position: relative;\r\n\r\n    textarea {\r\n      outline: none;\r\n    }\r\n\r\n    &:hover {\r\n      background: rgba(1, 1, 222, 0.1);\r\n    }\r\n\r\n    mat-cell {\r\n      justify-content: center;\r\n      position: relative;\r\n      min-height: 2rem;\r\n\r\n      textarea {\r\n        background: inherit;\r\n        height: 1.95rem;\r\n\r\n        &:focus-visible {\r\n          outline: none;\r\n          border: 1px solid var(--primary-color-input);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  mat-header-row {\r\n    min-height: 1.5rem;\r\n\r\n    mat-header-cell {\r\n      min-height: inherit;\r\n    }\r\n  }\r\n\r\n  mat-header-cell {\r\n    color: var(--primary-color-text) !important;\r\n  }\r\n\r\n  .header-color {\r\n    background: #2d333b;\r\n  }\r\n}\r\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-table mat-table [dataSource]=\"dataSource\" >\r\n\t<ng-content ></ng-content >\r\n\t<mat-header-row class=\"header-color\" mat-header-row *matHeaderRowDef=\"columnsToDispaly\" ></mat-header-row >\r\n\t<mat-row mat-row *matRowDef=\"let row; columns: columnsToDispaly\" ></mat-row >\r\n</mat-table >\r\n"
        },
        {
            "name": "TemplateRepositoryComponent",
            "id": "component-TemplateRepositoryComponent-70a80d4e4e474958bee617d8c725ffc7",
            "file": "src/app/module/newRepo/tooltip/template-repository/template-repository.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-template-repository",
            "styleUrls": [
                "./template-repository.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./template-repository.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "unSubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "INewRepository",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "INewRepository",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NewRepositoryService } from '../../../../shared/utils/services/newRepository/new-repository.service';\r\nimport { OverlayService } from '../../../../shared/utils/services/overlay/overlay.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ConnectionService } from '../../../../shared/utils/services/firebase/connection.service';\r\nimport { INewRepository } from '../../../../shared/utils/interfaces';\r\nimport { TemplateRepositoryService } from '../../../../shared/utils/services/newRepository/template-repository/template-repository.service';\r\n\r\n@Component({\r\n  selector: 'elix-template-repository',\r\n  templateUrl: './template-repository.component.html',\r\n  styleUrls: ['./template-repository.component.scss'],\r\n})\r\nexport class TemplateRepositoryComponent implements OnInit, OnDestroy {\r\n  dataTemplate: any;\r\n  private unSubscribe = new Subject();\r\n\r\n  constructor(\r\n    private _sendTemplate: TemplateRepositoryService,\r\n    private _newRepository: NewRepositoryService,\r\n    private _overlayService: OverlayService,\r\n    private _dbCon: ConnectionService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._newRepository.newRepo$\r\n      .pipe(takeUntil(this.unSubscribe))\r\n      .subscribe((resp) => {\r\n        this.dataTemplate = resp;\r\n      });\r\n  }\r\n\r\n  onClick(event: INewRepository) {\r\n    event.check = true;\r\n    this._dbCon.updateData(event).then((resp) => {\r\n      if (resp) {\r\n        this._sendTemplate.sendDataOnObservable(event.template);\r\n        this._overlayService.closeOverlay();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unSubscribe.next();\r\n    this.unSubscribe.complete();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".vorkurt__container-template {\r\n  div div:hover {\r\n    background: #316dca;\r\n\r\n    button {\r\n      color: #adbac7;\r\n    }\r\n  }\r\n\r\n  button {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n}\r\n",
                    "styleUrl": "./template-repository.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_sendTemplate",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_newRepository",
                        "type": "NewRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_overlayService",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dbCon",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_sendTemplate",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_newRepository",
                        "type": "NewRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_overlayService",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dbCon",
                        "type": "ConnectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<elix-jumbotron [type]=\"'template'\" class=\"mt-2 flex vorkurt__container-template\">\r\n  <div class=\"\">\r\n    <div class=\"flex items-start flex cursor-pointer p-0.5 items-stretch hover:w-96\"\r\n         (click)=\"onClick(dataTemplate)\"\r\n         *ngFor=\"let dataTemplate of dataTemplate\">\r\n      <div class=\"w-10 flex items-center\">\r\n        <mat-icon *ngIf=\"dataTemplate.check\" [svgIcon]=\"'fa_solid:check'\"></mat-icon>\r\n        TEst\r\n      </div>\r\n      <div *ngIf=\"dataTemplate\" class=\"w-6 flex items-center\"><img [src]='dataTemplate.icon'></div>\r\n      <div class=\"flex items-center\">\r\n        <button class=\"vorkurt__color-text font-bold\" mat-menu-item>{{dataTemplate.template}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</elix-jumbotron>\r\n"
        },
        {
            "name": "TimmerComponent",
            "id": "component-TimmerComponent-4dde15ac310700a328ebfb79fb263fb0",
            "file": "src/app/module/timer/timmer/timmer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-timmer",
            "styleUrls": [
                "./timmer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./timmer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "anotherTimer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "clearTimer",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "countDownDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "descriptionParent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "distance",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "flag",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "hour",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "minute",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "pause",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "second",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "timer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAudioPlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pauseTimeout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "startCounter",
                    "args": [
                        {
                            "name": "method",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pause",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pause",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTime",
                    "args": [
                        {
                            "name": "moment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pass",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "method",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "moment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pass",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "method",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { TimerService } from '../../../shared/utils/services/timer/timer.service';\r\n\r\n@Component({\r\n  selector: 'elix-timmer',\r\n  templateUrl: './timmer.component.html',\r\n  styleUrls: ['./timmer.component.scss'],\r\n})\r\nexport class TimmerComponent implements OnInit {\r\n  hour: number = 0;\r\n  minute: number = 0;\r\n  second: number = 0;\r\n  countDownDate: Date | any = new Date();\r\n  clearTimer: boolean = false;\r\n  public timer: any;\r\n  pause: boolean = true;\r\n  flag: boolean = true;\r\n  style: string;\r\n  descriptionParent: string | any;\r\n  anotherTimer: any;\r\n  private distance: number = 1;\r\n\r\n  constructor(private _timerService: TimerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.timer = window.setInterval(() => {\r\n      const date = new Date();\r\n      if (this.clearTimer) {\r\n        this.updateDate(date, this.pause);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  pauseTimeout() {\r\n    window.clearInterval(this.timer);\r\n  }\r\n\r\n  updateTime(moment: string, pass: number, method: boolean) {\r\n    if (moment === 'hour' && method) {\r\n      this.hour += pass;\r\n    }\r\n    if (moment === 'minute' && method) {\r\n      this.minute += pass;\r\n    }\r\n    if (moment === 'second' && method) {\r\n      this.second += pass;\r\n    }\r\n    if (moment === 'hour' && !method) {\r\n      if (this.hour > 0) this.hour -= pass;\r\n      if (this.hour < 0) this.hour = 0;\r\n    }\r\n    if (moment === 'minute' && !method) {\r\n      if (this.minute > 0) this.minute -= pass;\r\n      if (this.minute < 0) this.minute = 0;\r\n    }\r\n    if (moment === 'second' && !method) {\r\n      if (this.second > 0) this.second -= pass;\r\n      if (this.second < 0) this.second = 0;\r\n    }\r\n  }\r\n\r\n  startCounter(method: string) {\r\n    if (method === 'start') {\r\n      this.pause = true;\r\n      this.clearTimer = true;\r\n      this.countDownDate = new Date(\r\n        new Date().setHours(\r\n          new Date().getHours() + this.hour,\r\n          new Date().getMinutes() + this.minute,\r\n          new Date().getSeconds() + this.second\r\n        )\r\n      );\r\n      this.flag = false;\r\n    }\r\n    if (method == 'reset') {\r\n      this.pause = true;\r\n      this.clearTimer = true;\r\n      this.countDownDate = new Date(\r\n        new Date().setHours(\r\n          new Date().getHours(),\r\n          new Date().getMinutes(),\r\n          new Date().getSeconds()\r\n        )\r\n      );\r\n      this.hour = 0;\r\n      this.minute = 0;\r\n      this.second = 0;\r\n      this.clearTimer = false;\r\n      this.descriptionParent = '';\r\n      this.flag = true;\r\n    }\r\n    if (method === 'learn') {\r\n      this.clearTimer = true;\r\n      this.countDownDate = new Date(\r\n        new Date().setHours(\r\n          new Date().getHours(),\r\n          new Date().getMinutes() + 25,\r\n          new Date().getSeconds()\r\n        )\r\n      );\r\n      this.flag = false;\r\n    }\r\n    if (method === 'pause') {\r\n      this.pause = false;\r\n      this.clearTimer = true;\r\n      this.countDownDate = new Date(\r\n        new Date().setHours(\r\n          new Date().getHours() + this.hour,\r\n          new Date().getMinutes() + this.minute,\r\n          new Date().getSeconds() + this.second\r\n        )\r\n      );\r\n      this.flag = true;\r\n    }\r\n  }\r\n\r\n  onAudioPlay() {\r\n    let audio = new Audio();\r\n    audio.src = './../../../../assets/sound/warn/Msg Tone 2a.mp3';\r\n    audio.load();\r\n    audio.play().then((resp) => {\r\n      this.anotherTimer = setInterval(() => {}, 1000);\r\n    });\r\n  }\r\n\r\n  private updateDate(date: Date, pause: boolean) {\r\n    const now = date.getTime();\r\n    if (pause) {\r\n      this.distance = this.countDownDate - now;\r\n      this.flag = false;\r\n    }\r\n    this.hour = Math.floor(\r\n      (this.distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    this.minute = Math.floor((this.distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    this.second = Math.floor((this.distance % (1000 * 60)) / 1000);\r\n\r\n    if (this.distance < 0) {\r\n      this.hour = 0;\r\n      this.minute = 0;\r\n      this.second = 0;\r\n      this.clearTimer = false;\r\n      this.onAudioPlay();\r\n      clearInterval(this.anotherTimer);\r\n      this._timerService.sendCounterData({\r\n        name: this.descriptionParent,\r\n        id: 1,\r\n      });\r\n      this.flag = true;\r\n      this.style = '#adbac7';\r\n      this.descriptionParent = '';\r\n    }\r\n\r\n    if (this.distance < 2000) {\r\n      this.style = 'red';\r\n    }\r\n    return this.distance;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".vorkurt__padding-button {\r\n  width: 10rem;\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    button {\r\n      padding-right: 0px !important;\r\n      padding-left: 0px !important;\r\n      margin-bottom: 2rem;\r\n\r\n      .mat-button-wrapper {\r\n        background: red !important;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.mat-icon {\r\n  height: 3.562rem !important;\r\n  width: 3.562rem !important;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .mat-icon,\r\n  .timer {\r\n    font-size: 1.831rem !important;\r\n  }\r\n}\r\n",
                    "styleUrl": "./timmer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_timerService",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_timerService",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"flex-col mb-60 text-9xl vorkurt__color-text font-normal flex justify-center items-center h-1/6\">\r\n  <div [ngStyle]=\"{'color':style}\" [ngClass]=\"{'text-red-400': !descriptionParent}\">\r\n    Timer\r\n  </div>\r\n  <div class=\"flex h-full\">\r\n  <span class=\"text-2xl text-red-400\" *ngIf=\"!descriptionParent\">\r\n    Please introduce a description</span>\r\n  </div>\r\n</div>\r\n<div [ngStyle]=\"{'color':style}\"\r\n     class=\"timer sm:text-4xl lg:text-9xl vorkurt__color-text font-normal h-1/4 flex flex-col justify-center items-center\">\r\n  <div class=\"flex\">\r\n\r\n    <div class=\"vorkurt__padding-button\">\r\n      <div class=\"flex justify-center \">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('hour', 10, true)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:arrow-up'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('hour', 1, true)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:sort-up'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <span>\r\n          {{hour === 0 ? '00' : hour}}\r\n        </span>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('hour', 1, false)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:sort-down'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('hour', 10, false)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:arrow-down'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button *ngIf=\"flag\" [disabled]='!descriptionParent' (click)=\"startCounter('start')\"> Start\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button *ngIf=\"!flag\" mat-raised-button color=\"warn\" (click)=\"startCounter('pause')\"> Pause</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex items-center h-5/6\">\r\n\r\n      <div>\r\n        :\r\n      </div>\r\n    </div>\r\n    <div class=\"vorkurt__padding-button\">\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('minute', 10, true)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:arrow-up'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('minute', 1, true)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:sort-up'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <span>\r\n          {{minute === 0 ? '00' : minute}}\r\n        </span>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('minute', 1, false)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:sort-down'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('minute', 10, false)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:arrow-down'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button [disabled]=\"!flag || !descriptionParent\" (click)=\"startCounter('reset')\"> Reset</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex items-center h-5/6\">\r\n\r\n      <div>\r\n        :\r\n      </div>\r\n    </div>\r\n    <div class=\"vorkurt__padding-button\">\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('second', 10, true)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:arrow-up'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('second', 1, true)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:sort-up'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <span>\r\n          {{second === 0 ? '00' : second}}\r\n        </span>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('second', 1, false)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:sort-down'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <button [disabled]=\"!flag\" mat-button (click)=\"updateTime('second', 10, false)\">\r\n          <mat-icon [svgIcon]=\"'fa_solid:arrow-down'\"></mat-icon>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button [disabled]=\"!flag || !descriptionParent\" (click)=\"startCounter('learn')\"> Learn Mode\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n<div class=\"flex flex-row-reverse h-1/4\">\r\n  <div class=\"w-1/3\">\r\n    <div class=\"flex justify-center pr-4 pb-1 text-6xl vorkurt__color-text\">\r\n      Description\r\n    </div>\r\n    <div class=\"flex justify-center pr-4 pb-1 h-3/5\">\r\n      <textarea [(ngModel)]=\"descriptionParent\" class=\"w-full h-full px-5 py-1\" matInput></textarea>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-0e772ae464ae08ac0ed587bdffb3dcd3",
            "file": "src/app/shared/component/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-tooltip",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'elix-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrls: ['./tooltip.component.scss'],\r\n})\r\nexport class TooltipComponent {\r\n  @Input() width: number;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".elix__shared-border-color {\r\n  background: var(--backgroundPrimary);\r\n  border: 0.1rem solid rgba(234, 232, 232, 0.33);\r\n  box-shadow: 0 3px 0.3rem 0px rgb(209 209 209 / 15%);\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\r\n  <div\r\n    [style.width.px]=\"width\"\r\n    class=\" text-white  border-2 elix__shared-border-color border-solid rounded-lg m-2\">\r\n    <div class=\"p-2.5\">\r\n      <div>\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "TransportFrameComponent",
            "id": "component-TransportFrameComponent-4ae4affa8b49bac02a78cd11db7143eb",
            "file": "src/app/module/transport/transport-frame.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-transport",
            "styleUrls": [
                "./transport-frame.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transport-frame.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeRoute",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "routerForSideBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITmsRouter[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { ITmsRouter } from '../../shared/utils/interfaces';\r\n\r\n@Component({\r\n  selector: 'elix-transport',\r\n  templateUrl: './transport-frame.component.html',\r\n  styleUrls: ['./transport-frame.component.scss'],\r\n})\r\nexport class TransportFrameComponent {\r\n  routerForSideBar: ITmsRouter[];\r\n  activeRoute: boolean = false;\r\n\r\n  constructor(\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this.routerForSideBar = this._activateRouter.snapshot.data.data;\r\n    this._router.events.subscribe((resp: any) => {\r\n      if (resp instanceof NavigationEnd) {\r\n        this.activeRoute = resp.url === '/tms';\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@mixin z-index {\r\n  z-index: 100;\r\n}\r\n\r\n.transport__frame-content {\r\n  color: var(--primary-color-text);\r\n  width: 95vw;\r\n  padding: 0.6rem 0 0.4rem 3rem;\r\n  position: relative;\r\n\r\n  .transport__frame-img {\r\n    position: relative;\r\n\r\n    &:before {\r\n      position: absolute;\r\n      content: \"\";\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-image: linear-gradient(\r\n        to right bottom,\r\n        rgba(243, 243, 246, 0.4),\r\n        rgba(75, 75, 149, 0.39)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n.transport__menu {\r\n  width: 3rem;\r\n  transition: all 0.5s ease-in;\r\n  color: var(--primary-color-text);\r\n  @include z-index;\r\n  height: 92.5vh;\r\n\r\n  .transport__menu-bar {\r\n    height: 100vh;\r\n  }\r\n\r\n  div {\r\n    background: var(--primary-color-background);\r\n\r\n    div {\r\n      div {\r\n        div {\r\n          align-items: center;\r\n\r\n          &:hover {\r\n            &::after {\r\n              position: absolute;\r\n              content: \"\";\r\n              height: 100%;\r\n              width: 100%;\r\n              background: var(--primary-color-text);\r\n              z-index: 100;\r\n              opacity: 0.4;\r\n            }\r\n          }\r\n\r\n          .transport__text {\r\n            transition: all 0.2s;\r\n            align-items: center;\r\n            min-width: 12rem;\r\n            @include z-index;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .active {\r\n    color: var(--second-primary-text);\r\n\r\n    mat-icon {\r\n      margin-left: 0.5rem;\r\n      transform: scale(1.5);\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    div {\r\n      div {\r\n        div {\r\n          div {\r\n            align-items: center;\r\n\r\n            .transport__text {\r\n              align-items: center;\r\n              min-width: 13rem;\r\n              display: flex;\r\n              animation: test 0.3s ease-in-out;\r\n              transition: all 0.2s ease-in;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    width: 15rem;\r\n    @include z-index;\r\n    box-shadow: 1rem 1rem 24px rgb(3 2 1 / 30%);\r\n  }\r\n\r\n  .transport__menu-child {\r\n    mat-icon {\r\n      min-width: 2rem;\r\n    }\r\n\r\n    height: 3rem;\r\n    z-index: 100;\r\n  }\r\n}\r\n\r\n@keyframes test {\r\n  from {\r\n    min-width: 0;\r\n  }\r\n  to {\r\n    min-width: 13rem;\r\n    display: flex;\r\n    opacity: 1;\r\n  }\r\n}\r\n",
                    "styleUrl": "./transport-frame.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_activateRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_activateRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"flex z-50\">\r\n  <div class=\"flex\">\r\n    <div class=\"h-full transport__menu absolute\">\r\n      <div class=\"h-full\">\r\n        <div class=\"h-full\">\r\n          <div class=\"flex-col overflow-y-auto  h-full overflow-hidden transport__menu-bar\">\r\n            <div *ngFor=\"let route of routerForSideBar\" [routerLinkActive]=\"'active'\"\r\n                 [routerLink]=\"route.path\"\r\n                 class=\"flex transport__menu-child relative cursor-pointer\">\r\n              <mat-icon [svgIcon]=\"route.icon\" class=\"ml-1.5 mr-2.5\"></mat-icon>\r\n              <div class=\"transport__text justify-start text-sm text-base\">\r\n                <span> {{route.name}} </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex transport__menu-child relative cursor-pointer\">\r\n              <mat-icon [svgIcon]=\"'fa_solid:sign-out-alt'\" class=\"ml-1.5 mr-2.5\"></mat-icon>\r\n              <div class=\"transport__text justify-start text-sm text-base\">\r\n                <span> Logout</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"ml-6 absolute transport__frame-content mr-6\">\r\n      <elix-bread-crumb></elix-bread-crumb>\r\n      <div *ngIf=\"!activeRoute\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <div *ngIf=\"activeRoute\" class=\"flex flex-col justify-center item-center mt-24 transport__img\">\r\n        <div class=\"flex justify-center transport__airplane\">\r\n          <img src=\"assets/img/transport.jpeg\">\r\n        </div>\r\n        <div>\r\n          <a routerLink=\"items\"></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "UserNameRepositoryComponent",
            "id": "component-UserNameRepositoryComponent-814efbc5167413b4ad6e651b60824359",
            "file": "src/app/module/newRepo/tooltip/user-name-repository/user-name-repository.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-user-name-repository",
            "styleUrls": [
                "./user-name-repository.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-name-repository.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "usersName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { LocalStorageDataService } from '../../../../shared/utils/services/abstract/local-storage-data.service';\r\nimport { OverlayService } from '../../../../shared/utils/services/overlay/overlay.service';\r\nimport { TemplateRepositoryService } from '../../../../shared/utils/services/newRepository/template-repository/template-repository.service';\r\n\r\n@Component({\r\n  selector: 'elix-user-name-repository',\r\n  templateUrl: './user-name-repository.component.html',\r\n  styleUrls: ['./user-name-repository.component.scss'],\r\n})\r\nexport class UserNameRepositoryComponent implements OnInit {\r\n  usersName: any;\r\n\r\n  constructor(\r\n    private _templateRepository: TemplateRepositoryService,\r\n    private _localStoarage: LocalStorageDataService,\r\n    private _overlayGlobal: OverlayService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.usersName = JSON.parse(\r\n      <string>this._localStoarage.getResource('user')\r\n    );\r\n  }\r\n\r\n  onClick() {\r\n    this._templateRepository.sendUserNameOnObservable(\r\n      this.usersName.user.email\r\n    );\r\n    this._overlayGlobal.closeOverlay();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-name-repository.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_templateRepository",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_localStoarage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_overlayGlobal",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_templateRepository",
                        "type": "TemplateRepositoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_localStoarage",
                        "type": "LocalStorageDataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_overlayGlobal",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<elix-jumbotron [type]=\"'template'\" class=\"mt-2 flex vorkurt__container-template\"\r\n                *ngIf=\"usersName\">\r\n  <div class=\"\">\r\n    <div class=\"flex items-start flex cursor-pointer p-0.5 items-stretch hover:w-96\"\r\n         (click)=\"onClick()\"\r\n    >\r\n      <div class=\"w-10 flex items-center\">\r\n        <mat-icon [svgIcon]=\"'fa_solid:check'\"></mat-icon>\r\n      </div>\r\n      <div *ngIf class=\"w-6 flex items-center\">\r\n        <!--        <img [src]='dataTemplate.icon'>-->\r\n      </div>\r\n      <div class=\"flex items-center\">\r\n        <button class=\"vorkurt__color-text font-bold\" mat-menu-item>{{usersName.user.email}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</elix-jumbotron>\r\n"
        },
        {
            "name": "WalletComponent",
            "id": "component-WalletComponent-35dcf5bafcaa42663fcf2e38b6e8563c",
            "file": "src/app/module/transport/pl-billing/wallet/wallet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "elix-wallet",
            "styleUrls": [
                "./wallet.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./wallet.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataCoins",
                    "defaultValue": "new Array<IPlBillingData>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPlBillingData[] | any",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "favorites",
                    "defaultValue": "['bitcoin', 'solana', 'chainlink', 'ethereum']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PlBillingService } from '../../../../shared/utils/services/pl-billing/pl-billing.service';\r\nimport { IPlBillingData } from '../../../../shared/utils/interfaces/pl-billing/wrapper-pl-billing';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'elix-wallet',\r\n  templateUrl: './wallet.component.html',\r\n  styleUrls: ['./wallet.component.scss'],\r\n})\r\nexport class WalletComponent implements OnInit {\r\n  dataCoins: IPlBillingData[] | any = new Array<IPlBillingData>();\r\n  favorites = ['bitcoin', 'solana', 'chainlink', 'ethereum'];\r\n\r\n  // dataCoins: any;\r\n\r\n  constructor(\r\n    private _plBillingService: PlBillingService,\r\n    private _route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.dataCoins = this._route.snapshot.data.coins.data.filter((resp: any) =>\r\n      this.favorites.includes(resp.slug)\r\n    );\r\n\r\n    this.dataCoins.forEach((resp: IPlBillingData) =>\r\n      resp.metrics.market_data.price_usd.toFixed(2)\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wallet-content {\r\n  overflow: scroll;\r\n  height: 91vh;\r\n}\r\n",
                    "styleUrl": "./wallet.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_plBillingService",
                        "type": "PlBillingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_plBillingService",
                        "type": "PlBillingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-row \" >\r\n\t<div >\r\n\t\t<elix-jumbotron *ngFor=\"let coin of dataCoins\" class=\"p-5 \" type=\"template\" >\r\n\t\t\t<div class=\"wallet__coin\" >\r\n\t\t\t\t<div class=\"flex justify-between\" >\r\n\t\t\t\t\t<span >name</span >\r\n\t\t\t\t\t<span >\r\n\t\t\t\t\t\t\t{{coin?.slug}}\r\n\t\t\t\t\t\t</span >\r\n\t\t\t\t</div >\r\n\t\t\t\t<div class=\"flex justify-between\" >\r\n\t\t\t\t\t<span >Abrev</span >\r\n\t\t\t\t\t<span >\r\n\t\t\t\t\t\t\t{{coin.symbol}}\r\n\t\t\t\t\t\t</span >\r\n\t\t\t\t</div >\r\n\t\t\t</div >\r\n\t\t\t<div class=\"flex justify-between\" >\r\n\t\t\t\t<span >Price</span >\r\n\t\t\t\t<span >{{coin.metrics.market_data.price_usd | number :'2.0'}}</span >\r\n\t\t\t</div >\r\n\t\t</elix-jumbotron >\r\n\t</div >\r\n\t<div class=\"p-5\" >\r\n\t\tto be\r\n\r\n\t</div >\r\n</div >"
        }
    ],
    "modules": [
        {
            "name": "AccountModule",
            "id": "module-AccountModule-ac3708aec84202ba83fecef891b9cdc2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/account/account.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountComponent } from './account.component';\r\nimport { AccountRouting } from './account.routing';\r\nimport { LeftSideRepoComponent } from './left-side-repo/left-side-repo.component';\r\nimport { CenterActivityComponent } from './center-activity/center-activity.component';\r\nimport { RightSideArtifactsComponent } from './right-side-artifacts/right-side-artifacts.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountComponent,\r\n    LeftSideRepoComponent,\r\n    CenterActivityComponent,\r\n    RightSideArtifactsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRouting,\r\n    SharedModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class AccountModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "CenterActivityComponent"
                        },
                        {
                            "name": "LeftSideRepoComponent"
                        },
                        {
                            "name": "RightSideArtifactsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccountRouting"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccountRouting",
            "id": "module-AccountRouting-596b9c67b7a9f07b5e59e3b5f95f975e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/account/account.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AccountComponent } from './account.component';\r\nimport { AccountResolver } from '../../shared/utils/services/resolvers/account/account.resolver';\r\nimport { RepositoryTabProjectComponent } from '../repository/repository-tab-project/repository-tab-project.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountComponent,\r\n    resolve: { account: AccountResolver },\r\n    children: [\r\n      {\r\n        path: 'timer',\r\n        component: RepositoryTabProjectComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ApiModule",
            "id": "module-ApiModule-d28e865ca740e426f21b3865069334d3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/api/api.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiComponent } from './api.component';\r\nimport { AppApiRouting } from './api.routing';\r\n\r\n@NgModule({\r\n  declarations: [ApiComponent],\r\n  imports: [CommonModule, AppApiRouting],\r\n})\r\nexport class ApiModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ApiComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppApiRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppApiRouting",
            "id": "module-AppApiRouting-c3d6dc15e00911704ca66d6faa4c1681",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/api/api.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ApiComponent } from './api.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ApiComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppApiRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppBillingRouting",
            "id": "module-AppBillingRouting-6f63480f13156207679b1e70cdb35bf5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/billing/billing.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BillingComponent } from './billing.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BillingComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppBillingRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppCustomerRouting",
            "id": "module-AppCustomerRouting-8ecd0d3006257f63464d662294d845a9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/customer-support/customer-support.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomerSupportComponent } from './customer-support.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerSupportComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppCustomerRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppCustomerRouting",
            "id": "module-AppCustomerRouting-a2a0e82e9293cbee9e828d16cacec3ce-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/customer-vendor/customer-vendor.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomerVendorComponent } from './customer-vendor.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerVendorComponent,\r\n    children: [],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppCustomerRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppDashboardRouting",
            "id": "module-AppDashboardRouting-6451e6c2a6ef0f3ebba2fbba928c5683",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/dashboard/dashboard.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppDashboardRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppDeliveryRouting",
            "id": "module-AppDeliveryRouting-9a74c8540fd34e4bb301b4046f919285",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/delivery/delivery.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DeliveryComponent } from './delivery.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DeliveryComponent,\r\n    children: [],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppDeliveryRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppExploreRouting",
            "id": "module-AppExploreRouting-b3c9054d31a5b8c0d9191fbc9980cc75",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/explore/explore.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ExploreComponent } from './explore/explore.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ExploreComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppExploreRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppHeaderRouting",
            "id": "module-AppHeaderRouting-fc76d14fbbc768d1a0126175d0ea018a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/header/header.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HeaderComponent } from './header.component';\r\nimport { AuthGuardGuard } from '../../shared/utils/services';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'account', pathMatch: 'full' },\r\n\r\n  {\r\n    path: '',\r\n    component: HeaderComponent,\r\n    data: {\r\n      breadCrumb: 'Account',\r\n    },\r\n    children: [\r\n      {\r\n        path: 'account',\r\n        loadChildren: () =>\r\n          \"import('./../account/account.module').then((m) => m.AccountModule)\",\r\n        data: {\r\n          breadCrumb: 'Account',\r\n        },\r\n      },\r\n      {\r\n        path: 'new',\r\n        loadChildren: () =>\r\n          \"import('./../newRepo/new-repo.module').then((m) => m.NewRepoModule)\",\r\n        data: {\r\n          breadCrumb: 'NEW',\r\n        },\r\n      },\r\n      {\r\n        path: 'timer',\r\n        loadChildren: () =>\r\n          \"import('./../timer/timer.module').then((m) => m.TimerModule)\",\r\n        data: {\r\n          breadCrumb: 'Timer',\r\n        },\r\n      },\r\n      {\r\n        path: 'tms',\r\n        loadChildren: () =>\r\n          \"import('./../transport/transport.module').then(\\\n            (m) => m.TransportModule\\\n          )\",\r\n        data: {\r\n          breadCrumb: 'TMS',\r\n        },\r\n      },\r\n      {\r\n        path: 'explore',\r\n        loadChildren: () =>\r\n          \"import('./../explore/explore.module').then((m) => m.ExploreModule)\",\r\n        data: {\r\n          breadCrumb: 'Explore',\r\n        },\r\n      },\r\n      {\r\n        path: ':id',\r\n        canActivate: [AuthGuardGuard],\r\n        loadChildren: () =>\r\n          \"import('../repository/repository.module').then(\\\n            (m) => m.RepositoryModule\\\n          )\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppHeaderRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppHeaderRouting",
            "id": "module-AppHeaderRouting-6f0e123f8f6b617b1b6c4dbe6d8a8454-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/timer/timer.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TimmerComponent } from './timmer/timmer.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'timer', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: TimmerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppHeaderRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppItemRouting",
            "id": "module-AppItemRouting-7a9d4e072c0be0e70e68f6ac6585bb6a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/item/item.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ItemComponent } from './item.component';\r\nimport { NewItemsComponent } from './components/new-items/new-items.component';\r\nimport { ListItemsComponent } from './components/list-items/list-items.component';\r\nimport { ListItemsResolver } from './utils/services';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ItemComponent,\r\n    data: {\r\n      breadCrumb: 'Items',\r\n    },\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ListItemsComponent,\r\n        data: {\r\n          breadCrumb: 'List items',\r\n        },\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewItemsComponent,\r\n        data: {\r\n          breadCrumb: 'New item',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppItemRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-35139d71878629713367f92ad9c93649",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CoreModule } from '../@core/core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { firebaseConfig } from './config/auth/firebase';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { AngularFireDatabaseModule } from '@angular/fire/compat/database';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PageNotFoundComponent } from './auth/page-not-found/page-not-found.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { ForgotPasswordComponent } from './auth/forgot-password/forgot-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AuthComponent,\r\n    PageNotFoundComponent,\r\n    ForgotPasswordComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    AngularFireModule.initializeApp(firebaseConfig),\r\n    AngularFireDatabaseModule,\r\n    FormsModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    MatRippleModule,\r\n    OverlayModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    LayoutModule,\r\n    MatCheckboxModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "AuthComponent"
                        },
                        {
                            "name": "ForgotPasswordComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppPickupCollectionRouting",
            "id": "module-AppPickupCollectionRouting-e5573145bf8e146e538d9d579a71046b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/pickup-collection/pickup-collection.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PickupCollectionComponent } from './pickup-collection.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PickupCollectionComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppPickupCollectionRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppPlBillingRouting",
            "id": "module-AppPlBillingRouting-c1070c82b4fb9037e398e232a1e7a4ca",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/pl-billing/pl-billing.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlBillingComponent } from './pl-billing.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PlBillingComponent,\r\n    children: [],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppPlBillingRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRepositoryRouting",
            "id": "module-AppRepositoryRouting-7ef1a2b6fc97c4b47d16f4d39404f1b4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/repository/repository.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { routerArray } from '../../config/global/config-router';\r\nimport { RepositoryTabProjectComponent } from './repository-tab-project/repository-tab-project.component';\r\nimport { PullRequestComponent } from './pull-request/pull-request.component';\r\nimport { CodeComponent } from './code/code.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '' },\r\n  {\r\n    path: '',\r\n    component: RepositoryTabProjectComponent,\r\n    data: { data: routerArray },\r\n    children: [\r\n      {\r\n        path: 'code',\r\n        component: CodeComponent,\r\n      },\r\n      {\r\n        path: 'pull_request',\r\n        component: PullRequestComponent,\r\n      },\r\n      {\r\n        path: 'settings',\r\n        component: SettingsComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRepositoryRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-ed66bc847c3c44e217027edcad014d60",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuardGuard } from './shared/utils/services';\r\nimport { routerArray } from './config/global/config-router';\r\nimport { PageNotFoundComponent } from '../@core/core/page-not-found/page-not-found.component';\r\nimport { ForgotPasswordComponent } from './auth/forgot-password/forgot-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'forgot_password',\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    data: { data: routerArray.pageHeader },\r\n    canActivate: [AuthGuardGuard],\r\n    loadChildren: () =>\r\n      \"import('./module/header/header.module').then((m) => m.HeaderModule)\",\r\n  },\r\n  {\r\n    path: 'auth/l',\r\n    component: AuthComponent,\r\n  },\r\n  { path: '', redirectTo: 'auth/l', pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppShippingTransportationRouting",
            "id": "module-AppShippingTransportationRouting-9b8edd6cb4b131ef4186393b7aa9de2e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/shipping-transportation/shipping-transportation.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ShippingTransportationComponent } from './shipping-transportation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ShippingTransportationComponent,\r\n    children: [],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppShippingTransportationRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppTransportRouting",
            "id": "module-AppTransportRouting-6cc0b6b389a8fb40e85f86a6f151086b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/transport.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TransportFrameComponent } from './transport-frame.component';\r\nimport { routerArray } from '../../config/global/config-router';\r\nimport { PlBillingResolver } from '../../shared/utils/services/resolvers/pl-billing/pl-billing.resolver';\r\nimport { ListItemsResolver } from './item/utils/services';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TransportFrameComponent,\r\n    data: { data: routerArray.tms },\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () =>\r\n          \"import('./dashboard/dashboard.module').then((m) => m.DashboardModule)\",\r\n        data: {\r\n          breadCrumb: 'Dashboard',\r\n        },\r\n      },\r\n      {\r\n        path: 'items',\r\n        loadChildren: () =>\r\n          \"import('./item/item.module').then((m) => m.ItemModule)\",\r\n        resolve: { data: ListItemsResolver },\r\n      },\r\n      {\r\n        path: 'pck-collection',\r\n        loadChildren: () =>\r\n          \"import('./pickup-collection/pickup-collection.module').then(\\\n            (m) => m.PickupColectionModule\\\n          )\",\r\n        data: {\r\n          breadCrumb: 'Package Collection',\r\n        },\r\n      },\r\n      {\r\n        path: 'shp-transportation',\r\n        loadChildren: () =>\r\n          \"import(\\\n            './shipping-transportation/shipping-transportation.module'\\\n          ).then((m) => m.ShippingTransportationModule)\",\r\n        data: {\r\n          breadCrumb: 'Ship Transportation',\r\n        },\r\n      },\r\n      {\r\n        path: 'delivery',\r\n        loadChildren: () =>\r\n          \"import('./delivery/delivery.module').then((m) => m.DeliveryModule)\",\r\n        data: {\r\n          breadCrumb: 'Delivery',\r\n        },\r\n      },\r\n      {\r\n        path: 'ctm-support',\r\n        loadChildren: () =>\r\n          \"import('./customer-support/customer-support.module').then(\\\n            (m) => m.CustomerSupportModule\\\n          )\",\r\n        data: {\r\n          breadCrumb: 'Ctm Support',\r\n        },\r\n      },\r\n      {\r\n        path: 'billing',\r\n        loadChildren: () =>\r\n          \"import('./billing/billing.module').then((m) => m.BillingModule)\",\r\n        data: {\r\n          breadCrumb: 'Billing',\r\n        },\r\n      },\r\n      {\r\n        path: '3-pl-billing',\r\n        loadChildren: () =>\r\n          \"import('./pl-billing/pl-billing.module').then(\\\n            (m) => m.PlBillingModule\\\n          )\",\r\n        resolve: {\r\n          coins: PlBillingResolver,\r\n        },\r\n        data: {\r\n          breadCrumb: 'pl-billing',\r\n        },\r\n      },\r\n      {\r\n        path: 'api',\r\n        loadChildren: () => \"import('./api/api.module').then((m) => m.ApiModule)\",\r\n      },\r\n      {\r\n        path: 'customer-vendor',\r\n        loadChildren: () =>\r\n          \"import('./customer-vendor/customer-vendor.module').then(\\\n            (m) => m.CustomerVendorModule\\\n          )\",\r\n        data: {\r\n          breadCrumb: 'Customer Vendor',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppTransportRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BillingModule",
            "id": "module-BillingModule-ee65e54cc945e287ce85ab360bdbeb16",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/billing/billing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BillingComponent } from './billing.component';\r\nimport { AppBillingRouting } from './billing.routing';\r\n\r\n@NgModule({\r\n  declarations: [BillingComponent],\r\n  imports: [CommonModule, AppBillingRouting],\r\n})\r\nexport class BillingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BillingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppBillingRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-ba97c9e4887b68e79ec19787d92757a9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/@core/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { ErrorHandler, NgModule } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { GlobalErrorHandleService } from '../../app/shared/utils/services/abstract/global-error-handle.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [HttpClientModule, MatButtonModule, RouterModule],\r\n  providers: [{ provide: ErrorHandler, useClass: GlobalErrorHandleService }],\r\n  declarations: [PageNotFoundComponent],\r\n  exports: [PageNotFoundComponent],\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    private _domSanitizer: DomSanitizer,\r\n    private _matIconRegistry: MatIconRegistry\r\n  ) {\r\n    this._matIconRegistry.addSvgIconSetInNamespace(\r\n      'fa_brands',\r\n      this._domSanitizer.bypassSecurityTrustResourceUrl(\r\n        'assets/icons/svgs/brands.svg'\r\n      )\r\n    );\r\n    this._matIconRegistry.addSvgIconSetInNamespace(\r\n      'fa_regular',\r\n      this._domSanitizer.bypassSecurityTrustResourceUrl(\r\n        'assets/icons/svgs/regular.svg'\r\n      )\r\n    );\r\n    this._matIconRegistry.addSvgIconSetInNamespace(\r\n      'fa_solid',\r\n      this._domSanitizer.bypassSecurityTrustResourceUrl(\r\n        'assets/icons/svgs/solid.svg'\r\n      )\r\n    );\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PageNotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PageNotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomerSupportModule",
            "id": "module-CustomerSupportModule-4704f9d267791c9b4835921e11681533",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/customer-support/customer-support.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomerSupportComponent } from './customer-support.component';\r\nimport { AppCustomerRouting } from './customer-support.routing';\r\n\r\n@NgModule({\r\n  declarations: [CustomerSupportComponent],\r\n  imports: [CommonModule, AppCustomerRouting],\r\n})\r\nexport class CustomerSupportModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomerSupportComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppCustomerRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomerVendorModule",
            "id": "module-CustomerVendorModule-5a75bb2237e105c4c0a7096da50acc43",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/customer-vendor/customer-vendor.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomerVendorComponent } from './customer-vendor.component';\r\nimport { AppCustomerRouting } from './customer-vendor.routing';\r\n\r\n@NgModule({\r\n  declarations: [CustomerVendorComponent],\r\n  imports: [CommonModule, AppCustomerRouting],\r\n})\r\nexport class CustomerVendorModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomerVendorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppCustomerRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-886c98e4cc824e807559550bd1787f0f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { AppDashboardRouting } from './dashboard.routing';\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent],\r\n  imports: [CommonModule, AppDashboardRouting],\r\n})\r\nexport class DashboardModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppDashboardRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DeliveryModule",
            "id": "module-DeliveryModule-bd89d60efb5a3d362e54c85eb32b474a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/delivery/delivery.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DeliveryComponent } from './delivery.component';\r\nimport { AppDeliveryRouting } from './delivery.routing';\r\n\r\n@NgModule({\r\n  declarations: [DeliveryComponent],\r\n  imports: [CommonModule, AppDeliveryRouting],\r\n})\r\nexport class DeliveryModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DeliveryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppDeliveryRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExploreModule",
            "id": "module-ExploreModule-c950a8df45a47b58ef6f8a9a3c93d9e8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/explore/explore.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ExploreComponent } from './explore/explore.component';\r\nimport { AppExploreRouting } from './explore.routing';\r\n\r\n@NgModule({\r\n  declarations: [ExploreComponent],\r\n  imports: [CommonModule, AppExploreRouting],\r\n})\r\nexport class ExploreModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExploreComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppExploreRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "id": "module-HeaderModule-672747ae0a44d97c6b09c7276dc48de8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/header/header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppHeaderRouting } from './header.routing';\r\nimport { HeaderComponent } from './header.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PopUpLoginComponent } from './pop-up-login/pop-up-login.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { NotificationComponent } from './tooltip/notification/notification.component';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent, PopUpLoginComponent, NotificationComponent],\r\n  imports: [\r\n    OverlayModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    AppHeaderRouting,\r\n    DragDropModule,\r\n    SharedModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatBadgeModule,\r\n  ],\r\n})\r\nexport class HeaderModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "NotificationComponent"
                        },
                        {
                            "name": "PopUpLoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppHeaderRouting"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ItemModule",
            "id": "module-ItemModule-d502f2c3fca83197056f341e947aa48b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/item/item.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ItemComponent } from './item.component';\r\nimport { AppItemRouting } from './item.routing';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ItemsTooltipComponent } from './tooltip/items-tooltip/items-tooltip.component';\r\nimport { NewItemsComponent } from './components/new-items/new-items.component';\r\nimport { ListItemsComponent } from './components/list-items/list-items.component';\r\nimport { TableMaterialModule } from '../../../shared/component/table/table-material.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ItemComponent,\r\n    ItemsTooltipComponent,\r\n    NewItemsComponent,\r\n    ListItemsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppItemRouting,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    SharedModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    TableMaterialModule,\r\n    PortalModule,\r\n  ],\r\n})\r\nexport class ItemModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ItemComponent"
                        },
                        {
                            "name": "ItemsTooltipComponent"
                        },
                        {
                            "name": "ListItemsComponent"
                        },
                        {
                            "name": "NewItemsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppItemRouting"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "TableMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewRepoModule",
            "id": "module-NewRepoModule-9e3652f26e5f566b689b9595c8880668",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/newRepo/new-repo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NewRepoComponent } from './new-repo.component';\r\nimport { NewRepoRouting } from './new-repo.routing';\r\nimport { HeaderNewRepoComponent } from './header-new-repo/header-new-repo.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MiddleComponent } from './middle/middle.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { BottomComponent } from './bottom/bottom.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { TemplateRepositoryComponent } from './tooltip/template-repository/template-repository.component';\r\nimport { UserNameRepositoryComponent } from './tooltip/user-name-repository/user-name-repository.component';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NewRepoComponent,\r\n    HeaderNewRepoComponent,\r\n    MiddleComponent,\r\n    BottomComponent,\r\n    TemplateRepositoryComponent,\r\n    UserNameRepositoryComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NewRepoRouting,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCheckboxModule,\r\n    SharedModule,\r\n    DragDropModule,\r\n    MatButtonToggleModule,\r\n    MatMenuModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class NewRepoModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BottomComponent"
                        },
                        {
                            "name": "HeaderNewRepoComponent"
                        },
                        {
                            "name": "MiddleComponent"
                        },
                        {
                            "name": "NewRepoComponent"
                        },
                        {
                            "name": "TemplateRepositoryComponent"
                        },
                        {
                            "name": "UserNameRepositoryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NewRepoRouting"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewRepoRouting",
            "id": "module-NewRepoRouting-57c32afdbe9ebac2aec1a5ba7a2b381e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/newRepo/new-repo.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NewRepoComponent } from './new-repo.component';\r\nimport { NewRepositoryResolver } from '../../shared/utils/services/resolvers/newRepository/new-repository.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewRepoComponent,\r\n    resolve: { newRepo: NewRepositoryResolver },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NewRepoRouting {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PickupColectionModule",
            "id": "module-PickupColectionModule-0ba998b6fc9d3670d29844c374455558",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/pickup-collection/pickup-collection.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PickupCollectionComponent } from './pickup-collection.component';\r\nimport { AppPickupCollectionRouting } from './pickup-collection.routing';\r\n\r\n@NgModule({\r\n  declarations: [PickupCollectionComponent],\r\n  imports: [CommonModule, AppPickupCollectionRouting],\r\n})\r\nexport class PickupColectionModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PickupCollectionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppPickupCollectionRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlBillingModule",
            "id": "module-PlBillingModule-cb8ab81eb068b714985220e1fca69e54",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/pl-billing/pl-billing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlBillingComponent } from './pl-billing.component';\r\nimport { AppPlBillingRouting } from './pl-billing.routing';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [PlBillingComponent, WalletComponent],\r\n  imports: [CommonModule, AppPlBillingRouting, SharedModule],\r\n})\r\nexport class PlBillingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PlBillingComponent"
                        },
                        {
                            "name": "WalletComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppPlBillingRouting"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RepositoryModule",
            "id": "module-RepositoryModule-8bca734a46440b5c352613eef248ee5d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/repository/repository.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RepositoryTabProjectComponent } from './repository-tab-project/repository-tab-project.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRepositoryRouting } from './repository.routing';\r\nimport { PullRequestComponent } from './pull-request/pull-request.component';\r\nimport { CodeComponent } from './code/code.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RepositoryTabProjectComponent,\r\n    PullRequestComponent,\r\n    CodeComponent,\r\n    SettingsComponent,\r\n  ],\r\n  imports: [CommonModule, AppRepositoryRouting],\r\n})\r\nexport class RepositoryModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CodeComponent"
                        },
                        {
                            "name": "PullRequestComponent"
                        },
                        {
                            "name": "RepositoryTabProjectComponent"
                        },
                        {
                            "name": "SettingsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRepositoryRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-3d4811701ae0c77696cf88368d2384ea",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  BtnPrimaryDirective,\r\n  ElixDragDirective,\r\n  InputPrimaryDirective,\r\n} from './utils/services';\r\nimport {\r\n  BreadCrumbComponent,\r\n  ElixJumbotronComponent,\r\n  ElixSpinnerComponent,\r\n  TooltipComponent,\r\n} from './component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ElixJumbotronComponent,\r\n    ElixSpinnerComponent,\r\n    ElixDragDirective,\r\n    BtnPrimaryDirective,\r\n    InputPrimaryDirective,\r\n    BreadCrumbComponent,\r\n  ],\r\n  imports: [CommonModule, RouterModule],\r\n  exports: [\r\n    ElixSpinnerComponent,\r\n    ElixDragDirective,\r\n    ElixJumbotronComponent,\r\n    BtnPrimaryDirective,\r\n    InputPrimaryDirective,\r\n    BreadCrumbComponent,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BreadCrumbComponent"
                        },
                        {
                            "name": "BtnPrimaryDirective"
                        },
                        {
                            "name": "ElixDragDirective"
                        },
                        {
                            "name": "ElixJumbotronComponent"
                        },
                        {
                            "name": "ElixSpinnerComponent"
                        },
                        {
                            "name": "InputPrimaryDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BreadCrumbComponent"
                        },
                        {
                            "name": "BtnPrimaryDirective"
                        },
                        {
                            "name": "ElixDragDirective"
                        },
                        {
                            "name": "ElixJumbotronComponent"
                        },
                        {
                            "name": "ElixSpinnerComponent"
                        },
                        {
                            "name": "InputPrimaryDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShippingTransportationModule",
            "id": "module-ShippingTransportationModule-2cc6888757e717d526a6c85a6aac9afc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/shipping-transportation/shipping-transportation.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShippingTransportationComponent } from './shipping-transportation.component';\r\nimport { AppShippingTransportationRouting } from './shipping-transportation.routing';\r\n\r\n@NgModule({\r\n  declarations: [ShippingTransportationComponent],\r\n  imports: [CommonModule, AppShippingTransportationRouting],\r\n})\r\nexport class ShippingTransportationModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShippingTransportationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppShippingTransportationRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableMaterialModule",
            "id": "module-TableMaterialModule-abb8864bc809131bbb54e333558b911d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/component/table/table-material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TableComponent } from './table/table.component';\r\nimport { ColumnTextComponent } from './columns/column-text/column-text.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { ColumnAreaTextComponent } from './columns/column-area-text/column-area-text.component';\r\nimport { ColumnIconActionComponent } from './columns/column-icon-action/column-icon-action.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared.module';\r\nimport { TooltipComponent } from '../tooltip/tooltip.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TableComponent,\r\n    ColumnTextComponent,\r\n    ColumnAreaTextComponent,\r\n    ColumnIconActionComponent,\r\n    TooltipComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [\r\n    TableComponent,\r\n    ColumnTextComponent,\r\n    ColumnAreaTextComponent,\r\n    ColumnIconActionComponent,\r\n    TooltipComponent,\r\n  ],\r\n})\r\nexport class TableMaterialModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ColumnAreaTextComponent"
                        },
                        {
                            "name": "ColumnIconActionComponent"
                        },
                        {
                            "name": "ColumnTextComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ColumnAreaTextComponent"
                        },
                        {
                            "name": "ColumnIconActionComponent"
                        },
                        {
                            "name": "ColumnTextComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TimerModule",
            "id": "module-TimerModule-dc01d001ca036dd3537356043f6256bc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/timer/timer.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TimmerComponent } from './timmer/timmer.component';\r\nimport { AppHeaderRouting } from './timer.routing';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [TimmerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AppHeaderRouting,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class TimerModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TimmerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppHeaderRouting"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TransportModule",
            "id": "module-TransportModule-46ad5d1959b0908a5ae5c87766ea32a1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/module/transport/transport.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TransportFrameComponent } from './transport-frame.component';\r\nimport { AppTransportRouting } from './transport.routing';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [TransportFrameComponent],\r\n  imports: [CommonModule, AppTransportRouting, MatIconModule, SharedModule],\r\n})\r\nexport class TransportModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TransportFrameComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppTransportRouting"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_regexEmail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/global/generator.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/"
            },
            {
                "name": "ColorLight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header-cusotm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "STemplate.bind({})"
            },
            {
                "name": "configOverlay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/global/overlay.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  LEFT: {\r\n    originX: 'start',\r\n    originY: 'center',\r\n    overlayX: 'end',\r\n    overlayY: 'center',\r\n  } as ConnectedPosition,\r\n  RIGHT: {\r\n    originX: 'start',\r\n    originY: 'center',\r\n    overlayX: 'start',\r\n    overlayY: 'center',\r\n  } as ConnectedPosition,\r\n  TOP: {\r\n    originX: 'start',\r\n    originY: 'center',\r\n    overlayX: 'start',\r\n    overlayY: 'top',\r\n  } as ConnectedPosition,\r\n  BOTTOM: {\r\n    originX: 'center',\r\n    originY: 'top',\r\n    overlayX: 'center',\r\n    overlayY: 'bottom',\r\n  } as ConnectedPosition,\r\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DEFAULT_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IDialoConfig",
                "defaultValue": "{\r\n  hasBackdrop: true,\r\n  backdropClass: 'dark-backdrop',\r\n  panelClass: 'elixir-dialog-panel',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n}"
            },
            {
                "name": "firebaseConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/auth/firebase.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  apiKey: 'AIzaSyA6YpwfAmlLH4o6B1NQQeQ1uoHYnJoOvHs',\r\n  authDomain: 'vorkurt.firebaseapp.com',\r\n  databaseURL: 'https://vorkurt-default-rtdb.firebaseio.com',\r\n  projectId: 'vorkurt',\r\n  storageBucket: 'vorkurt.appspot.com',\r\n  messagingSenderId: '1044413194434',\r\n  appId: '1:1044413194434:web:4667694345fbde0e6adb5b',\r\n  measurementId: 'G-49RDGK301M',\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "routerArray",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/global/config-router.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.freeze({\r\n  router: [\r\n    {\r\n      name: 'Pull Request',\r\n      path: 'pull_request',\r\n    } as IConfigRouter,\r\n    {\r\n      name: 'Code',\r\n      path: 'code',\r\n    } as IConfigRouter,\r\n    {\r\n      name: 'Settings',\r\n      path: 'settings',\r\n    } as IConfigRouter,\r\n  ],\r\n  pageHeader: [\r\n    {\r\n      name: 'Issues',\r\n      path: 'issues',\r\n    },\r\n    {\r\n      name: 'Marketplace',\r\n      path: 'marketplace',\r\n    },\r\n    {\r\n      name: 'Explore',\r\n      path: 'explore',\r\n    },\r\n    {\r\n      name: 'Timer',\r\n      path: 'timer',\r\n    },\r\n    {\r\n      name: 'Transport',\r\n      path: 'tms',\r\n    },\r\n  ] as IConfigRouter[],\r\n  tms: [\r\n    {\r\n      name: 'Items',\r\n      path: 'items',\r\n      icon: 'fa_solid:pencil-alt',\r\n    },\r\n    {\r\n      name: 'Dashboard',\r\n      path: 'dashboard',\r\n      icon: 'fa_solid:tachometer-alt',\r\n    },\r\n    {\r\n      name: 'Pickup & Collection',\r\n      path: 'pck-collection',\r\n      icon: 'fa_solid:truck-pickup',\r\n    },\r\n    {\r\n      name: 'Shipping & Transportation',\r\n      path: 'shp-transportation',\r\n      icon: 'fa_solid:shipping-fast',\r\n    },\r\n    {\r\n      name: 'Delivery',\r\n      path: 'delivery',\r\n      icon: 'fa_solid:truck-loading',\r\n    },\r\n    {\r\n      name: 'Customer Support',\r\n      path: 'ctm-support',\r\n      icon: 'fa_solid:user-circle',\r\n    },\r\n    {\r\n      name: 'Billing',\r\n      path: 'billing',\r\n      icon: 'fa_solid:money-bill-wave',\r\n    },\r\n    {\r\n      name: '3-pl Billing',\r\n      path: '3-pl-billing',\r\n      icon: 'fa_solid:money-bill',\r\n    },\r\n    {\r\n      name: 'Api',\r\n      path: 'api',\r\n      icon: 'fa_brands:quinscape',\r\n    },\r\n    {\r\n      name: 'Customer & Vendor',\r\n      path: 'customer-vendor',\r\n      icon: 'fa_solid:warehouse',\r\n    },\r\n  ] as ITmsRouter[],\r\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "STemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header-cusotm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CenterActivityComponent>",
                "defaultValue": "(\r\n  args: CenterActivityComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [
            {
                "name": "create_UUID",
                "file": "src/app/config/global/generator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "getVelocityEmail",
                "file": "src/app/config/global/generator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "parameter",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "parameter",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/config/global/generator.ts": [
                {
                    "name": "_regexEmail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/global/generator.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/"
                }
            ],
            "src/stories/Header-cusotm.stories.ts": [
                {
                    "name": "ColorLight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header-cusotm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "STemplate.bind({})"
                },
                {
                    "name": "STemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header-cusotm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CenterActivityComponent>",
                    "defaultValue": "(\r\n  args: CenterActivityComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/config/global/overlay.ts": [
                {
                    "name": "configOverlay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/global/overlay.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  LEFT: {\r\n    originX: 'start',\r\n    originY: 'center',\r\n    overlayX: 'end',\r\n    overlayY: 'center',\r\n  } as ConnectedPosition,\r\n  RIGHT: {\r\n    originX: 'start',\r\n    originY: 'center',\r\n    overlayX: 'start',\r\n    overlayY: 'center',\r\n  } as ConnectedPosition,\r\n  TOP: {\r\n    originX: 'start',\r\n    originY: 'center',\r\n    overlayX: 'start',\r\n    overlayY: 'top',\r\n  } as ConnectedPosition,\r\n  BOTTOM: {\r\n    originX: 'center',\r\n    originY: 'top',\r\n    overlayX: 'center',\r\n    overlayY: 'bottom',\r\n  } as ConnectedPosition,\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts": [
                {
                    "name": "DEFAULT_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDialoConfig",
                    "defaultValue": "{\r\n  hasBackdrop: true,\r\n  backdropClass: 'dark-backdrop',\r\n  panelClass: 'elixir-dialog-panel',\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n}"
                }
            ],
            "src/app/config/auth/firebase.ts": [
                {
                    "name": "firebaseConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/auth/firebase.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  apiKey: 'AIzaSyA6YpwfAmlLH4o6B1NQQeQ1uoHYnJoOvHs',\r\n  authDomain: 'vorkurt.firebaseapp.com',\r\n  databaseURL: 'https://vorkurt-default-rtdb.firebaseio.com',\r\n  projectId: 'vorkurt',\r\n  storageBucket: 'vorkurt.appspot.com',\r\n  messagingSenderId: '1044413194434',\r\n  appId: '1:1044413194434:web:4667694345fbde0e6adb5b',\r\n  measurementId: 'G-49RDGK301M',\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/config/global/config-router.ts": [
                {
                    "name": "routerArray",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/global/config-router.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.freeze({\r\n  router: [\r\n    {\r\n      name: 'Pull Request',\r\n      path: 'pull_request',\r\n    } as IConfigRouter,\r\n    {\r\n      name: 'Code',\r\n      path: 'code',\r\n    } as IConfigRouter,\r\n    {\r\n      name: 'Settings',\r\n      path: 'settings',\r\n    } as IConfigRouter,\r\n  ],\r\n  pageHeader: [\r\n    {\r\n      name: 'Issues',\r\n      path: 'issues',\r\n    },\r\n    {\r\n      name: 'Marketplace',\r\n      path: 'marketplace',\r\n    },\r\n    {\r\n      name: 'Explore',\r\n      path: 'explore',\r\n    },\r\n    {\r\n      name: 'Timer',\r\n      path: 'timer',\r\n    },\r\n    {\r\n      name: 'Transport',\r\n      path: 'tms',\r\n    },\r\n  ] as IConfigRouter[],\r\n  tms: [\r\n    {\r\n      name: 'Items',\r\n      path: 'items',\r\n      icon: 'fa_solid:pencil-alt',\r\n    },\r\n    {\r\n      name: 'Dashboard',\r\n      path: 'dashboard',\r\n      icon: 'fa_solid:tachometer-alt',\r\n    },\r\n    {\r\n      name: 'Pickup & Collection',\r\n      path: 'pck-collection',\r\n      icon: 'fa_solid:truck-pickup',\r\n    },\r\n    {\r\n      name: 'Shipping & Transportation',\r\n      path: 'shp-transportation',\r\n      icon: 'fa_solid:shipping-fast',\r\n    },\r\n    {\r\n      name: 'Delivery',\r\n      path: 'delivery',\r\n      icon: 'fa_solid:truck-loading',\r\n    },\r\n    {\r\n      name: 'Customer Support',\r\n      path: 'ctm-support',\r\n      icon: 'fa_solid:user-circle',\r\n    },\r\n    {\r\n      name: 'Billing',\r\n      path: 'billing',\r\n      icon: 'fa_solid:money-bill-wave',\r\n    },\r\n    {\r\n      name: '3-pl Billing',\r\n      path: '3-pl-billing',\r\n      icon: 'fa_solid:money-bill',\r\n    },\r\n    {\r\n      name: 'Api',\r\n      path: 'api',\r\n      icon: 'fa_brands:quinscape',\r\n    },\r\n    {\r\n      name: 'Customer & Vendor',\r\n      path: 'customer-vendor',\r\n      icon: 'fa_solid:warehouse',\r\n    },\r\n  ] as ITmsRouter[],\r\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/config/global/generator.ts": [
                {
                    "name": "create_UUID",
                    "file": "src/app/config/global/generator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "getVelocityEmail",
                    "file": "src/app/config/global/generator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "parameter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "parameter",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/@core/core/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/forgot-password/forgot-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgotPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/config/auth/firebase.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "firebaseConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/global/config-router.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routerArray",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/global/generator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "create_UUID",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/global/generator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getVelocityEmail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/global/generator.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_regexEmail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/global/overlay.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configOverlay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/module/account/account.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/account/center-activity/center-activity.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CenterActivityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/account/left-side-repo/left-side-repo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftSideRepoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/module/account/right-side-artifacts/right-side-artifacts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RightSideArtifactsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/module/explore/explore/explore.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExploreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/module/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/module/header/pop-up-login/pop-up-login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopUpLoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/module/header/pop-up-login/pop-up-state.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PopUpStateService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/module/header/pop-up-login/pop-up-state.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOffsetPopUp",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/header/tooltip/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/module/newRepo/bottom/bottom.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/module/newRepo/header-new-repo/header-new-repo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderNewRepoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/module/newRepo/middle/middle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MiddleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/module/newRepo/new-repo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewRepoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/newRepo/tooltip/template-repository/template-repository.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateRepositoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/module/newRepo/tooltip/user-name-repository/user-name-repository.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserNameRepositoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/module/repository/code/code.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/repository/pull-request/pull-request.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PullRequestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/repository/repository-tab-project/repository-tab-project.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RepositoryTabProjectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/module/repository/settings/settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/timer/timmer/timmer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimmerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/api/api.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/billing/billing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/billing/planning-freight/planning-freight.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanningFreightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/customer-support/customer-support.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerSupportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/customer-vendor/customer-vendor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerVendorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/delivery/delivery.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeliveryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/components/list-items/list-items.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListItemsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/components/new-items/new-items.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewItemsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/tooltip/items-tooltip/items-tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemsTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/utils/interfaces/iNew-item.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INewItemTypes",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/utils/services/item-list.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ItemListService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/utils/services/new-item.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NewItemService",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/item/utils/services/resolver/list-items.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ListItemsResolver",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/pickup-collection/pickup-collection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PickupCollectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/pl-billing/pl-billing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlBillingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/pl-billing/wallet/wallet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WalletComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/shipping-transportation/shipping-transportation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingTransportationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/module/transport/transport-frame.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransportFrameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/bread-crumb/bread-crumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadCrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/jumbotron/elix-jumbotron.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElixJumbotronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/spinner/elix-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElixSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/spinner/spinner-state.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SpinnerStateService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/table/base-column.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseColumn",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/table/columns/column-area-text/column-area-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColumnAreaTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/table/columns/column-icon-action/column-icon-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColumnIconActionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/table/columns/column-text/column-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColumnTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/table/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/account/account.type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAccount",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/auth/auth-info-user.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthInfoResponse",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/auth/auth-info-user.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthInfoUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/data-table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTable",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/data-table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IConfigRouter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/data-table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITimer",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/data-table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITmsRouter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/newRepository/new-repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INewRepository",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/newRepository/new-repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWrapperRepository",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMarketData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMetricData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPlBillingData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPlBillingStatus",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/pl-billing/wrapper-pl-billing.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWrapperPlBilling",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/shared/bread-crumb.type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBreadCrumb",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/shared/iAction-material-column.type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IActionMaterialColumn",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/shared/iData-source-material-table.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDataSourceMaterialTable",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/transport/ibread-crumb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBreadCrumb",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/interfaces/user/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/abstract/abstract-api-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AbstractApiServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/abstract/global-error-handle.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GlobalErrorHandleService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/abstract/local-storage-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStorageDataService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/account/account.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AccountService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/data-table/data-table.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataTableService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/directives/btn-primary.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BtnPrimaryDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/directives/elix-drag.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ElixDragDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/directives/input-primary.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "InputPrimaryDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/firebase/connection.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ConnectionService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/guards/auth-guard.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuardGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/newRepository/new-repository.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NewRepositoryService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/newRepository/template-repository/template-repository.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TemplateRepositoryService",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/overlay/elix-tooltip.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ElixTooltipService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/overlay/overlay-pop-up.ref.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OverlayPopUpRef",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OverlayPopUpService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDialoConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/overlay/overlay-pop-up.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/overlay/overlay.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OverlayService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/pl-billing/pl-billing.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PlBillingService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/resolvers/account/account.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AccountResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/resolvers/newRepository/new-repository.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "NewRepositoryResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/resolvers/pl-billing/pl-billing.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "PlBillingResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/resolvers/table/table-data.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "TableDataResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/timer/timer.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TimerService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/transport/items/tooltip-items.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TooltipItemsService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/services/user/user-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header-cusotm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorLight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header-cusotm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}